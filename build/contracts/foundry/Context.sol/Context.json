{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-5/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":@uniswap/v3-periphery/=lib/uniswap-v3-periphery/\",\":account-abstraction-v7/=lib/account-abstraction-v7/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts-5/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-5/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/\",\":openzeppelin-contracts-5/=lib/openzeppelin-contracts-5/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-5/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","@uniswap/v3-periphery/=lib/uniswap-v3-periphery/","account-abstraction-v7/=lib/account-abstraction-v7/contracts/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/openzeppelin-contracts-5/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-5/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/murky/","openzeppelin-contracts-5/=lib/openzeppelin-contracts-5/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/Context.sol":"Context"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439","urls":["bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c","dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","id":64799,"exportedSymbols":{"Context":[64798]},"nodeType":"SourceUnit","src":"101:861:110","nodes":[{"id":64770,"nodeType":"PragmaDirective","src":"101:23:110","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":64798,"nodeType":"ContractDefinition","src":"623:338:110","nodes":[{"id":64780,"nodeType":"FunctionDefinition","src":"655:96:110","nodes":[],"body":{"id":64779,"nodeType":"Block","src":"717:34:110","nodes":[],"statements":[{"expression":{"expression":{"id":64776,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:110","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":64777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:110","memberName":"sender","nodeType":"MemberAccess","src":"734:10:110","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":64775,"id":64778,"nodeType":"Return","src":"727:17:110"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:110","parameters":{"id":64772,"nodeType":"ParameterList","parameters":[],"src":"674:2:110"},"returnParameters":{"id":64775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64780,"src":"708:7:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64773,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:110","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:110"},"scope":64798,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":64789,"nodeType":"FunctionDefinition","src":"757:99:110","nodes":[],"body":{"id":64788,"nodeType":"Block","src":"824:32:110","nodes":[],"statements":[{"expression":{"expression":{"id":64785,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:110","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":64786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:110","memberName":"data","nodeType":"MemberAccess","src":"841:8:110","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":64784,"id":64787,"nodeType":"Return","src":"834:15:110"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:110","parameters":{"id":64781,"nodeType":"ParameterList","parameters":[],"src":"774:2:110"},"returnParameters":{"id":64784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64789,"src":"808:14:110","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":64782,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:110","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:110"},"scope":64798,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":64797,"nodeType":"FunctionDefinition","src":"862:97:110","nodes":[],"body":{"id":64796,"nodeType":"Block","src":"934:25:110","nodes":[],"statements":[{"expression":{"hexValue":"30","id":64794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:110","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":64793,"id":64795,"nodeType":"Return","src":"944:8:110"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:110","parameters":{"id":64790,"nodeType":"ParameterList","parameters":[],"src":"891:2:110"},"returnParameters":{"id":64793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64797,"src":"925:7:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64791,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:110","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:110"},"scope":64798,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":64771,"nodeType":"StructuredDocumentation","src":"126:496:110","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[64798],"name":"Context","nameLocation":"641:7:110","scope":64799,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":110}