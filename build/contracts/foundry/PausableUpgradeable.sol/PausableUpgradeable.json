{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "paused()": "5c975abb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=installed_contracts/forge-std/lib/ds-test/src/\",\":forge-std/=installed_contracts/forge-std/src/\",\":murky/=installed_contracts/murky/src/\",\":openzeppelin-contracts/=installed_contracts/murky/lib/openzeppelin-contracts/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.11+commit.d7f03943"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-test/=installed_contracts/forge-std/lib/ds-test/src/",
        ":forge-std/=installed_contracts/forge-std/src/",
        ":murky/=installed_contracts/murky/src/",
        ":openzeppelin-contracts/=installed_contracts/murky/lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": "PausableUpgradeable"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba",
        "urls": [
          "bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8",
          "dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d",
        "urls": [
          "bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9",
          "dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d",
        "urls": [
          "bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f",
          "dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
    "id": 38422,
    "exportedSymbols": {
      "AddressUpgradeable": [
        39438
      ],
      "ContextUpgradeable": [
        39480
      ],
      "Initializable": [
        38310
      ],
      "PausableUpgradeable": [
        38421
      ]
    },
    "nodeType": "SourceUnit",
    "src": "90:2674:39",
    "nodes": [
      {
        "id": 38312,
        "nodeType": "PragmaDirective",
        "src": "90:23:39",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 38313,
        "nodeType": "ImportDirective",
        "src": "115:41:39",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "file": "../utils/ContextUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38422,
        "sourceUnit": 39481,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38314,
        "nodeType": "ImportDirective",
        "src": "157:42:39",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38422,
        "sourceUnit": 38311,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38421,
        "nodeType": "ContractDefinition",
        "src": "641:2122:39",
        "nodes": [
          {
            "id": 38324,
            "nodeType": "EventDefinition",
            "src": "800:30:39",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 38320,
              "nodeType": "StructuredDocumentation",
              "src": "722:73:39",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "name": "Paused",
            "nameLocation": "806:6:39",
            "parameters": {
              "id": 38323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38322,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "821:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 38324,
                  "src": "813:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "812:17:39"
            }
          },
          {
            "id": 38329,
            "nodeType": "EventDefinition",
            "src": "911:32:39",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 38325,
              "nodeType": "StructuredDocumentation",
              "src": "836:70:39",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "name": "Unpaused",
            "nameLocation": "917:8:39",
            "parameters": {
              "id": 38328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38327,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "934:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 38329,
                  "src": "926:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "925:17:39"
            }
          },
          {
            "id": 38331,
            "nodeType": "VariableDeclaration",
            "src": "949:20:39",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "962:7:39",
            "scope": 38421,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 38330,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "949:4:39",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 38341,
            "nodeType": "FunctionDefinition",
            "src": "1048:97:39",
            "nodes": [],
            "body": {
              "id": 38340,
              "nodeType": "Block",
              "src": "1101:44:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38337,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38351,
                      "src": "1111:25:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 38338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:27:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38339,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:27:39"
                }
              ]
            },
            "documentation": {
              "id": 38332,
              "nodeType": "StructuredDocumentation",
              "src": "976:67:39",
              "text": " @dev Initializes the contract in unpaused state."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38335,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38334,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38253,
                  "src": "1084:16:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1084:16:39"
              }
            ],
            "name": "__Pausable_init",
            "nameLocation": "1057:15:39",
            "parameters": {
              "id": 38333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1072:2:39"
            },
            "returnParameters": {
              "id": 38336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:0:39"
            },
            "scope": 38421,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38351,
            "nodeType": "FunctionDefinition",
            "src": "1151:95:39",
            "nodes": [],
            "body": {
              "id": 38350,
              "nodeType": "Block",
              "src": "1214:32:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38346,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38331,
                      "src": "1224:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 38347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1234:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1224:15:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38349,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:15:39"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38343,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38253,
                  "src": "1197:16:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1197:16:39"
              }
            ],
            "name": "__Pausable_init_unchained",
            "nameLocation": "1160:25:39",
            "parameters": {
              "id": 38342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1185:2:39"
            },
            "returnParameters": {
              "id": 38345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1214:0:39"
            },
            "scope": 38421,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38360,
            "nodeType": "FunctionDefinition",
            "src": "1341:84:39",
            "nodes": [],
            "body": {
              "id": 38359,
              "nodeType": "Block",
              "src": "1394:31:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38357,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38331,
                    "src": "1411:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 38356,
                  "id": 38358,
                  "nodeType": "Return",
                  "src": "1404:14:39"
                }
              ]
            },
            "documentation": {
              "id": 38352,
              "nodeType": "StructuredDocumentation",
              "src": "1252:84:39",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "1350:6:39",
            "parameters": {
              "id": 38353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:2:39"
            },
            "returnParameters": {
              "id": 38356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38355,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38360,
                  "src": "1388:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 38354,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:6:39"
            },
            "scope": 38421,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 38372,
            "nodeType": "ModifierDefinition",
            "src": "1611:91:39",
            "nodes": [],
            "body": {
              "id": 38371,
              "nodeType": "Block",
              "src": "1636:66:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1654:9:39",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38364,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38360,
                            "src": "1655:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 38365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1655:8:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 38367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1665:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 38363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1646:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1646:38:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38369,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:38:39"
                },
                {
                  "id": 38370,
                  "nodeType": "PlaceholderStatement",
                  "src": "1694:1:39"
                }
              ]
            },
            "documentation": {
              "id": 38361,
              "nodeType": "StructuredDocumentation",
              "src": "1431:175:39",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "name": "whenNotPaused",
            "nameLocation": "1620:13:39",
            "parameters": {
              "id": 38362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1633:2:39"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38383,
            "nodeType": "ModifierDefinition",
            "src": "1880:91:39",
            "nodes": [],
            "body": {
              "id": 38382,
              "nodeType": "Block",
              "src": "1902:69:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 38376,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38360,
                          "src": "1920:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 38377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1920:8:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 38378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1930:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 38375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1912:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1912:41:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38380,
                  "nodeType": "ExpressionStatement",
                  "src": "1912:41:39"
                },
                {
                  "id": 38381,
                  "nodeType": "PlaceholderStatement",
                  "src": "1963:1:39"
                }
              ]
            },
            "documentation": {
              "id": 38373,
              "nodeType": "StructuredDocumentation",
              "src": "1708:167:39",
              "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
            },
            "name": "whenPaused",
            "nameLocation": "1889:10:39",
            "parameters": {
              "id": 38374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1899:2:39"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38399,
            "nodeType": "FunctionDefinition",
            "src": "2106:115:39",
            "nodes": [],
            "body": {
              "id": 38398,
              "nodeType": "Block",
              "src": "2155:66:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38389,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38331,
                      "src": "2165:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 38390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2175:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2165:14:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38392,
                  "nodeType": "ExpressionStatement",
                  "src": "2165:14:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 38394,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39465,
                          "src": "2201:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 38395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2201:12:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38393,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38324,
                      "src": "2194:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2194:20:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38397,
                  "nodeType": "EmitStatement",
                  "src": "2189:25:39"
                }
              ]
            },
            "documentation": {
              "id": 38384,
              "nodeType": "StructuredDocumentation",
              "src": "1977:124:39",
              "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38387,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38386,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38372,
                  "src": "2141:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2141:13:39"
              }
            ],
            "name": "_pause",
            "nameLocation": "2115:6:39",
            "parameters": {
              "id": 38385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2121:2:39"
            },
            "returnParameters": {
              "id": 38388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:0:39"
            },
            "scope": 38421,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 38415,
            "nodeType": "FunctionDefinition",
            "src": "2353:117:39",
            "nodes": [],
            "body": {
              "id": 38414,
              "nodeType": "Block",
              "src": "2401:69:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38405,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38331,
                      "src": "2411:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 38406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2421:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2411:15:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38408,
                  "nodeType": "ExpressionStatement",
                  "src": "2411:15:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 38410,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39465,
                          "src": "2450:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 38411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2450:12:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38409,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38329,
                      "src": "2441:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2441:22:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38413,
                  "nodeType": "EmitStatement",
                  "src": "2436:27:39"
                }
              ]
            },
            "documentation": {
              "id": 38400,
              "nodeType": "StructuredDocumentation",
              "src": "2227:121:39",
              "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38403,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38402,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38383,
                  "src": "2390:10:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2390:10:39"
              }
            ],
            "name": "_unpause",
            "nameLocation": "2362:8:39",
            "parameters": {
              "id": 38401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2370:2:39"
            },
            "returnParameters": {
              "id": 38404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2401:0:39"
            },
            "scope": 38421,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 38420,
            "nodeType": "VariableDeclaration",
            "src": "2735:25:39",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38416,
              "nodeType": "StructuredDocumentation",
              "src": "2476:254:39",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "2755:5:39",
            "scope": 38421,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 38417,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2735:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 38419,
              "length": {
                "hexValue": "3439",
                "id": 38418,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2743:2:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "2735:11:39",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 38316,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38310,
              "src": "682:13:39"
            },
            "id": 38317,
            "nodeType": "InheritanceSpecifier",
            "src": "682:13:39"
          },
          {
            "baseName": {
              "id": 38318,
              "name": "ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39480,
              "src": "697:18:39"
            },
            "id": 38319,
            "nodeType": "InheritanceSpecifier",
            "src": "697:18:39"
          }
        ],
        "canonicalName": "PausableUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 38315,
          "nodeType": "StructuredDocumentation",
          "src": "201:439:39",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38421,
          39480,
          38310
        ],
        "name": "PausableUpgradeable",
        "nameLocation": "659:19:39",
        "scope": 38422,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 39
}