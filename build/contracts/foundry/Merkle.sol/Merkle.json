{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "node",
          "type": "uint256"
        }
      ],
      "name": "getProof",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "getRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeafPairs",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2ceil_bitmagic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "log2ceil_naive",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "valueToProve",
          "type": "bytes32"
        }
      ],
      "name": "verifyProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506108f0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806308d7090a146100675780631e0ce39a1461008d5780632e08d602146100a057806358161a42146100b3578063b8616195146100d6578063dd1d2599146100f6575b600080fd5b61007a61007536600461067c565b610109565b6040519081526020015b60405180910390f35b61007a61009b36600461067c565b610134565b61007a6100ae366004610746565b610271565b6100c66100c1366004610783565b610311565b6040519015158152602001610084565b6100e96100e43660046107d3565b61035b565b6040516100849190610818565b61007a61010436600461085c565b6104e2565b6000808219600101831683145b831561012c57600193841c939190910190610116565b900392915050565b60006001821161014657506000919050565b600082600160801b811061016757608093841c93610164908361087e565b91505b68010000000000000000841061018a57604093841c93610187908361087e565b91505b64010000000084106101a957602093841c936101a6908361087e565b91505b6201000084106101c657601093841c936101c3908361087e565b91505b61010084106101e257600893841c936101df908361087e565b91505b601084106101fd57600493841c936101fa908361087e565b91505b6004841061021857600293841c93610215908361087e565b91505b6002841061022e5761022b60018361087e565b91505b60008161023d8119600161087e565b169050818114801561024f5750600083115b1561025d5750909392505050565b61026883600161087e565b95945050505050565b600060018251116102d55760405162461bcd60e51b815260206004820152602360248201527f776f6e27742067656e657261746520726f6f7420666f722073696e676c65206c60448201526232b0b360e91b60648201526084015b60405180910390fd5b6001825111156102ef576102e882610510565b91506102d5565b81600081518110610302576103026108a4565b60200260200101519050919050565b81516000908290825b8181101561034f5761034583878381518110610338576103386108a4565b60200260200101516104e2565b925060010161031a565b50509093149392505050565b606060018351116103ba5760405162461bcd60e51b8152602060048201526024808201527f776f6e27742067656e65726174652070726f6f6620666f722073696e676c65206044820152633632b0b360e11b60648201526084016102cc565b60006103c68451610109565b67ffffffffffffffff8111156103de576103de610695565b604051908082528060200260200182016040528015610407578160200160208202803683370190505b50905060005b6001855111156104da57836001166001141561046357846001850381518110610438576104386108a4565b6020026020010151828281518110610452576104526108a4565b6020026020010181815250506104c1565b8451846001011415610485576000801b828281518110610452576104526108a4565b84846001018151811061049a5761049a6108a4565b60200260200101518282815181106104b4576104b46108a4565b6020026020010181815250505b6001016002840493506104d385610510565b945061040d565b509392505050565b600081831080156104fa578360005282602052610503565b82600052836020525b5050604060002092915050565b80516060908190600180821614156105bd576002810460010167ffffffffffffffff81111561054157610541610695565b60405190808252806020026020018201604052801561056a578160200160208202803683370190505b509150610596846001830381518110610585576105856108a4565b60200260200101516000801b6104e2565b826001845103815181106105ac576105ac6108a4565b602002602001018181525050610606565b6002810467ffffffffffffffff8111156105d9576105d9610695565b604051908082528060200260200182016040528015610602578160200160208202803683370190505b5091505b6000805b600183038110156106725761064786828151811061062a5761062a6108a4565b6020026020010151878360010181518110610338576103386108a4565b848381518110610659576106596108a4565b602090810291909101015260019091019060020161060a565b5091949350505050565b60006020828403121561068e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126106bc57600080fd5b8135602067ffffffffffffffff808311156106d9576106d9610695565b8260051b604051601f19603f830116810181811084821117156106fe576106fe610695565b60405293845285810183019383810192508785111561071c57600080fd5b83870191505b8482101561073b57813583529183019190830190610722565b979650505050505050565b60006020828403121561075857600080fd5b813567ffffffffffffffff81111561076f57600080fd5b61077b848285016106ab565b949350505050565b60008060006060848603121561079857600080fd5b83359250602084013567ffffffffffffffff8111156107b657600080fd5b6107c2868287016106ab565b925050604084013590509250925092565b600080604083850312156107e657600080fd5b823567ffffffffffffffff8111156107fd57600080fd5b610809858286016106ab565b95602094909401359450505050565b6020808252825182820181905260009190848201906040850190845b8181101561085057835183529284019291840191600101610834565b50909695505050505050565b6000806040838503121561086f57600080fd5b50508035926020909101359150565b6000821982111561089f57634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a0428ca7fb7444c81e6bca68f4919f3c2e6e7b41f726571ff41d6b6bae21649564736f6c634300080b0033",
    "sourceMap": "242:576:15:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806308d7090a146100675780631e0ce39a1461008d5780632e08d602146100a057806358161a42146100b3578063b8616195146100d6578063dd1d2599146100f6575b600080fd5b61007a61007536600461067c565b610109565b6040519081526020015b60405180910390f35b61007a61009b36600461067c565b610134565b61007a6100ae366004610746565b610271565b6100c66100c1366004610783565b610311565b6040519015158152602001610084565b6100e96100e43660046107d3565b61035b565b6040516100849190610818565b61007a61010436600461085c565b6104e2565b6000808219600101831683145b831561012c57600193841c939190910190610116565b900392915050565b60006001821161014657506000919050565b600082600160801b811061016757608093841c93610164908361087e565b91505b68010000000000000000841061018a57604093841c93610187908361087e565b91505b64010000000084106101a957602093841c936101a6908361087e565b91505b6201000084106101c657601093841c936101c3908361087e565b91505b61010084106101e257600893841c936101df908361087e565b91505b601084106101fd57600493841c936101fa908361087e565b91505b6004841061021857600293841c93610215908361087e565b91505b6002841061022e5761022b60018361087e565b91505b60008161023d8119600161087e565b169050818114801561024f5750600083115b1561025d5750909392505050565b61026883600161087e565b95945050505050565b600060018251116102d55760405162461bcd60e51b815260206004820152602360248201527f776f6e27742067656e657261746520726f6f7420666f722073696e676c65206c60448201526232b0b360e91b60648201526084015b60405180910390fd5b6001825111156102ef576102e882610510565b91506102d5565b81600081518110610302576103026108a4565b60200260200101519050919050565b81516000908290825b8181101561034f5761034583878381518110610338576103386108a4565b60200260200101516104e2565b925060010161031a565b50509093149392505050565b606060018351116103ba5760405162461bcd60e51b8152602060048201526024808201527f776f6e27742067656e65726174652070726f6f6620666f722073696e676c65206044820152633632b0b360e11b60648201526084016102cc565b60006103c68451610109565b67ffffffffffffffff8111156103de576103de610695565b604051908082528060200260200182016040528015610407578160200160208202803683370190505b50905060005b6001855111156104da57836001166001141561046357846001850381518110610438576104386108a4565b6020026020010151828281518110610452576104526108a4565b6020026020010181815250506104c1565b8451846001011415610485576000801b828281518110610452576104526108a4565b84846001018151811061049a5761049a6108a4565b60200260200101518282815181106104b4576104b46108a4565b6020026020010181815250505b6001016002840493506104d385610510565b945061040d565b509392505050565b600081831080156104fa578360005282602052610503565b82600052836020525b5050604060002092915050565b80516060908190600180821614156105bd576002810460010167ffffffffffffffff81111561054157610541610695565b60405190808252806020026020018201604052801561056a578160200160208202803683370190505b509150610596846001830381518110610585576105856108a4565b60200260200101516000801b6104e2565b826001845103815181106105ac576105ac6108a4565b602002602001018181525050610606565b6002810467ffffffffffffffff8111156105d9576105d9610695565b604051908082528060200260200182016040528015610602578160200160208202803683370190505b5091505b6000805b600183038110156106725761064786828151811061062a5761062a6108a4565b6020026020010151878360010181518110610338576103386108a4565b848381518110610659576106596108a4565b602090810291909101015260019091019060020161060a565b5091949350505050565b60006020828403121561068e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126106bc57600080fd5b8135602067ffffffffffffffff808311156106d9576106d9610695565b8260051b604051601f19603f830116810181811084821117156106fe576106fe610695565b60405293845285810183019383810192508785111561071c57600080fd5b83870191505b8482101561073b57813583529183019190830190610722565b979650505050505050565b60006020828403121561075857600080fd5b813567ffffffffffffffff81111561076f57600080fd5b61077b848285016106ab565b949350505050565b60008060006060848603121561079857600080fd5b83359250602084013567ffffffffffffffff8111156107b657600080fd5b6107c2868287016106ab565b925050604084013590509250925092565b600080604083850312156107e657600080fd5b823567ffffffffffffffff8111156107fd57600080fd5b610809858286016106ab565b95602094909401359450505050565b6020808252825182820181905260009190848201906040850190845b8181101561085057835183529284019291840191600101610834565b50909695505050505050565b6000806040838503121561086f57600080fd5b50508035926020909101359150565b6000821982111561089f57634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a0428ca7fb7444c81e6bca68f4919f3c2e6e7b41f726571ff41d6b6bae21649564736f6c634300080b0033",
    "sourceMap": "242:576:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3597:1427:16;;;;;;:::i;:::-;;:::i;:::-;;;345:25:43;;;333:2;318:18;3597:1427:16;;;;;;;;5176:949;;;;;;:::i;:::-;;:::i;980:253::-;;;;;;:::i;:::-;;:::i;447:449::-;;;;;;:::i;:::-;;:::i;:::-;;;2609:14:43;;2602:22;2584:41;;2572:2;2557:18;447:449:16;2444:187:43;1239:1166:16;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;407:409:15:-;;;;;;:::i;:::-;;:::i;3597:1427:16:-;3653:7;;4674:6;;4682:1;4670:14;4666:22;;4663:29;;4870:78;4877:5;;4870:78;;4908:1;4902:7;;;;4927:6;;;;;4870:78;;;4961:12;;;3597:1427;-1:-1:-1;;3597:1427:16:o;5176:949::-;5235:7;5262:1;5257;:6;5253:45;;-1:-1:-1;5286:1:16;;5176:949;-1:-1:-1;5176:949:16:o;5253:45::-;5307:11;5341:1;-1:-1:-1;;;5356:11:16;;5352:75;;5389:3;5383:9;;;;5406:10;;;;:::i;:::-;;;5352:75;5445:5;5440:1;:10;5436:72;;5472:2;5466:8;;;;5488:9;;;;:::i;:::-;;;5436:72;5526:5;5521:1;:10;5517:72;;5553:2;5547:8;;;;5569:9;;;;:::i;:::-;;;5517:72;5607:5;5602:1;:10;5598:72;;5634:2;5628:8;;;;5650:9;;;;:::i;:::-;;;5598:72;5688:4;5683:1;:9;5679:69;;5714:1;5708:7;;;;5729:8;;;;:::i;:::-;;;5679:69;5766:4;5761:1;:9;5757:69;;5792:1;5786:7;;;;5807:8;;;;:::i;:::-;;;5757:69;5844:4;5839:1;:9;5835:69;;5870:1;5864:7;;;;5885:8;;;;:::i;:::-;;;5835:69;5922:4;5917:1;:9;5913:48;;5942:8;5949:1;5942:8;;:::i;:::-;;;5913:48;5971:11;5997:2;5986:7;:3;;5992:1;5986:7;:::i;:::-;5985:14;5971:28;;6021:2;6014:3;:9;6013:24;;;;;6035:1;6029:3;:7;6013:24;6009:110;;;-1:-1:-1;6060:3:16;;5176:949;-1:-1:-1;;;5176:949:16:o;6009:110::-;6101:7;:3;6107:1;6101:7;:::i;:::-;6094:14;5176:949;-1:-1:-1;;;;;5176:949:16:o;980:253::-;1041:7;1082:1;1068:4;:11;:15;1060:63;;;;-1:-1:-1;;;1060:63:16;;4379:2:43;1060:63:16;;;4361:21:43;4418:2;4398:18;;;4391:30;4457:34;4437:18;;;4430:62;-1:-1:-1;;;4508:18:43;;;4501:33;4551:19;;1060:63:16;;;;;;;;;1153:1;1139:4;:11;:15;1133:70;;;1177:15;1187:4;1177:9;:15::i;:::-;1170:22;;1133:70;;;1219:4;1224:1;1219:7;;;;;;;;:::i;:::-;;;;;;;1212:14;;980:253;;;:::o;447:449::-;683:12;;549:4;;644:12;;549:4;729:115;749:6;745:1;:10;729:115;;;793:36;807:11;820:5;826:1;820:8;;;;;;;;:::i;:::-;;;;;;;793:13;:36::i;:::-;779:50;-1:-1:-1;757:3:16;;729:115;;;-1:-1:-1;;870:19:16;;;;447:449;-1:-1:-1;;;447:449:16:o;1239:1166::-;1315:16;1365:1;1351:4;:11;:15;1343:64;;;;-1:-1:-1;;;1343:64:16;;4915:2:43;1343:64:16;;;4897:21:43;4954:2;4934:18;;;4927:30;4993:34;4973:18;;;4966:62;-1:-1:-1;;;5044:18:43;;;5037:34;5088:19;;1343:64:16;4713:400:43;1343:64:16;1494:23;1534:27;1549:4;:11;1534:14;:27::i;:::-;1520:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1520:42:16;;1494:68;;1572:11;1901:475;1921:1;1907:4;:11;:15;1901:475;;;1969:4;1976:3;1969:10;1983:1;1969:15;1966:300;;;2022:4;2034:1;2027:4;:8;2022:14;;;;;;;;:::i;:::-;;;;;;;2008:6;2015:3;2008:11;;;;;;;;:::i;:::-;;;;;;:28;;;;;1966:300;;;2094:4;:11;2082:4;2089:1;2082:8;:23;2078:188;;;2151:1;2143:10;;2129:6;2136:3;2129:11;;;;;;;;:::i;2078:188::-;2233:4;2238;2245:1;2238:8;2233:14;;;;;;;;:::i;:::-;;;;;;;2219:6;2226:3;2219:11;;;;;;;;:::i;:::-;;;;;;:28;;;;;2078:188;2283:5;;2314:1;2306:9;;;;2350:15;2360:4;2350:9;:15::i;:::-;2343:22;;1901:475;;;-1:-1:-1;2392:6:16;1239:1166;-1:-1:-1;;;1239:1166:16:o;407:409:15:-;489:13;542:15;;;569:89;;;;707:4;702:3;695:17;741:5;735:4;728:19;535:225;;569:89;605:5;600:3;593:18;640:4;634;627:18;535:225;-1:-1:-1;;796:4:15;791:3;781:20;;407:409;-1:-1:-1;;407:409:15:o;2484:990:16:-;2886:11;;2548:16;;;;2924:3;2915:12;;;:17;2911:251;;;2983:1;2974:6;:10;2987:1;2974:14;2960:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2960:29:16;;2951:38;;3035:43;3049:4;3063:1;3054:6;:10;3049:16;;;;;;;;:::i;:::-;;;;;;;3075:1;3067:10;;3035:13;:43::i;:::-;3007:6;3030:1;3014:6;:13;:17;3007:25;;;;;;;;:::i;:::-;;;;;;:71;;;;;2911:251;;;3149:1;3140:6;:10;3126:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3126:25:16;;3117:34;;2911:251;3264:11;3298:9;3293:142;3324:1;3317:6;:8;3313:1;:12;3293:142;;;3364:33;3378:4;3383:1;3378:7;;;;;;;;:::i;:::-;;;;;;;3387:4;3392:1;3394;3392:3;3387:9;;;;;;;;:::i;3364:33::-;3350:6;3357:3;3350:11;;;;;;;;:::i;:::-;;;;;;;;;;:47;3415:5;;;;;3330:1;3327:4;3293:142;;;-1:-1:-1;3461:6:16;;2484:990;-1:-1:-1;;;;2484:990:16:o;14:180:43:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:43;;14:180;-1:-1:-1;14:180:43:o;381:127::-;442:10;437:3;433:20;430:1;423:31;473:4;470:1;463:15;497:4;494:1;487:15;513:902;567:5;620:3;613:4;605:6;601:17;597:27;587:55;;638:1;635;628:12;587:55;674:6;661:20;700:4;723:18;760:2;756;753:10;750:36;;;766:18;;:::i;:::-;812:2;809:1;805:10;844:2;838:9;907:2;903:7;898:2;894;890:11;886:25;878:6;874:38;962:6;950:10;947:22;942:2;930:10;927:18;924:46;921:72;;;973:18;;:::i;:::-;1009:2;1002:22;1059:18;;;1135:15;;;1131:24;;;1093:15;;;;-1:-1:-1;1167:15:43;;;1164:35;;;1195:1;1192;1185:12;1164:35;1231:2;1223:6;1219:15;1208:26;;1243:142;1259:6;1254:3;1251:15;1243:142;;;1325:17;;1313:30;;1363:12;;;;1276;;;;1243:142;;;1403:6;513:902;-1:-1:-1;;;;;;;513:902:43:o;1420:348::-;1504:6;1557:2;1545:9;1536:7;1532:23;1528:32;1525:52;;;1573:1;1570;1563:12;1525:52;1613:9;1600:23;1646:18;1638:6;1635:30;1632:50;;;1678:1;1675;1668:12;1632:50;1701:61;1754:7;1745:6;1734:9;1730:22;1701:61;:::i;:::-;1691:71;1420:348;-1:-1:-1;;;;1420:348:43:o;1955:484::-;2057:6;2065;2073;2126:2;2114:9;2105:7;2101:23;2097:32;2094:52;;;2142:1;2139;2132:12;2094:52;2178:9;2165:23;2155:33;;2239:2;2228:9;2224:18;2211:32;2266:18;2258:6;2255:30;2252:50;;;2298:1;2295;2288:12;2252:50;2321:61;2374:7;2365:6;2354:9;2350:22;2321:61;:::i;:::-;2311:71;;;2429:2;2418:9;2414:18;2401:32;2391:42;;1955:484;;;;;:::o;2636:416::-;2729:6;2737;2790:2;2778:9;2769:7;2765:23;2761:32;2758:52;;;2806:1;2803;2796:12;2758:52;2846:9;2833:23;2879:18;2871:6;2868:30;2865:50;;;2911:1;2908;2901:12;2865:50;2934:61;2987:7;2978:6;2967:9;2963:22;2934:61;:::i;:::-;2924:71;3042:2;3027:18;;;;3014:32;;-1:-1:-1;;;;2636:416:43:o;3057:632::-;3228:2;3280:21;;;3350:13;;3253:18;;;3372:22;;;3199:4;;3228:2;3451:15;;;;3425:2;3410:18;;;3199:4;3494:169;3508:6;3505:1;3502:13;3494:169;;;3569:13;;3557:26;;3638:15;;;;3603:12;;;;3530:1;3523:9;3494:169;;;-1:-1:-1;3680:3:43;;3057:632;-1:-1:-1;;;;;;3057:632:43:o;3694:248::-;3762:6;3770;3823:2;3811:9;3802:7;3798:23;3794:32;3791:52;;;3839:1;3836;3829:12;3791:52;-1:-1:-1;;3862:23:43;;;3932:2;3917:18;;;3904:32;;-1:-1:-1;3694:248:43:o;3947:225::-;3987:3;4018:1;4014:6;4011:1;4008:13;4005:136;;;4063:10;4058:3;4054:20;4051:1;4044:31;4098:4;4095:1;4088:15;4126:4;4123:1;4116:15;4005:136;-1:-1:-1;4157:9:43;;3947:225::o;4581:127::-;4642:10;4637:3;4633:20;4630:1;4623:31;4673:4;4670:1;4663:15;4697:4;4694:1;4687:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getProof(bytes32[],uint256)": "b8616195",
    "getRoot(bytes32[])": "2e08d602",
    "hashLeafPairs(bytes32,bytes32)": "dd1d2599",
    "log2ceil_bitmagic(uint256)": "1e0ce39a",
    "log2ceil_naive(uint256)": "08d7090a",
    "verifyProof(bytes32,bytes32[],bytes32)": "58161a42"
  },
  "ast": {
    "absolutePath": "installed_contracts/murky/src/Merkle.sol",
    "id": 30779,
    "exportedSymbols": {
      "Merkle": [
        30778
      ],
      "MurkyBase": [
        31294
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:786:15",
    "nodes": [
      {
        "id": 30760,
        "nodeType": "PragmaDirective",
        "src": "32:23:15",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 30761,
        "nodeType": "ImportDirective",
        "src": "57:32:15",
        "absolutePath": "installed_contracts/murky/src/common/MurkyBase.sol",
        "file": "./common/MurkyBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30779,
        "sourceUnit": 31295,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30778,
        "nodeType": "ContractDefinition",
        "src": "242:576:15",
        "nodes": [
          {
            "id": 30777,
            "nodeType": "FunctionDefinition",
            "src": "407:409:15",
            "body": {
              "id": 30776,
              "nodeType": "Block",
              "src": "504:312:15",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "522:288:15",
                    "statements": [
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "576:82:15",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "600:3:15",
                                        "type": "",
                                        "value": "0x0"
                                      },
                                      {
                                        "name": "right",
                                        "nodeType": "YulIdentifier",
                                        "src": "605:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "593:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "593:18:15"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "593:18:15"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "634:4:15",
                                        "type": "",
                                        "value": "0x20"
                                      },
                                      {
                                        "name": "left",
                                        "nodeType": "YulIdentifier",
                                        "src": "640:4:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "627:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "627:18:15"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "627:18:15"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "569:89:15",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "574:1:15",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "678:82:15",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "702:3:15",
                                        "type": "",
                                        "value": "0x0"
                                      },
                                      {
                                        "name": "left",
                                        "nodeType": "YulIdentifier",
                                        "src": "707:4:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "695:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "695:17:15"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "695:17:15"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "735:4:15",
                                        "type": "",
                                        "value": "0x20"
                                      },
                                      {
                                        "name": "right",
                                        "nodeType": "YulIdentifier",
                                        "src": "741:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "728:6:15"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "728:19:15"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "728:19:15"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "670:90:15",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "name": "left",
                              "nodeType": "YulIdentifier",
                              "src": "545:4:15"
                            },
                            {
                              "name": "right",
                              "nodeType": "YulIdentifier",
                              "src": "551:5:15"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "542:2:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "542:15:15"
                        },
                        "nodeType": "YulSwitch",
                        "src": "535:225:15"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "772:29:15",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "791:3:15",
                              "type": "",
                              "value": "0x0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "796:4:15",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "781:9:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "781:20:15"
                        },
                        "variableNames": [
                          {
                            "name": "_hash",
                            "nodeType": "YulIdentifier",
                            "src": "772:5:15"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 30773,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "772:5:15",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30767,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "545:4:15",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30767,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "640:4:15",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30767,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "707:4:15",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30769,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "551:5:15",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30769,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "605:5:15",
                      "valueSize": 1
                    },
                    {
                      "declaration": 30769,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "741:5:15",
                      "valueSize": 1
                    }
                  ],
                  "id": 30775,
                  "nodeType": "InlineAssembly",
                  "src": "513:297:15"
                }
              ]
            },
            "baseFunctions": [
              30793
            ],
            "documentation": {
              "id": 30765,
              "nodeType": "StructuredDocumentation",
              "src": "356:46:15",
              "text": "ascending sort and concat prior to hashing"
            },
            "functionSelector": "dd1d2599",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashLeafPairs",
            "nameLocation": "416:13:15",
            "overrides": {
              "id": 30771,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "471:8:15"
            },
            "parameters": {
              "id": 30770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30767,
                  "mutability": "mutable",
                  "name": "left",
                  "nameLocation": "438:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 30777,
                  "src": "430:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30766,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30769,
                  "mutability": "mutable",
                  "name": "right",
                  "nameLocation": "452:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 30777,
                  "src": "444:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30768,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "429:29:15"
            },
            "returnParameters": {
              "id": 30774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30773,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "497:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 30777,
                  "src": "489:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30772,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "488:15:15"
            },
            "scope": 30778,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30763,
              "name": "MurkyBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31294,
              "src": "261:9:15"
            },
            "id": 30764,
            "nodeType": "InheritanceSpecifier",
            "src": "261:9:15"
          }
        ],
        "canonicalName": "Merkle",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 30762,
          "nodeType": "StructuredDocumentation",
          "src": "91:151:15",
          "text": "@notice Nascent, simple, kinda efficient (and improving!) Merkle proof generator and verifier\n @author dmfxyz\n @dev Note Generic Merkle Tree"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30778,
          31294
        ],
        "name": "Merkle",
        "nameLocation": "251:6:15",
        "scope": 30779,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 15
}