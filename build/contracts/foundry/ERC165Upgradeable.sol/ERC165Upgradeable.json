{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
    "id": 35041,
    "exportedSymbols": {
      "AddressUpgradeable": [
        34251
      ],
      "ERC165Upgradeable": [
        35040
      ],
      "IERC165Upgradeable": [
        35052
      ],
      "Initializable": [
        33123
      ]
    },
    "nodeType": "SourceUnit",
    "src": "99:1421:37",
    "nodes": [
      {
        "id": 34998,
        "nodeType": "PragmaDirective",
        "src": "99:23:37",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 34999,
        "nodeType": "ImportDirective",
        "src": "124:34:37",
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "file": "./IERC165Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35041,
        "sourceUnit": 35053,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35000,
        "nodeType": "ImportDirective",
        "src": "159:45:37",
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35041,
        "sourceUnit": 33124,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35040,
        "nodeType": "ContractDefinition",
        "src": "783:736:37",
        "nodes": [
          {
            "id": 35011,
            "nodeType": "FunctionDefinition",
            "src": "862:58:37",
            "body": {
              "id": 35010,
              "nodeType": "Block",
              "src": "913:7:37",
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35008,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35007,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33066,
                  "src": "896:16:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "896:16:37"
              }
            ],
            "name": "__ERC165_init",
            "nameLocation": "871:13:37",
            "parameters": {
              "id": 35006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "884:2:37"
            },
            "returnParameters": {
              "id": 35009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:0:37"
            },
            "scope": 35040,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35017,
            "nodeType": "FunctionDefinition",
            "src": "926:68:37",
            "body": {
              "id": 35016,
              "nodeType": "Block",
              "src": "987:7:37",
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35014,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35013,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33066,
                  "src": "970:16:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "970:16:37"
              }
            ],
            "name": "__ERC165_init_unchained",
            "nameLocation": "935:23:37",
            "parameters": {
              "id": 35012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:2:37"
            },
            "returnParameters": {
              "id": 35015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "987:0:37"
            },
            "scope": 35040,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35034,
            "nodeType": "FunctionDefinition",
            "src": "1060:166:37",
            "body": {
              "id": 35033,
              "nodeType": "Block",
              "src": "1151:75:37",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 35031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 35026,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35020,
                      "src": "1168:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 35028,
                            "name": "IERC165Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35052,
                            "src": "1188:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$35052_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$35052_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          ],
                          "id": 35027,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "1183:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 35029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1183:24:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$35052",
                          "typeString": "type(contract IERC165Upgradeable)"
                        }
                      },
                      "id": 35030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "1183:36:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1168:51:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 35025,
                  "id": 35032,
                  "nodeType": "Return",
                  "src": "1161:58:37"
                }
              ]
            },
            "baseFunctions": [
              35051
            ],
            "documentation": {
              "id": 35018,
              "nodeType": "StructuredDocumentation",
              "src": "999:56:37",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1069:17:37",
            "overrides": {
              "id": 35022,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1127:8:37"
            },
            "parameters": {
              "id": 35021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35020,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1094:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 35034,
                  "src": "1087:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 35019,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1086:20:37"
            },
            "returnParameters": {
              "id": 35025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35034,
                  "src": "1145:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35023,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1144:6:37"
            },
            "scope": 35040,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 35039,
            "nodeType": "VariableDeclaration",
            "src": "1491:25:37",
            "constant": false,
            "documentation": {
              "id": 35035,
              "nodeType": "StructuredDocumentation",
              "src": "1232:254:37",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1511:5:37",
            "scope": 35040,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 35036,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1491:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 35038,
              "length": {
                "hexValue": "3530",
                "id": 35037,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1499:2:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1491:11:37",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 35002,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33123,
              "src": "822:13:37"
            },
            "id": 35003,
            "nodeType": "InheritanceSpecifier",
            "src": "822:13:37"
          },
          {
            "baseName": {
              "id": 35004,
              "name": "IERC165Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35052,
              "src": "837:18:37"
            },
            "id": 35005,
            "nodeType": "InheritanceSpecifier",
            "src": "837:18:37"
          }
        ],
        "canonicalName": "ERC165Upgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 35001,
          "nodeType": "StructuredDocumentation",
          "src": "206:576:37",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35040,
          35052,
          33123
        ],
        "name": "ERC165Upgradeable",
        "nameLocation": "801:17:37",
        "scope": 35041,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 37
}