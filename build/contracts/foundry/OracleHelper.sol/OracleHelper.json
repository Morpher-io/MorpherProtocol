{"abi":[{"type":"function","name":"cachedPrice","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"cachedPriceTimestamp","inputs":[],"outputs":[{"name":"","type":"uint48","internalType":"uint48"}],"stateMutability":"view"},{"type":"function","name":"updateCachedPrice","inputs":[{"name":"force","type":"bool","internalType":"bool"}],"outputs":[{"name":"newPrice","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"TokenPriceUpdated","inputs":[{"name":"currentPrice","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"previousPrice","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"cachedPriceTimestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"cachedPrice()":"f60fdcb3","cachedPriceTimestamp()":"e1d8153c","updateCachedPrice(bool)":"3ba9290f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cachedPriceTimestamp\",\"type\":\"uint256\"}],\"name\":\"TokenPriceUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cachedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cachedPriceTimestamp\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"}],\"name\":\"updateCachedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Helper functions for dealing with various forms of price feed oracles.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cachedPrice()\":{\"notice\":\"The cached token price from the Oracle, always in (ether-per-token) * PRICE_DENOMINATOR format\"},\"cachedPriceTimestamp()\":{\"notice\":\"The timestamp of a block when the cached price was updated\"},\"updateCachedPrice(bool)\":{\"notice\":\"Updates the token price by fetching the latest price from the Oracle.\"}},\"notice\":\"Maintains a price cache and updates the current price if needed. In the best case scenario we have a direct oracle from the token to the native asset. Also support tokens that have no direct price oracle to the native asset. Sometimes oracles provide the price in the opposite direction of what we need in the moment.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"installed_contracts/eth-infinitism-dev/contracts/samples/utils/OracleHelper.sol\":\"OracleHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=installed_contracts/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=installed_contracts/openzeppelin-contracts-5/contracts/\",\":@openzeppelin/contracts/=installed_contracts/openzeppelin-contracts/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=installed_contracts/forge-std/lib/ds-test/src/\",\":erc4626-tests/=installed_contracts/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-infinitism-dev/=installed_contracts/eth-infinitism-dev/contracts/\",\":eth-infinitism/=installed_contracts/eth-infinitism/contracts/\",\":forge-std/=installed_contracts/forge-std/src/\",\":murky/=installed_contracts/murky/src/\",\":openzeppelin-contracts-5/=installed_contracts/openzeppelin-contracts-5/\",\":openzeppelin-contracts-upgradeable/=installed_contracts/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=installed_contracts/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=installed_contracts/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=installed_contracts/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-stringutils/=installed_contracts/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"installed_contracts/eth-infinitism-dev/contracts/samples/utils/IOracle.sol\":{\"keccak256\":\"0xe119b6c72fb574835ac098de54ded63820e9f507d1e8fccfcbadd981433f5794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab82c8c923fcb3c54da5c34ba75336baa7e40a40f80d2621c0b64572d4133455\",\"dweb:/ipfs/QmZ1Xmr82V3j7CLNW6b9ujQY32ZejHUfwToip3MGUCEvG1\"]},\"installed_contracts/eth-infinitism-dev/contracts/samples/utils/OracleHelper.sol\":{\"keccak256\":\"0x1ab19d485f4bb0f2d4c37669a717c860a5a0f7c1de6cb0a0a917d88f9eb78d0a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://68ecd4ebabbd0325d1b4cc3d4b99b723860723311bda0352d7198d7c0aab96b6\",\"dweb:/ipfs/QmVxtzv8x8oUPSAPLqSQ3Z4NNK5SJkyfv1CeraSKJUcwdK\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"currentPrice","type":"uint256","indexed":false},{"internalType":"uint256","name":"previousPrice","type":"uint256","indexed":false},{"internalType":"uint256","name":"cachedPriceTimestamp","type":"uint256","indexed":false}],"type":"event","name":"TokenPriceUpdated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"cachedPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"cachedPriceTimestamp","outputs":[{"internalType":"uint48","name":"","type":"uint48"}]},{"inputs":[{"internalType":"bool","name":"force","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"updateCachedPrice","outputs":[{"internalType":"uint256","name":"newPrice","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"cachedPrice()":{"notice":"The cached token price from the Oracle, always in (ether-per-token) * PRICE_DENOMINATOR format"},"cachedPriceTimestamp()":{"notice":"The timestamp of a block when the cached price was updated"},"updateCachedPrice(bool)":{"notice":"Updates the token price by fetching the latest price from the Oracle."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=installed_contracts/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=installed_contracts/openzeppelin-contracts-5/contracts/","@openzeppelin/contracts/=installed_contracts/openzeppelin-contracts/contracts/","@uniswap/=node_modules/@uniswap/","ds-test/=installed_contracts/forge-std/lib/ds-test/src/","erc4626-tests/=installed_contracts/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","eth-infinitism-dev/=installed_contracts/eth-infinitism-dev/contracts/","eth-infinitism/=installed_contracts/eth-infinitism/contracts/","forge-std/=installed_contracts/forge-std/src/","murky/=installed_contracts/murky/src/","openzeppelin-contracts-5/=installed_contracts/openzeppelin-contracts-5/","openzeppelin-contracts-upgradeable/=installed_contracts/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=installed_contracts/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=installed_contracts/openzeppelin-foundry-upgrades/src/","openzeppelin/=installed_contracts/openzeppelin-contracts-upgradeable/contracts/","solidity-stringutils/=installed_contracts/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"installed_contracts/eth-infinitism-dev/contracts/samples/utils/OracleHelper.sol":"OracleHelper"},"evmVersion":"paris","libraries":{}},"sources":{"installed_contracts/eth-infinitism-dev/contracts/samples/utils/IOracle.sol":{"keccak256":"0xe119b6c72fb574835ac098de54ded63820e9f507d1e8fccfcbadd981433f5794","urls":["bzz-raw://ab82c8c923fcb3c54da5c34ba75336baa7e40a40f80d2621c0b64572d4133455","dweb:/ipfs/QmZ1Xmr82V3j7CLNW6b9ujQY32ZejHUfwToip3MGUCEvG1"],"license":"MIT"},"installed_contracts/eth-infinitism-dev/contracts/samples/utils/OracleHelper.sol":{"keccak256":"0x1ab19d485f4bb0f2d4c37669a717c860a5a0f7c1de6cb0a0a917d88f9eb78d0a","urls":["bzz-raw://68ecd4ebabbd0325d1b4cc3d4b99b723860723311bda0352d7198d7c0aab96b6","dweb:/ipfs/QmVxtzv8x8oUPSAPLqSQ3Z4NNK5SJkyfv1CeraSKJUcwdK"],"license":"GPL-3.0"},"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"keccak256":"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69","urls":["bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652","dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"],"license":"GPL-2.0-or-later"},"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"keccak256":"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975","urls":["bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53","dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"],"license":"GPL-2.0-or-later"}},"version":1},"id":20}