{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","randomAddress()":"d5bee9f5","randomUint()":"25124730","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uin256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":@uniswap/v3-periphery/=lib/uniswap-v3-periphery/\",\":account-abstraction-v7/=lib/account-abstraction-v7/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts-5/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-5/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/\",\":openzeppelin-contracts-5/=lib/openzeppelin-contracts-5/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"randomAddress()":{"notice":"Returns a random `address`."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256,uint256)":{"notice":"Returns random uin256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","@uniswap/v3-periphery/=lib/uniswap-v3-periphery/","account-abstraction-v7/=lib/account-abstraction-v7/contracts/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/openzeppelin-contracts-5/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-5/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/murky/","openzeppelin-contracts-5/=lib/openzeppelin-contracts-5/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4","urls":["bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8","dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy"],"license":"MIT OR Apache-2.0"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":31929,"exportedSymbols":{"Vm":[31928],"VmSafe":[31327]},"nodeType":"SourceUnit","src":"117:91288:56","nodes":[{"id":28087,"nodeType":"PragmaDirective","src":"117:31:56","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":28088,"nodeType":"PragmaDirective","src":"149:33:56","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":31327,"nodeType":"ContractDefinition","src":"409:76436:56","nodes":[{"id":28096,"nodeType":"EnumDefinition","src":"529:533:56","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":28090,"nodeType":"StructuredDocumentation","src":"432:92:56","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":28091,"name":"None","nameLocation":"610:4:56","nodeType":"EnumValue","src":"610:4:56"},{"id":28092,"name":"Broadcast","nameLocation":"714:9:56","nodeType":"EnumValue","src":"714:9:56"},{"id":28093,"name":"RecurrentBroadcast","nameLocation":"829:18:56","nodeType":"EnumValue","src":"829:18:56"},{"id":28094,"name":"Prank","nameLocation":"939:5:56","nodeType":"EnumValue","src":"939:5:56"},{"id":28095,"name":"RecurrentPrank","nameLocation":"1042:14:56","nodeType":"EnumValue","src":"1042:14:56"}],"name":"CallerMode","nameLocation":"534:10:56"},{"id":28109,"nodeType":"EnumDefinition","src":"1118:791:56","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":28097,"nodeType":"StructuredDocumentation","src":"1068:45:56","text":"The kind of account access that occurred."},"members":[{"id":28098,"name":"Call","nameLocation":"1186:4:56","nodeType":"EnumValue","src":"1186:4:56"},{"id":28099,"name":"DelegateCall","nameLocation":"1252:12:56","nodeType":"EnumValue","src":"1252:12:56"},{"id":28100,"name":"CallCode","nameLocation":"1322:8:56","nodeType":"EnumValue","src":"1322:8:56"},{"id":28101,"name":"StaticCall","nameLocation":"1390:10:56","nodeType":"EnumValue","src":"1390:10:56"},{"id":28102,"name":"Create","nameLocation":"1446:6:56","nodeType":"EnumValue","src":"1446:6:56"},{"id":28103,"name":"SelfDestruct","nameLocation":"1505:12:56","nodeType":"EnumValue","src":"1505:12:56"},{"id":28104,"name":"Resume","nameLocation":"1644:6:56","nodeType":"EnumValue","src":"1644:6:56"},{"id":28105,"name":"Balance","nameLocation":"1703:7:56","nodeType":"EnumValue","src":"1703:7:56"},{"id":28106,"name":"Extcodesize","nameLocation":"1764:11:56","nodeType":"EnumValue","src":"1764:11:56"},{"id":28107,"name":"Extcodehash","nameLocation":"1829:11:56","nodeType":"EnumValue","src":"1829:11:56"},{"id":28108,"name":"Extcodecopy","nameLocation":"1892:11:56","nodeType":"EnumValue","src":"1892:11:56"}],"name":"AccountAccessKind","nameLocation":"1123:17:56"},{"id":28120,"nodeType":"EnumDefinition","src":"1949:683:56","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":28110,"nodeType":"StructuredDocumentation","src":"1915:29:56","text":"Forge execution contexts."},"members":[{"id":28111,"name":"TestGroup","nameLocation":"2047:9:56","nodeType":"EnumValue","src":"2047:9:56"},{"id":28112,"name":"Test","nameLocation":"2109:4:56","nodeType":"EnumValue","src":"2109:4:56"},{"id":28113,"name":"Coverage","nameLocation":"2170:8:56","nodeType":"EnumValue","src":"2170:8:56"},{"id":28114,"name":"Snapshot","nameLocation":"2235:8:56","nodeType":"EnumValue","src":"2235:8:56"},{"id":28115,"name":"ScriptGroup","nameLocation":"2327:11:56","nodeType":"EnumValue","src":"2327:11:56"},{"id":28116,"name":"ScriptDryRun","nameLocation":"2393:12:56","nodeType":"EnumValue","src":"2393:12:56"},{"id":28117,"name":"ScriptBroadcast","nameLocation":"2472:15:56","nodeType":"EnumValue","src":"2472:15:56"},{"id":28118,"name":"ScriptResume","nameLocation":"2551:12:56","nodeType":"EnumValue","src":"2551:12:56"},{"id":28119,"name":"Unknown","nameLocation":"2619:7:56","nodeType":"EnumValue","src":"2619:7:56"}],"name":"ForgeContext","nameLocation":"1954:12:56"},{"id":28129,"nodeType":"StructDefinition","src":"2694:237:56","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":28121,"nodeType":"StructuredDocumentation","src":"2638:51:56","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":28124,"mutability":"mutable","name":"topics","nameLocation":"2792:6:56","nodeType":"VariableDeclaration","scope":28129,"src":"2782:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":28122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":28123,"nodeType":"ArrayTypeName","src":"2782:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":28126,"mutability":"mutable","name":"data","nameLocation":"2850:4:56","nodeType":"VariableDeclaration","scope":28129,"src":"2844:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":28125,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":28128,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:56","nodeType":"VariableDeclaration","scope":28129,"src":"2909:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28127,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:56","scope":31327,"visibility":"public"},{"id":28135,"nodeType":"StructDefinition","src":"3000:119:56","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":28130,"nodeType":"StructuredDocumentation","src":"2937:58:56","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":28132,"mutability":"mutable","name":"key","nameLocation":"3065:3:56","nodeType":"VariableDeclaration","scope":28135,"src":"3058:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":28131,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28134,"mutability":"mutable","name":"url","nameLocation":"3109:3:56","nodeType":"VariableDeclaration","scope":28135,"src":"3102:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":28133,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:56","scope":31327,"visibility":"public"},{"id":28156,"nodeType":"StructDefinition","src":"3179:615:56","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":28136,"nodeType":"StructuredDocumentation","src":"3125:49:56","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":28138,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:56","nodeType":"VariableDeclaration","scope":28156,"src":"3252:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28137,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28141,"mutability":"mutable","name":"topics","nameLocation":"3354:6:56","nodeType":"VariableDeclaration","scope":28156,"src":"3344:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":28139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":28140,"nodeType":"ArrayTypeName","src":"3344:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":28143,"mutability":"mutable","name":"data","nameLocation":"3412:4:56","nodeType":"VariableDeclaration","scope":28156,"src":"3406:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":28142,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":28145,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:56","nodeType":"VariableDeclaration","scope":28156,"src":"3453:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28147,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:56","nodeType":"VariableDeclaration","scope":28156,"src":"3509:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28146,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":28149,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:56","nodeType":"VariableDeclaration","scope":28156,"src":"3570:23:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28151,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:56","nodeType":"VariableDeclaration","scope":28156,"src":"3650:23:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28150,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":28153,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:56","nodeType":"VariableDeclaration","scope":28156,"src":"3709:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28155,"mutability":"mutable","name":"removed","nameLocation":"3780:7:56","nodeType":"VariableDeclaration","scope":28156,"src":"3775:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28154,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:56","scope":31327,"visibility":"public"},{"id":28168,"nodeType":"StructDefinition","src":"3870:334:56","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":28157,"nodeType":"StructuredDocumentation","src":"3800:65:56","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":28159,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:56","nodeType":"VariableDeclaration","scope":28168,"src":"3934:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":28158,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28161,"mutability":"mutable","name":"path","nameLocation":"4004:4:56","nodeType":"VariableDeclaration","scope":28168,"src":"3997:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":28160,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28163,"mutability":"mutable","name":"depth","nameLocation":"4060:5:56","nodeType":"VariableDeclaration","scope":28168,"src":"4053:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28162,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":28165,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:56","nodeType":"VariableDeclaration","scope":28168,"src":"4120:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28164,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":28167,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:56","nodeType":"VariableDeclaration","scope":28168,"src":"4183:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28166,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:56","scope":31327,"visibility":"public"},{"id":28184,"nodeType":"StructDefinition","src":"4434:599:56","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":28169,"nodeType":"StructuredDocumentation","src":"4210:219:56","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":28171,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:56","nodeType":"VariableDeclaration","scope":28184,"src":"4515:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28170,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":28173,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:56","nodeType":"VariableDeclaration","scope":28184,"src":"4586:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28172,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":28175,"mutability":"mutable","name":"length","nameLocation":"4683:6:56","nodeType":"VariableDeclaration","scope":28184,"src":"4675:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28174,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28177,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:56","nodeType":"VariableDeclaration","scope":28184,"src":"4769:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28176,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":28179,"mutability":"mutable","name":"modified","nameLocation":"4863:8:56","nodeType":"VariableDeclaration","scope":28184,"src":"4855:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28178,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28181,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:56","nodeType":"VariableDeclaration","scope":28184,"src":"4931:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28180,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28183,"mutability":"mutable","name":"created","nameLocation":"5019:7:56","nodeType":"VariableDeclaration","scope":28184,"src":"5011:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28182,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:56","scope":31327,"visibility":"public"},{"id":28194,"nodeType":"StructDefinition","src":"5087:277:56","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":28185,"nodeType":"StructuredDocumentation","src":"5039:43:56","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":28187,"mutability":"mutable","name":"addr","nameLocation":"5152:4:56","nodeType":"VariableDeclaration","scope":28194,"src":"5144:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28186,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28189,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:56","nodeType":"VariableDeclaration","scope":28194,"src":"5206:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28188,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28191,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:56","nodeType":"VariableDeclaration","scope":28194,"src":"5274:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28190,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28193,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:56","nodeType":"VariableDeclaration","scope":28194,"src":"5339:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28192,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:56","scope":31327,"visibility":"public"},{"id":28202,"nodeType":"StructDefinition","src":"5409:213:56","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":28195,"nodeType":"StructuredDocumentation","src":"5370:34:56","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":28197,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:56","nodeType":"VariableDeclaration","scope":28202,"src":"5474:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":28196,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:56","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":28199,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:56","nodeType":"VariableDeclaration","scope":28202,"src":"5551:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":28198,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":28201,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:56","nodeType":"VariableDeclaration","scope":28202,"src":"5603:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":28200,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:56","scope":31327,"visibility":"public"},{"id":28208,"nodeType":"StructDefinition","src":"5671:184:56","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":28203,"nodeType":"StructuredDocumentation","src":"5628:38:56","text":"Information on the chain and fork."},"members":[{"constant":false,"id":28205,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:56","nodeType":"VariableDeclaration","scope":28208,"src":"5764:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28204,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28207,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:56","nodeType":"VariableDeclaration","scope":28208,"src":"5833:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28206,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:56","scope":31327,"visibility":"public"},{"id":28240,"nodeType":"StructDefinition","src":"5916:1837:56","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":28209,"nodeType":"StructuredDocumentation","src":"5861:50:56","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":28212,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:56","nodeType":"VariableDeclaration","scope":28240,"src":"5998:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$28208_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":28211,"nodeType":"UserDefinedTypeName","pathNode":{"id":28210,"name":"ChainInfo","nameLocations":["5998:9:56"],"nodeType":"IdentifierPath","referencedDeclaration":28208,"src":"5998:9:56"},"referencedDeclaration":28208,"src":"5998:9:56","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$28208_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":28215,"mutability":"mutable","name":"kind","nameLocation":"6471:4:56","nodeType":"VariableDeclaration","scope":28240,"src":"6453:22:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$28109","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":28214,"nodeType":"UserDefinedTypeName","pathNode":{"id":28213,"name":"AccountAccessKind","nameLocations":["6453:17:56"],"nodeType":"IdentifierPath","referencedDeclaration":28109,"src":"6453:17:56"},"referencedDeclaration":28109,"src":"6453:17:56","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$28109","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":28217,"mutability":"mutable","name":"account","nameLocation":"6648:7:56","nodeType":"VariableDeclaration","scope":28240,"src":"6640:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28216,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28219,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:56","nodeType":"VariableDeclaration","scope":28240,"src":"6703:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28218,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28221,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:56","nodeType":"VariableDeclaration","scope":28240,"src":"6917:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28220,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":28223,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:56","nodeType":"VariableDeclaration","scope":28240,"src":"7000:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28222,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28225,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:56","nodeType":"VariableDeclaration","scope":28240,"src":"7175:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28224,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28227,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:56","nodeType":"VariableDeclaration","scope":28240,"src":"7254:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":28226,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":28229,"mutability":"mutable","name":"value","nameLocation":"7344:5:56","nodeType":"VariableDeclaration","scope":28240,"src":"7336:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28228,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28231,"mutability":"mutable","name":"data","nameLocation":"7418:4:56","nodeType":"VariableDeclaration","scope":28240,"src":"7412:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":28230,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":28233,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:56","nodeType":"VariableDeclaration","scope":28240,"src":"7508:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28232,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":28237,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:56","nodeType":"VariableDeclaration","scope":28240,"src":"7619:31:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$28254_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":28235,"nodeType":"UserDefinedTypeName","pathNode":{"id":28234,"name":"StorageAccess","nameLocations":["7619:13:56"],"nodeType":"IdentifierPath","referencedDeclaration":28254,"src":"7619:13:56"},"referencedDeclaration":28254,"src":"7619:13:56","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$28254_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":28236,"nodeType":"ArrayTypeName","src":"7619:15:56","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$28254_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":28239,"mutability":"mutable","name":"depth","nameLocation":"7741:5:56","nodeType":"VariableDeclaration","scope":28240,"src":"7734:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28238,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:56","scope":31327,"visibility":"public"},{"id":28254,"nodeType":"StructDefinition","src":"7815:425:56","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":28241,"nodeType":"StructuredDocumentation","src":"7759:51:56","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":28243,"mutability":"mutable","name":"account","nameLocation":"7905:7:56","nodeType":"VariableDeclaration","scope":28254,"src":"7897:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28242,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28245,"mutability":"mutable","name":"slot","nameLocation":"7969:4:56","nodeType":"VariableDeclaration","scope":28254,"src":"7961:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28247,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:56","nodeType":"VariableDeclaration","scope":28254,"src":"8021:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28246,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":28249,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:56","nodeType":"VariableDeclaration","scope":28254,"src":"8086:21:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28251,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:56","nodeType":"VariableDeclaration","scope":28254,"src":"8155:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28253,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:56","nodeType":"VariableDeclaration","scope":28254,"src":"8220:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28252,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:56","scope":31327,"visibility":"public"},{"id":28266,"nodeType":"StructDefinition","src":"8291:458:56","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":28255,"nodeType":"StructuredDocumentation","src":"8246:40:56","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":28257,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:56","nodeType":"VariableDeclaration","scope":28266,"src":"8350:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28256,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":28259,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:56","nodeType":"VariableDeclaration","scope":28266,"src":"8406:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28258,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":28261,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8594:13:56","nodeType":"VariableDeclaration","scope":28266,"src":"8587:20:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28260,"name":"uint64","nodeType":"ElementaryTypeName","src":"8587:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":28263,"mutability":"mutable","name":"gasRefunded","nameLocation":"8662:11:56","nodeType":"VariableDeclaration","scope":28266,"src":"8656:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":28262,"name":"int64","nodeType":"ElementaryTypeName","src":"8656:5:56","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":28265,"mutability":"mutable","name":"gasRemaining","nameLocation":"8730:12:56","nodeType":"VariableDeclaration","scope":28266,"src":"8723:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28264,"name":"uint64","nodeType":"ElementaryTypeName","src":"8723:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:56","scope":31327,"visibility":"public"},{"id":28274,"nodeType":"FunctionDefinition","src":"8936:80:56","nodes":[],"documentation":{"id":28267,"nodeType":"StructuredDocumentation","src":"8793:138:56","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"8945:10:56","parameters":{"id":28270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28269,"mutability":"mutable","name":"name","nameLocation":"8972:4:56","nodeType":"VariableDeclaration","scope":28274,"src":"8956:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28268,"name":"string","nodeType":"ElementaryTypeName","src":"8956:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8955:22:56"},"returnParameters":{"id":28273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28272,"mutability":"mutable","name":"value","nameLocation":"9009:5:56","nodeType":"VariableDeclaration","scope":28274,"src":"9001:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28271,"name":"address","nodeType":"ElementaryTypeName","src":"9001:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9000:15:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28285,"nodeType":"FunctionDefinition","src":"9199:112:56","nodes":[],"documentation":{"id":28275,"nodeType":"StructuredDocumentation","src":"9022:172:56","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"9208:10:56","parameters":{"id":28280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28277,"mutability":"mutable","name":"name","nameLocation":"9235:4:56","nodeType":"VariableDeclaration","scope":28285,"src":"9219:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28276,"name":"string","nodeType":"ElementaryTypeName","src":"9219:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28279,"mutability":"mutable","name":"delim","nameLocation":"9257:5:56","nodeType":"VariableDeclaration","scope":28285,"src":"9241:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28278,"name":"string","nodeType":"ElementaryTypeName","src":"9241:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9218:45:56"},"returnParameters":{"id":28284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28283,"mutability":"mutable","name":"value","nameLocation":"9304:5:56","nodeType":"VariableDeclaration","scope":28285,"src":"9287:22:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":28281,"name":"address","nodeType":"ElementaryTypeName","src":"9287:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":28282,"nodeType":"ArrayTypeName","src":"9287:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9286:24:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28293,"nodeType":"FunctionDefinition","src":"9457:74:56","nodes":[],"documentation":{"id":28286,"nodeType":"StructuredDocumentation","src":"9317:135:56","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9466:7:56","parameters":{"id":28289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28288,"mutability":"mutable","name":"name","nameLocation":"9490:4:56","nodeType":"VariableDeclaration","scope":28293,"src":"9474:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28287,"name":"string","nodeType":"ElementaryTypeName","src":"9474:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9473:22:56"},"returnParameters":{"id":28292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28291,"mutability":"mutable","name":"value","nameLocation":"9524:5:56","nodeType":"VariableDeclaration","scope":28293,"src":"9519:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28290,"name":"bool","nodeType":"ElementaryTypeName","src":"9519:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9518:12:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28304,"nodeType":"FunctionDefinition","src":"9711:106:56","nodes":[],"documentation":{"id":28294,"nodeType":"StructuredDocumentation","src":"9537:169:56","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9720:7:56","parameters":{"id":28299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28296,"mutability":"mutable","name":"name","nameLocation":"9744:4:56","nodeType":"VariableDeclaration","scope":28304,"src":"9728:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28295,"name":"string","nodeType":"ElementaryTypeName","src":"9728:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28298,"mutability":"mutable","name":"delim","nameLocation":"9766:5:56","nodeType":"VariableDeclaration","scope":28304,"src":"9750:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28297,"name":"string","nodeType":"ElementaryTypeName","src":"9750:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9727:45:56"},"returnParameters":{"id":28303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28302,"mutability":"mutable","name":"value","nameLocation":"9810:5:56","nodeType":"VariableDeclaration","scope":28304,"src":"9796:19:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":28300,"name":"bool","nodeType":"ElementaryTypeName","src":"9796:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":28301,"nodeType":"ArrayTypeName","src":"9796:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"9795:21:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28312,"nodeType":"FunctionDefinition","src":"9966:80:56","nodes":[],"documentation":{"id":28305,"nodeType":"StructuredDocumentation","src":"9823:138:56","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"9975:10:56","parameters":{"id":28308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28307,"mutability":"mutable","name":"name","nameLocation":"10002:4:56","nodeType":"VariableDeclaration","scope":28312,"src":"9986:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28306,"name":"string","nodeType":"ElementaryTypeName","src":"9986:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9985:22:56"},"returnParameters":{"id":28311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28310,"mutability":"mutable","name":"value","nameLocation":"10039:5:56","nodeType":"VariableDeclaration","scope":28312,"src":"10031:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10031:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10030:15:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28323,"nodeType":"FunctionDefinition","src":"10229:112:56","nodes":[],"documentation":{"id":28313,"nodeType":"StructuredDocumentation","src":"10052:172:56","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"10238:10:56","parameters":{"id":28318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28315,"mutability":"mutable","name":"name","nameLocation":"10265:4:56","nodeType":"VariableDeclaration","scope":28323,"src":"10249:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28314,"name":"string","nodeType":"ElementaryTypeName","src":"10249:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28317,"mutability":"mutable","name":"delim","nameLocation":"10287:5:56","nodeType":"VariableDeclaration","scope":28323,"src":"10271:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28316,"name":"string","nodeType":"ElementaryTypeName","src":"10271:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10248:45:56"},"returnParameters":{"id":28322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28321,"mutability":"mutable","name":"value","nameLocation":"10334:5:56","nodeType":"VariableDeclaration","scope":28323,"src":"10317:22:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":28319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10317:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":28320,"nodeType":"ArrayTypeName","src":"10317:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10316:24:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28331,"nodeType":"FunctionDefinition","src":"10488:83:56","nodes":[],"documentation":{"id":28324,"nodeType":"StructuredDocumentation","src":"10347:136:56","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10497:8:56","parameters":{"id":28327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28326,"mutability":"mutable","name":"name","nameLocation":"10522:4:56","nodeType":"VariableDeclaration","scope":28331,"src":"10506:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28325,"name":"string","nodeType":"ElementaryTypeName","src":"10506:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10505:22:56"},"returnParameters":{"id":28330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28329,"mutability":"mutable","name":"value","nameLocation":"10564:5:56","nodeType":"VariableDeclaration","scope":28331,"src":"10551:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":28328,"name":"bytes","nodeType":"ElementaryTypeName","src":"10551:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10550:20:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28342,"nodeType":"FunctionDefinition","src":"10752:108:56","nodes":[],"documentation":{"id":28332,"nodeType":"StructuredDocumentation","src":"10577:170:56","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10761:8:56","parameters":{"id":28337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28334,"mutability":"mutable","name":"name","nameLocation":"10786:4:56","nodeType":"VariableDeclaration","scope":28342,"src":"10770:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28333,"name":"string","nodeType":"ElementaryTypeName","src":"10770:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28336,"mutability":"mutable","name":"delim","nameLocation":"10808:5:56","nodeType":"VariableDeclaration","scope":28342,"src":"10792:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28335,"name":"string","nodeType":"ElementaryTypeName","src":"10792:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10769:45:56"},"returnParameters":{"id":28341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28340,"mutability":"mutable","name":"value","nameLocation":"10853:5:56","nodeType":"VariableDeclaration","scope":28342,"src":"10838:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":28338,"name":"bytes","nodeType":"ElementaryTypeName","src":"10838:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":28339,"nodeType":"ArrayTypeName","src":"10838:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10837:22:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28350,"nodeType":"FunctionDefinition","src":"10962:77:56","nodes":[],"documentation":{"id":28343,"nodeType":"StructuredDocumentation","src":"10866:91:56","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"10971:9:56","parameters":{"id":28346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28345,"mutability":"mutable","name":"name","nameLocation":"10997:4:56","nodeType":"VariableDeclaration","scope":28350,"src":"10981:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28344,"name":"string","nodeType":"ElementaryTypeName","src":"10981:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10980:22:56"},"returnParameters":{"id":28349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28348,"mutability":"mutable","name":"result","nameLocation":"11031:6:56","nodeType":"VariableDeclaration","scope":28350,"src":"11026:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28347,"name":"bool","nodeType":"ElementaryTypeName","src":"11026:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11025:13:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28358,"nodeType":"FunctionDefinition","src":"11187:75:56","nodes":[],"documentation":{"id":28351,"nodeType":"StructuredDocumentation","src":"11045:137:56","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11196:6:56","parameters":{"id":28354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28353,"mutability":"mutable","name":"name","nameLocation":"11219:4:56","nodeType":"VariableDeclaration","scope":28358,"src":"11203:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28352,"name":"string","nodeType":"ElementaryTypeName","src":"11203:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11202:22:56"},"returnParameters":{"id":28357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28356,"mutability":"mutable","name":"value","nameLocation":"11255:5:56","nodeType":"VariableDeclaration","scope":28358,"src":"11248:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":28355,"name":"int256","nodeType":"ElementaryTypeName","src":"11248:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11247:14:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28369,"nodeType":"FunctionDefinition","src":"11444:107:56","nodes":[],"documentation":{"id":28359,"nodeType":"StructuredDocumentation","src":"11268:171:56","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11453:6:56","parameters":{"id":28364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28361,"mutability":"mutable","name":"name","nameLocation":"11476:4:56","nodeType":"VariableDeclaration","scope":28369,"src":"11460:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28360,"name":"string","nodeType":"ElementaryTypeName","src":"11460:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28363,"mutability":"mutable","name":"delim","nameLocation":"11498:5:56","nodeType":"VariableDeclaration","scope":28369,"src":"11482:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28362,"name":"string","nodeType":"ElementaryTypeName","src":"11482:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11459:45:56"},"returnParameters":{"id":28368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28367,"mutability":"mutable","name":"value","nameLocation":"11544:5:56","nodeType":"VariableDeclaration","scope":28369,"src":"11528:21:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":28365,"name":"int256","nodeType":"ElementaryTypeName","src":"11528:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":28366,"nodeType":"ArrayTypeName","src":"11528:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"11527:23:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28379,"nodeType":"FunctionDefinition","src":"11742:91:56","nodes":[],"documentation":{"id":28370,"nodeType":"StructuredDocumentation","src":"11557:180:56","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11751:5:56","parameters":{"id":28375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28372,"mutability":"mutable","name":"name","nameLocation":"11773:4:56","nodeType":"VariableDeclaration","scope":28379,"src":"11757:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28371,"name":"string","nodeType":"ElementaryTypeName","src":"11757:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28374,"mutability":"mutable","name":"defaultValue","nameLocation":"11784:12:56","nodeType":"VariableDeclaration","scope":28379,"src":"11779:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28373,"name":"bool","nodeType":"ElementaryTypeName","src":"11779:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11756:41:56"},"returnParameters":{"id":28378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28377,"mutability":"mutable","name":"value","nameLocation":"11826:5:56","nodeType":"VariableDeclaration","scope":28379,"src":"11821:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28376,"name":"bool","nodeType":"ElementaryTypeName","src":"11821:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11820:12:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28389,"nodeType":"FunctionDefinition","src":"12027:97:56","nodes":[],"documentation":{"id":28380,"nodeType":"StructuredDocumentation","src":"11839:183:56","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12036:5:56","parameters":{"id":28385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28382,"mutability":"mutable","name":"name","nameLocation":"12058:4:56","nodeType":"VariableDeclaration","scope":28389,"src":"12042:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28381,"name":"string","nodeType":"ElementaryTypeName","src":"12042:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28384,"mutability":"mutable","name":"defaultValue","nameLocation":"12072:12:56","nodeType":"VariableDeclaration","scope":28389,"src":"12064:20:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28383,"name":"uint256","nodeType":"ElementaryTypeName","src":"12064:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12041:44:56"},"returnParameters":{"id":28388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28387,"mutability":"mutable","name":"value","nameLocation":"12117:5:56","nodeType":"VariableDeclaration","scope":28389,"src":"12109:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28386,"name":"uint256","nodeType":"ElementaryTypeName","src":"12109:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12108:15:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28403,"nodeType":"FunctionDefinition","src":"12352:164:56","nodes":[],"documentation":{"id":28390,"nodeType":"StructuredDocumentation","src":"12130:217:56","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12361:5:56","parameters":{"id":28398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28392,"mutability":"mutable","name":"name","nameLocation":"12383:4:56","nodeType":"VariableDeclaration","scope":28403,"src":"12367:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28391,"name":"string","nodeType":"ElementaryTypeName","src":"12367:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28394,"mutability":"mutable","name":"delim","nameLocation":"12405:5:56","nodeType":"VariableDeclaration","scope":28403,"src":"12389:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28393,"name":"string","nodeType":"ElementaryTypeName","src":"12389:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28397,"mutability":"mutable","name":"defaultValue","nameLocation":"12431:12:56","nodeType":"VariableDeclaration","scope":28403,"src":"12412:31:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":28395,"name":"address","nodeType":"ElementaryTypeName","src":"12412:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":28396,"nodeType":"ArrayTypeName","src":"12412:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12366:78:56"},"returnParameters":{"id":28402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28401,"mutability":"mutable","name":"value","nameLocation":"12509:5:56","nodeType":"VariableDeclaration","scope":28403,"src":"12492:22:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":28399,"name":"address","nodeType":"ElementaryTypeName","src":"12492:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":28400,"nodeType":"ArrayTypeName","src":"12492:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12491:24:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28417,"nodeType":"FunctionDefinition","src":"12744:164:56","nodes":[],"documentation":{"id":28404,"nodeType":"StructuredDocumentation","src":"12522:217:56","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12753:5:56","parameters":{"id":28412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28406,"mutability":"mutable","name":"name","nameLocation":"12775:4:56","nodeType":"VariableDeclaration","scope":28417,"src":"12759:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28405,"name":"string","nodeType":"ElementaryTypeName","src":"12759:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28408,"mutability":"mutable","name":"delim","nameLocation":"12797:5:56","nodeType":"VariableDeclaration","scope":28417,"src":"12781:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28407,"name":"string","nodeType":"ElementaryTypeName","src":"12781:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28411,"mutability":"mutable","name":"defaultValue","nameLocation":"12823:12:56","nodeType":"VariableDeclaration","scope":28417,"src":"12804:31:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":28409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12804:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":28410,"nodeType":"ArrayTypeName","src":"12804:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12758:78:56"},"returnParameters":{"id":28416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28415,"mutability":"mutable","name":"value","nameLocation":"12901:5:56","nodeType":"VariableDeclaration","scope":28417,"src":"12884:22:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":28413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12884:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":28414,"nodeType":"ArrayTypeName","src":"12884:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12883:24:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28431,"nodeType":"FunctionDefinition","src":"13135:162:56","nodes":[],"documentation":{"id":28418,"nodeType":"StructuredDocumentation","src":"12914:216:56","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13144:5:56","parameters":{"id":28426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28420,"mutability":"mutable","name":"name","nameLocation":"13166:4:56","nodeType":"VariableDeclaration","scope":28431,"src":"13150:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28419,"name":"string","nodeType":"ElementaryTypeName","src":"13150:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28422,"mutability":"mutable","name":"delim","nameLocation":"13188:5:56","nodeType":"VariableDeclaration","scope":28431,"src":"13172:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28421,"name":"string","nodeType":"ElementaryTypeName","src":"13172:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28425,"mutability":"mutable","name":"defaultValue","nameLocation":"13213:12:56","nodeType":"VariableDeclaration","scope":28431,"src":"13195:30:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":28423,"name":"string","nodeType":"ElementaryTypeName","src":"13195:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":28424,"nodeType":"ArrayTypeName","src":"13195:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13149:77:56"},"returnParameters":{"id":28430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28429,"mutability":"mutable","name":"value","nameLocation":"13290:5:56","nodeType":"VariableDeclaration","scope":28431,"src":"13274:21:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":28427,"name":"string","nodeType":"ElementaryTypeName","src":"13274:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":28428,"nodeType":"ArrayTypeName","src":"13274:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13273:23:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28445,"nodeType":"FunctionDefinition","src":"13523:160:56","nodes":[],"documentation":{"id":28432,"nodeType":"StructuredDocumentation","src":"13303:215:56","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13532:5:56","parameters":{"id":28440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28434,"mutability":"mutable","name":"name","nameLocation":"13554:4:56","nodeType":"VariableDeclaration","scope":28445,"src":"13538:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28433,"name":"string","nodeType":"ElementaryTypeName","src":"13538:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28436,"mutability":"mutable","name":"delim","nameLocation":"13576:5:56","nodeType":"VariableDeclaration","scope":28445,"src":"13560:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28435,"name":"string","nodeType":"ElementaryTypeName","src":"13560:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28439,"mutability":"mutable","name":"defaultValue","nameLocation":"13600:12:56","nodeType":"VariableDeclaration","scope":28445,"src":"13583:29:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":28437,"name":"bytes","nodeType":"ElementaryTypeName","src":"13583:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":28438,"nodeType":"ArrayTypeName","src":"13583:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13537:76:56"},"returnParameters":{"id":28444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28443,"mutability":"mutable","name":"value","nameLocation":"13676:5:56","nodeType":"VariableDeclaration","scope":28445,"src":"13661:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":28441,"name":"bytes","nodeType":"ElementaryTypeName","src":"13661:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":28442,"nodeType":"ArrayTypeName","src":"13661:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13660:22:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28455,"nodeType":"FunctionDefinition","src":"13876:95:56","nodes":[],"documentation":{"id":28446,"nodeType":"StructuredDocumentation","src":"13689:182:56","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13885:5:56","parameters":{"id":28451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28448,"mutability":"mutable","name":"name","nameLocation":"13907:4:56","nodeType":"VariableDeclaration","scope":28455,"src":"13891:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28447,"name":"string","nodeType":"ElementaryTypeName","src":"13891:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28450,"mutability":"mutable","name":"defaultValue","nameLocation":"13920:12:56","nodeType":"VariableDeclaration","scope":28455,"src":"13913:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":28449,"name":"int256","nodeType":"ElementaryTypeName","src":"13913:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13890:43:56"},"returnParameters":{"id":28454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28453,"mutability":"mutable","name":"value","nameLocation":"13964:5:56","nodeType":"VariableDeclaration","scope":28455,"src":"13957:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":28452,"name":"int256","nodeType":"ElementaryTypeName","src":"13957:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13956:14:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28465,"nodeType":"FunctionDefinition","src":"14165:97:56","nodes":[],"documentation":{"id":28456,"nodeType":"StructuredDocumentation","src":"13977:183:56","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14174:5:56","parameters":{"id":28461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28458,"mutability":"mutable","name":"name","nameLocation":"14196:4:56","nodeType":"VariableDeclaration","scope":28465,"src":"14180:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28457,"name":"string","nodeType":"ElementaryTypeName","src":"14180:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28460,"mutability":"mutable","name":"defaultValue","nameLocation":"14210:12:56","nodeType":"VariableDeclaration","scope":28465,"src":"14202:20:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28459,"name":"address","nodeType":"ElementaryTypeName","src":"14202:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14179:44:56"},"returnParameters":{"id":28464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28463,"mutability":"mutable","name":"value","nameLocation":"14255:5:56","nodeType":"VariableDeclaration","scope":28465,"src":"14247:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28462,"name":"address","nodeType":"ElementaryTypeName","src":"14247:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14246:15:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28475,"nodeType":"FunctionDefinition","src":"14456:97:56","nodes":[],"documentation":{"id":28466,"nodeType":"StructuredDocumentation","src":"14268:183:56","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14465:5:56","parameters":{"id":28471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28468,"mutability":"mutable","name":"name","nameLocation":"14487:4:56","nodeType":"VariableDeclaration","scope":28475,"src":"14471:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28467,"name":"string","nodeType":"ElementaryTypeName","src":"14471:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28470,"mutability":"mutable","name":"defaultValue","nameLocation":"14501:12:56","nodeType":"VariableDeclaration","scope":28475,"src":"14493:20:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14493:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14470:44:56"},"returnParameters":{"id":28474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28473,"mutability":"mutable","name":"value","nameLocation":"14546:5:56","nodeType":"VariableDeclaration","scope":28475,"src":"14538:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14538:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14537:15:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28485,"nodeType":"FunctionDefinition","src":"14746:111:56","nodes":[],"documentation":{"id":28476,"nodeType":"StructuredDocumentation","src":"14559:182:56","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14755:5:56","parameters":{"id":28481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28478,"mutability":"mutable","name":"name","nameLocation":"14777:4:56","nodeType":"VariableDeclaration","scope":28485,"src":"14761:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28477,"name":"string","nodeType":"ElementaryTypeName","src":"14761:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28480,"mutability":"mutable","name":"defaultValue","nameLocation":"14799:12:56","nodeType":"VariableDeclaration","scope":28485,"src":"14783:28:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28479,"name":"string","nodeType":"ElementaryTypeName","src":"14783:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14760:52:56"},"returnParameters":{"id":28484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28483,"mutability":"mutable","name":"value","nameLocation":"14850:5:56","nodeType":"VariableDeclaration","scope":28485,"src":"14836:19:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":28482,"name":"string","nodeType":"ElementaryTypeName","src":"14836:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14835:21:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28495,"nodeType":"FunctionDefinition","src":"15049:109:56","nodes":[],"documentation":{"id":28486,"nodeType":"StructuredDocumentation","src":"14863:181:56","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15058:5:56","parameters":{"id":28491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28488,"mutability":"mutable","name":"name","nameLocation":"15080:4:56","nodeType":"VariableDeclaration","scope":28495,"src":"15064:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28487,"name":"string","nodeType":"ElementaryTypeName","src":"15064:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28490,"mutability":"mutable","name":"defaultValue","nameLocation":"15101:12:56","nodeType":"VariableDeclaration","scope":28495,"src":"15086:27:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":28489,"name":"bytes","nodeType":"ElementaryTypeName","src":"15086:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15063:51:56"},"returnParameters":{"id":28494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28493,"mutability":"mutable","name":"value","nameLocation":"15151:5:56","nodeType":"VariableDeclaration","scope":28495,"src":"15138:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":28492,"name":"bytes","nodeType":"ElementaryTypeName","src":"15138:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15137:20:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28509,"nodeType":"FunctionDefinition","src":"15383:158:56","nodes":[],"documentation":{"id":28496,"nodeType":"StructuredDocumentation","src":"15164:214:56","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15392:5:56","parameters":{"id":28504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28498,"mutability":"mutable","name":"name","nameLocation":"15414:4:56","nodeType":"VariableDeclaration","scope":28509,"src":"15398:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28497,"name":"string","nodeType":"ElementaryTypeName","src":"15398:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28500,"mutability":"mutable","name":"delim","nameLocation":"15436:5:56","nodeType":"VariableDeclaration","scope":28509,"src":"15420:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28499,"name":"string","nodeType":"ElementaryTypeName","src":"15420:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28503,"mutability":"mutable","name":"defaultValue","nameLocation":"15459:12:56","nodeType":"VariableDeclaration","scope":28509,"src":"15443:28:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":28501,"name":"bool","nodeType":"ElementaryTypeName","src":"15443:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":28502,"nodeType":"ArrayTypeName","src":"15443:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15397:75:56"},"returnParameters":{"id":28508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28507,"mutability":"mutable","name":"value","nameLocation":"15534:5:56","nodeType":"VariableDeclaration","scope":28509,"src":"15520:19:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":28505,"name":"bool","nodeType":"ElementaryTypeName","src":"15520:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":28506,"nodeType":"ArrayTypeName","src":"15520:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15519:21:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28523,"nodeType":"FunctionDefinition","src":"15769:164:56","nodes":[],"documentation":{"id":28510,"nodeType":"StructuredDocumentation","src":"15547:217:56","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15778:5:56","parameters":{"id":28518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28512,"mutability":"mutable","name":"name","nameLocation":"15800:4:56","nodeType":"VariableDeclaration","scope":28523,"src":"15784:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28511,"name":"string","nodeType":"ElementaryTypeName","src":"15784:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28514,"mutability":"mutable","name":"delim","nameLocation":"15822:5:56","nodeType":"VariableDeclaration","scope":28523,"src":"15806:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28513,"name":"string","nodeType":"ElementaryTypeName","src":"15806:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28517,"mutability":"mutable","name":"defaultValue","nameLocation":"15848:12:56","nodeType":"VariableDeclaration","scope":28523,"src":"15829:31:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":28515,"name":"uint256","nodeType":"ElementaryTypeName","src":"15829:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":28516,"nodeType":"ArrayTypeName","src":"15829:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15783:78:56"},"returnParameters":{"id":28522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28521,"mutability":"mutable","name":"value","nameLocation":"15926:5:56","nodeType":"VariableDeclaration","scope":28523,"src":"15909:22:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":28519,"name":"uint256","nodeType":"ElementaryTypeName","src":"15909:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":28520,"nodeType":"ArrayTypeName","src":"15909:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15908:24:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28537,"nodeType":"FunctionDefinition","src":"16160:162:56","nodes":[],"documentation":{"id":28524,"nodeType":"StructuredDocumentation","src":"15939:216:56","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"16169:5:56","parameters":{"id":28532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28526,"mutability":"mutable","name":"name","nameLocation":"16191:4:56","nodeType":"VariableDeclaration","scope":28537,"src":"16175:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28525,"name":"string","nodeType":"ElementaryTypeName","src":"16175:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28528,"mutability":"mutable","name":"delim","nameLocation":"16213:5:56","nodeType":"VariableDeclaration","scope":28537,"src":"16197:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28527,"name":"string","nodeType":"ElementaryTypeName","src":"16197:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28531,"mutability":"mutable","name":"defaultValue","nameLocation":"16238:12:56","nodeType":"VariableDeclaration","scope":28537,"src":"16220:30:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":28529,"name":"int256","nodeType":"ElementaryTypeName","src":"16220:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":28530,"nodeType":"ArrayTypeName","src":"16220:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16174:77:56"},"returnParameters":{"id":28536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28535,"mutability":"mutable","name":"value","nameLocation":"16315:5:56","nodeType":"VariableDeclaration","scope":28537,"src":"16299:21:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":28533,"name":"int256","nodeType":"ElementaryTypeName","src":"16299:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":28534,"nodeType":"ArrayTypeName","src":"16299:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16298:23:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28545,"nodeType":"FunctionDefinition","src":"16470:85:56","nodes":[],"documentation":{"id":28538,"nodeType":"StructuredDocumentation","src":"16328:137:56","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16479:9:56","parameters":{"id":28541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28540,"mutability":"mutable","name":"name","nameLocation":"16505:4:56","nodeType":"VariableDeclaration","scope":28545,"src":"16489:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28539,"name":"string","nodeType":"ElementaryTypeName","src":"16489:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16488:22:56"},"returnParameters":{"id":28544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28543,"mutability":"mutable","name":"value","nameLocation":"16548:5:56","nodeType":"VariableDeclaration","scope":28545,"src":"16534:19:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":28542,"name":"string","nodeType":"ElementaryTypeName","src":"16534:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16533:21:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28556,"nodeType":"FunctionDefinition","src":"16737:110:56","nodes":[],"documentation":{"id":28546,"nodeType":"StructuredDocumentation","src":"16561:171:56","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16746:9:56","parameters":{"id":28551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28548,"mutability":"mutable","name":"name","nameLocation":"16772:4:56","nodeType":"VariableDeclaration","scope":28556,"src":"16756:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28547,"name":"string","nodeType":"ElementaryTypeName","src":"16756:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28550,"mutability":"mutable","name":"delim","nameLocation":"16794:5:56","nodeType":"VariableDeclaration","scope":28556,"src":"16778:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28549,"name":"string","nodeType":"ElementaryTypeName","src":"16778:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16755:45:56"},"returnParameters":{"id":28555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28554,"mutability":"mutable","name":"value","nameLocation":"16840:5:56","nodeType":"VariableDeclaration","scope":28556,"src":"16824:21:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":28552,"name":"string","nodeType":"ElementaryTypeName","src":"16824:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":28553,"nodeType":"ArrayTypeName","src":"16824:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"16823:23:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28564,"nodeType":"FunctionDefinition","src":"16996:77:56","nodes":[],"documentation":{"id":28557,"nodeType":"StructuredDocumentation","src":"16853:138:56","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17005:7:56","parameters":{"id":28560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28559,"mutability":"mutable","name":"name","nameLocation":"17029:4:56","nodeType":"VariableDeclaration","scope":28564,"src":"17013:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28558,"name":"string","nodeType":"ElementaryTypeName","src":"17013:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17012:22:56"},"returnParameters":{"id":28563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28562,"mutability":"mutable","name":"value","nameLocation":"17066:5:56","nodeType":"VariableDeclaration","scope":28564,"src":"17058:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28561,"name":"uint256","nodeType":"ElementaryTypeName","src":"17058:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17057:15:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28575,"nodeType":"FunctionDefinition","src":"17256:109:56","nodes":[],"documentation":{"id":28565,"nodeType":"StructuredDocumentation","src":"17079:172:56","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17265:7:56","parameters":{"id":28570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28567,"mutability":"mutable","name":"name","nameLocation":"17289:4:56","nodeType":"VariableDeclaration","scope":28575,"src":"17273:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28566,"name":"string","nodeType":"ElementaryTypeName","src":"17273:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28569,"mutability":"mutable","name":"delim","nameLocation":"17311:5:56","nodeType":"VariableDeclaration","scope":28575,"src":"17295:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28568,"name":"string","nodeType":"ElementaryTypeName","src":"17295:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17272:45:56"},"returnParameters":{"id":28574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28573,"mutability":"mutable","name":"value","nameLocation":"17358:5:56","nodeType":"VariableDeclaration","scope":28575,"src":"17341:22:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":28571,"name":"uint256","nodeType":"ElementaryTypeName","src":"17341:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":28572,"nodeType":"ArrayTypeName","src":"17341:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17340:24:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28584,"nodeType":"FunctionDefinition","src":"17442:77:56","nodes":[],"documentation":{"id":28576,"nodeType":"StructuredDocumentation","src":"17371:66:56","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"17451:9:56","parameters":{"id":28580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28579,"mutability":"mutable","name":"context","nameLocation":"17474:7:56","nodeType":"VariableDeclaration","scope":28584,"src":"17461:20:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$28120","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":28578,"nodeType":"UserDefinedTypeName","pathNode":{"id":28577,"name":"ForgeContext","nameLocations":["17461:12:56"],"nodeType":"IdentifierPath","referencedDeclaration":28120,"src":"17461:12:56"},"referencedDeclaration":28120,"src":"17461:12:56","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$28120","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"17460:22:56"},"returnParameters":{"id":28583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28582,"mutability":"mutable","name":"result","nameLocation":"17511:6:56","nodeType":"VariableDeclaration","scope":28584,"src":"17506:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28581,"name":"bool","nodeType":"ElementaryTypeName","src":"17506:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17505:13:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28592,"nodeType":"FunctionDefinition","src":"17561:70:56","nodes":[],"documentation":{"id":28585,"nodeType":"StructuredDocumentation","src":"17525:31:56","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"17570:6:56","parameters":{"id":28590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28587,"mutability":"mutable","name":"name","nameLocation":"17593:4:56","nodeType":"VariableDeclaration","scope":28592,"src":"17577:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28586,"name":"string","nodeType":"ElementaryTypeName","src":"17577:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28589,"mutability":"mutable","name":"value","nameLocation":"17615:5:56","nodeType":"VariableDeclaration","scope":28592,"src":"17599:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28588,"name":"string","nodeType":"ElementaryTypeName","src":"17599:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17576:45:56"},"returnParameters":{"id":28591,"nodeType":"ParameterList","parameters":[],"src":"17630:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28604,"nodeType":"FunctionDefinition","src":"17763:109:56","nodes":[],"documentation":{"id":28593,"nodeType":"StructuredDocumentation","src":"17667:91:56","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"17772:8:56","parameters":{"id":28596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28595,"mutability":"mutable","name":"target","nameLocation":"17789:6:56","nodeType":"VariableDeclaration","scope":28604,"src":"17781:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28594,"name":"address","nodeType":"ElementaryTypeName","src":"17781:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17780:16:56"},"returnParameters":{"id":28603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28599,"mutability":"mutable","name":"readSlots","nameLocation":"17832:9:56","nodeType":"VariableDeclaration","scope":28604,"src":"17815:26:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":28597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17815:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":28598,"nodeType":"ArrayTypeName","src":"17815:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":28602,"mutability":"mutable","name":"writeSlots","nameLocation":"17860:10:56","nodeType":"VariableDeclaration","scope":28604,"src":"17843:27:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":28600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17843:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":28601,"nodeType":"ArrayTypeName","src":"17843:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17814:57:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28612,"nodeType":"FunctionDefinition","src":"17928:74:56","nodes":[],"documentation":{"id":28605,"nodeType":"StructuredDocumentation","src":"17878:45:56","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"17937:4:56","parameters":{"id":28608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28607,"mutability":"mutable","name":"privateKey","nameLocation":"17950:10:56","nodeType":"VariableDeclaration","scope":28612,"src":"17942:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28606,"name":"uint256","nodeType":"ElementaryTypeName","src":"17942:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17941:20:56"},"returnParameters":{"id":28611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28610,"mutability":"mutable","name":"keyAddr","nameLocation":"17993:7:56","nodeType":"VariableDeclaration","scope":28612,"src":"17985:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28609,"name":"address","nodeType":"ElementaryTypeName","src":"17985:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17984:17:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":28629,"nodeType":"FunctionDefinition","src":"18065:160:56","nodes":[],"documentation":{"id":28613,"nodeType":"StructuredDocumentation","src":"18008:52:56","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"18074:11:56","parameters":{"id":28623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28615,"mutability":"mutable","name":"fromBlock","nameLocation":"18094:9:56","nodeType":"VariableDeclaration","scope":28629,"src":"18086:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28614,"name":"uint256","nodeType":"ElementaryTypeName","src":"18086:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28617,"mutability":"mutable","name":"toBlock","nameLocation":"18113:7:56","nodeType":"VariableDeclaration","scope":28629,"src":"18105:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28616,"name":"uint256","nodeType":"ElementaryTypeName","src":"18105:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28619,"mutability":"mutable","name":"target","nameLocation":"18130:6:56","nodeType":"VariableDeclaration","scope":28629,"src":"18122:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28618,"name":"address","nodeType":"ElementaryTypeName","src":"18122:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28622,"mutability":"mutable","name":"topics","nameLocation":"18157:6:56","nodeType":"VariableDeclaration","scope":28629,"src":"18138:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":28620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18138:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":28621,"nodeType":"ArrayTypeName","src":"18138:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18085:79:56"},"returnParameters":{"id":28628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28627,"mutability":"mutable","name":"logs","nameLocation":"18219:4:56","nodeType":"VariableDeclaration","scope":28629,"src":"18199:24:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$28156_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":28625,"nodeType":"UserDefinedTypeName","pathNode":{"id":28624,"name":"EthGetLogs","nameLocations":["18199:10:56"],"nodeType":"IdentifierPath","referencedDeclaration":28156,"src":"18199:10:56"},"referencedDeclaration":28156,"src":"18199:10:56","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$28156_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":28626,"nodeType":"ArrayTypeName","src":"18199:12:56","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$28156_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"18198:26:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28635,"nodeType":"FunctionDefinition","src":"18562:70:56","nodes":[],"documentation":{"id":28630,"nodeType":"StructuredDocumentation","src":"18231:326:56","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"18571:14:56","parameters":{"id":28631,"nodeType":"ParameterList","parameters":[],"src":"18585:2:56"},"returnParameters":{"id":28634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28633,"mutability":"mutable","name":"blobBaseFee","nameLocation":"18619:11:56","nodeType":"VariableDeclaration","scope":28635,"src":"18611:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28632,"name":"uint256","nodeType":"ElementaryTypeName","src":"18611:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18610:21:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28641,"nodeType":"FunctionDefinition","src":"18947:65:56","nodes":[],"documentation":{"id":28636,"nodeType":"StructuredDocumentation","src":"18638:304:56","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"18956:14:56","parameters":{"id":28637,"nodeType":"ParameterList","parameters":[],"src":"18970:2:56"},"returnParameters":{"id":28640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28639,"mutability":"mutable","name":"height","nameLocation":"19004:6:56","nodeType":"VariableDeclaration","scope":28641,"src":"18996:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28638,"name":"uint256","nodeType":"ElementaryTypeName","src":"18996:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18995:16:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28647,"nodeType":"FunctionDefinition","src":"19336:71:56","nodes":[],"documentation":{"id":28642,"nodeType":"StructuredDocumentation","src":"19018:313:56","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"19345:17:56","parameters":{"id":28643,"nodeType":"ParameterList","parameters":[],"src":"19362:2:56"},"returnParameters":{"id":28646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28645,"mutability":"mutable","name":"timestamp","nameLocation":"19396:9:56","nodeType":"VariableDeclaration","scope":28647,"src":"19388:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28644,"name":"uint256","nodeType":"ElementaryTypeName","src":"19388:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19387:19:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28661,"nodeType":"FunctionDefinition","src":"19500:146:56","nodes":[],"documentation":{"id":28648,"nodeType":"StructuredDocumentation","src":"19413:82:56","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"19509:24:56","parameters":{"id":28653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28650,"mutability":"mutable","name":"target","nameLocation":"19542:6:56","nodeType":"VariableDeclaration","scope":28661,"src":"19534:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28649,"name":"address","nodeType":"ElementaryTypeName","src":"19534:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28652,"mutability":"mutable","name":"elementSlot","nameLocation":"19558:11:56","nodeType":"VariableDeclaration","scope":28661,"src":"19550:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19550:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19533:37:56"},"returnParameters":{"id":28660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28655,"mutability":"mutable","name":"found","nameLocation":"19610:5:56","nodeType":"VariableDeclaration","scope":28661,"src":"19605:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28654,"name":"bool","nodeType":"ElementaryTypeName","src":"19605:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":28657,"mutability":"mutable","name":"key","nameLocation":"19625:3:56","nodeType":"VariableDeclaration","scope":28661,"src":"19617:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19617:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28659,"mutability":"mutable","name":"parent","nameLocation":"19638:6:56","nodeType":"VariableDeclaration","scope":28661,"src":"19630:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19630:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19604:41:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28671,"nodeType":"FunctionDefinition","src":"19743:97:56","nodes":[],"documentation":{"id":28662,"nodeType":"StructuredDocumentation","src":"19652:86:56","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"19752:16:56","parameters":{"id":28667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28664,"mutability":"mutable","name":"target","nameLocation":"19777:6:56","nodeType":"VariableDeclaration","scope":28671,"src":"19769:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28663,"name":"address","nodeType":"ElementaryTypeName","src":"19769:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28666,"mutability":"mutable","name":"mappingSlot","nameLocation":"19793:11:56","nodeType":"VariableDeclaration","scope":28671,"src":"19785:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19785:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19768:37:56"},"returnParameters":{"id":28670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28669,"mutability":"mutable","name":"length","nameLocation":"19832:6:56","nodeType":"VariableDeclaration","scope":28671,"src":"19824:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28668,"name":"uint256","nodeType":"ElementaryTypeName","src":"19824:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19823:16:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28683,"nodeType":"FunctionDefinition","src":"20044:109:56","nodes":[],"documentation":{"id":28672,"nodeType":"StructuredDocumentation","src":"19846:193:56","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"20053:16:56","parameters":{"id":28679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28674,"mutability":"mutable","name":"target","nameLocation":"20078:6:56","nodeType":"VariableDeclaration","scope":28683,"src":"20070:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28673,"name":"address","nodeType":"ElementaryTypeName","src":"20070:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28676,"mutability":"mutable","name":"mappingSlot","nameLocation":"20094:11:56","nodeType":"VariableDeclaration","scope":28683,"src":"20086:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20086:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28678,"mutability":"mutable","name":"idx","nameLocation":"20115:3:56","nodeType":"VariableDeclaration","scope":28683,"src":"20107:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28677,"name":"uint256","nodeType":"ElementaryTypeName","src":"20107:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20069:50:56"},"returnParameters":{"id":28682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28681,"mutability":"mutable","name":"value","nameLocation":"20146:5:56","nodeType":"VariableDeclaration","scope":28683,"src":"20138:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20138:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20137:15:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28691,"nodeType":"FunctionDefinition","src":"20197:72:56","nodes":[],"documentation":{"id":28684,"nodeType":"StructuredDocumentation","src":"20159:33:56","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"20206:8:56","parameters":{"id":28687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28686,"mutability":"mutable","name":"account","nameLocation":"20223:7:56","nodeType":"VariableDeclaration","scope":28691,"src":"20215:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28685,"name":"address","nodeType":"ElementaryTypeName","src":"20215:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20214:17:56"},"returnParameters":{"id":28690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28689,"mutability":"mutable","name":"nonce","nameLocation":"20262:5:56","nodeType":"VariableDeclaration","scope":28691,"src":"20255:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28688,"name":"uint64","nodeType":"ElementaryTypeName","src":"20255:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20254:14:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28699,"nodeType":"FunctionDefinition","src":"20311:64:56","nodes":[],"documentation":{"id":28692,"nodeType":"StructuredDocumentation","src":"20275:31:56","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"20320:15:56","parameters":{"id":28693,"nodeType":"ParameterList","parameters":[],"src":"20335:2:56"},"returnParameters":{"id":28698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28697,"mutability":"mutable","name":"logs","nameLocation":"20369:4:56","nodeType":"VariableDeclaration","scope":28699,"src":"20356:17:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$28129_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":28695,"nodeType":"UserDefinedTypeName","pathNode":{"id":28694,"name":"Log","nameLocations":["20356:3:56"],"nodeType":"IdentifierPath","referencedDeclaration":28129,"src":"20356:3:56"},"referencedDeclaration":28129,"src":"20356:3:56","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$28129_storage_ptr","typeString":"struct VmSafe.Log"}},"id":28696,"nodeType":"ArrayTypeName","src":"20356:5:56","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$28129_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"20355:19:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28706,"nodeType":"FunctionDefinition","src":"20425:62:56","nodes":[],"documentation":{"id":28700,"nodeType":"StructuredDocumentation","src":"20381:39:56","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"20434:11:56","parameters":{"id":28701,"nodeType":"ParameterList","parameters":[],"src":"20445:2:56"},"returnParameters":{"id":28705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28704,"mutability":"mutable","name":"gas","nameLocation":"20482:3:56","nodeType":"VariableDeclaration","scope":28706,"src":"20471:14:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$28266_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":28703,"nodeType":"UserDefinedTypeName","pathNode":{"id":28702,"name":"Gas","nameLocations":["20471:3:56"],"nodeType":"IdentifierPath","referencedDeclaration":28266,"src":"20471:3:56"},"referencedDeclaration":28266,"src":"20471:3:56","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$28266_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"20470:16:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28716,"nodeType":"FunctionDefinition","src":"20539:81:56","nodes":[],"documentation":{"id":28707,"nodeType":"StructuredDocumentation","src":"20493:41:56","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"20548:4:56","parameters":{"id":28712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28709,"mutability":"mutable","name":"target","nameLocation":"20561:6:56","nodeType":"VariableDeclaration","scope":28716,"src":"20553:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28708,"name":"address","nodeType":"ElementaryTypeName","src":"20553:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28711,"mutability":"mutable","name":"slot","nameLocation":"20577:4:56","nodeType":"VariableDeclaration","scope":28716,"src":"20569:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20569:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20552:30:56"},"returnParameters":{"id":28715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28714,"mutability":"mutable","name":"data","nameLocation":"20614:4:56","nodeType":"VariableDeclaration","scope":28716,"src":"20606:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20606:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20605:14:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28720,"nodeType":"FunctionDefinition","src":"20711:37:56","nodes":[],"documentation":{"id":28717,"nodeType":"StructuredDocumentation","src":"20626:80:56","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"20720:16:56","parameters":{"id":28718,"nodeType":"ParameterList","parameters":[],"src":"20736:2:56"},"returnParameters":{"id":28719,"nodeType":"ParameterList","parameters":[],"src":"20747:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28724,"nodeType":"FunctionDefinition","src":"20800:27:56","nodes":[],"documentation":{"id":28721,"nodeType":"StructuredDocumentation","src":"20754:41:56","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"20809:6:56","parameters":{"id":28722,"nodeType":"ParameterList","parameters":[],"src":"20815:2:56"},"returnParameters":{"id":28723,"nodeType":"ParameterList","parameters":[],"src":"20826:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28728,"nodeType":"FunctionDefinition","src":"20874:31:56","nodes":[],"documentation":{"id":28725,"nodeType":"StructuredDocumentation","src":"20833:36:56","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"20883:10:56","parameters":{"id":28726,"nodeType":"ParameterList","parameters":[],"src":"20893:2:56"},"returnParameters":{"id":28727,"nodeType":"ParameterList","parameters":[],"src":"20904:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28732,"nodeType":"FunctionDefinition","src":"20995:38:56","nodes":[],"documentation":{"id":28729,"nodeType":"StructuredDocumentation","src":"20911:79:56","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"21004:17:56","parameters":{"id":28730,"nodeType":"ParameterList","parameters":[],"src":"21021:2:56"},"returnParameters":{"id":28731,"nodeType":"ParameterList","parameters":[],"src":"21032:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28742,"nodeType":"FunctionDefinition","src":"21110:98:56","nodes":[],"documentation":{"id":28733,"nodeType":"StructuredDocumentation","src":"21039:66:56","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21119:3:56","parameters":{"id":28738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28735,"mutability":"mutable","name":"method","nameLocation":"21139:6:56","nodeType":"VariableDeclaration","scope":28742,"src":"21123:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28734,"name":"string","nodeType":"ElementaryTypeName","src":"21123:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28737,"mutability":"mutable","name":"params","nameLocation":"21163:6:56","nodeType":"VariableDeclaration","scope":28742,"src":"21147:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28736,"name":"string","nodeType":"ElementaryTypeName","src":"21147:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21122:48:56"},"returnParameters":{"id":28741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28740,"mutability":"mutable","name":"data","nameLocation":"21202:4:56","nodeType":"VariableDeclaration","scope":28742,"src":"21189:17:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":28739,"name":"bytes","nodeType":"ElementaryTypeName","src":"21189:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21188:19:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28754,"nodeType":"FunctionDefinition","src":"21282:99:56","nodes":[],"documentation":{"id":28743,"nodeType":"StructuredDocumentation","src":"21214:63:56","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"21291:8:56","parameters":{"id":28748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28745,"mutability":"mutable","name":"privateKey","nameLocation":"21308:10:56","nodeType":"VariableDeclaration","scope":28754,"src":"21300:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28744,"name":"uint256","nodeType":"ElementaryTypeName","src":"21300:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28747,"mutability":"mutable","name":"digest","nameLocation":"21328:6:56","nodeType":"VariableDeclaration","scope":28754,"src":"21320:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21320:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21299:36:56"},"returnParameters":{"id":28753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28750,"mutability":"mutable","name":"r","nameLocation":"21367:1:56","nodeType":"VariableDeclaration","scope":28754,"src":"21359:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21359:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28752,"mutability":"mutable","name":"s","nameLocation":"21378:1:56","nodeType":"VariableDeclaration","scope":28754,"src":"21370:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21370:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21358:22:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":28768,"nodeType":"FunctionDefinition","src":"21455:104:56","nodes":[],"documentation":{"id":28755,"nodeType":"StructuredDocumentation","src":"21387:63:56","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21464:4:56","parameters":{"id":28760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28757,"mutability":"mutable","name":"privateKey","nameLocation":"21477:10:56","nodeType":"VariableDeclaration","scope":28768,"src":"21469:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28756,"name":"uint256","nodeType":"ElementaryTypeName","src":"21469:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28759,"mutability":"mutable","name":"digest","nameLocation":"21497:6:56","nodeType":"VariableDeclaration","scope":28768,"src":"21489:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21489:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21468:36:56"},"returnParameters":{"id":28767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28762,"mutability":"mutable","name":"v","nameLocation":"21534:1:56","nodeType":"VariableDeclaration","scope":28768,"src":"21528:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":28761,"name":"uint8","nodeType":"ElementaryTypeName","src":"21528:5:56","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":28764,"mutability":"mutable","name":"r","nameLocation":"21545:1:56","nodeType":"VariableDeclaration","scope":28768,"src":"21537:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21537:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28766,"mutability":"mutable","name":"s","nameLocation":"21556:1:56","nodeType":"VariableDeclaration","scope":28768,"src":"21548:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21548:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21527:31:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":28780,"nodeType":"FunctionDefinition","src":"21998:84:56","nodes":[],"documentation":{"id":28769,"nodeType":"StructuredDocumentation","src":"21565:428:56","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22007:4:56","parameters":{"id":28772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28771,"mutability":"mutable","name":"digest","nameLocation":"22020:6:56","nodeType":"VariableDeclaration","scope":28780,"src":"22012:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22012:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22011:16:56"},"returnParameters":{"id":28779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28774,"mutability":"mutable","name":"v","nameLocation":"22057:1:56","nodeType":"VariableDeclaration","scope":28780,"src":"22051:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":28773,"name":"uint8","nodeType":"ElementaryTypeName","src":"22051:5:56","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":28776,"mutability":"mutable","name":"r","nameLocation":"22068:1:56","nodeType":"VariableDeclaration","scope":28780,"src":"22060:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22060:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28778,"mutability":"mutable","name":"s","nameLocation":"22079:1:56","nodeType":"VariableDeclaration","scope":28780,"src":"22071:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22071:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22050:31:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":28794,"nodeType":"FunctionDefinition","src":"22259:100:56","nodes":[],"documentation":{"id":28781,"nodeType":"StructuredDocumentation","src":"22088:166:56","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22268:4:56","parameters":{"id":28786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28783,"mutability":"mutable","name":"signer","nameLocation":"22281:6:56","nodeType":"VariableDeclaration","scope":28794,"src":"22273:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28782,"name":"address","nodeType":"ElementaryTypeName","src":"22273:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28785,"mutability":"mutable","name":"digest","nameLocation":"22297:6:56","nodeType":"VariableDeclaration","scope":28794,"src":"22289:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22289:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22272:32:56"},"returnParameters":{"id":28793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28788,"mutability":"mutable","name":"v","nameLocation":"22334:1:56","nodeType":"VariableDeclaration","scope":28794,"src":"22328:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":28787,"name":"uint8","nodeType":"ElementaryTypeName","src":"22328:5:56","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":28790,"mutability":"mutable","name":"r","nameLocation":"22345:1:56","nodeType":"VariableDeclaration","scope":28794,"src":"22337:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22337:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":28792,"mutability":"mutable","name":"s","nameLocation":"22356:1:56","nodeType":"VariableDeclaration","scope":28794,"src":"22348:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22348:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22327:31:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":28798,"nodeType":"FunctionDefinition","src":"22427:42:56","nodes":[],"documentation":{"id":28795,"nodeType":"StructuredDocumentation","src":"22365:57:56","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"22436:21:56","parameters":{"id":28796,"nodeType":"ParameterList","parameters":[],"src":"22457:2:56"},"returnParameters":{"id":28797,"nodeType":"ParameterList","parameters":[],"src":"22468:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28802,"nodeType":"FunctionDefinition","src":"22613:44:56","nodes":[],"documentation":{"id":28799,"nodeType":"StructuredDocumentation","src":"22475:133:56","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"22622:23:56","parameters":{"id":28800,"nodeType":"ParameterList","parameters":[],"src":"22645:2:56"},"returnParameters":{"id":28801,"nodeType":"ParameterList","parameters":[],"src":"22656:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28810,"nodeType":"FunctionDefinition","src":"22765:92:56","nodes":[],"documentation":{"id":28803,"nodeType":"StructuredDocumentation","src":"22663:97:56","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"22774:22:56","parameters":{"id":28804,"nodeType":"ParameterList","parameters":[],"src":"22796:2:56"},"returnParameters":{"id":28809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28808,"mutability":"mutable","name":"accountAccesses","nameLocation":"22840:15:56","nodeType":"VariableDeclaration","scope":28810,"src":"22817:38:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$28240_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":28806,"nodeType":"UserDefinedTypeName","pathNode":{"id":28805,"name":"AccountAccess","nameLocations":["22817:13:56"],"nodeType":"IdentifierPath","referencedDeclaration":28240,"src":"22817:13:56"},"referencedDeclaration":28240,"src":"22817:13:56","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$28240_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":28807,"nodeType":"ArrayTypeName","src":"22817:15:56","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$28240_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"22816:40:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28814,"nodeType":"FunctionDefinition","src":"22953:41:56","nodes":[],"documentation":{"id":28811,"nodeType":"StructuredDocumentation","src":"22863:85:56","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"22962:20:56","parameters":{"id":28812,"nodeType":"ParameterList","parameters":[],"src":"22982:2:56"},"returnParameters":{"id":28813,"nodeType":"ParameterList","parameters":[],"src":"22993:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28820,"nodeType":"FunctionDefinition","src":"23193:50:56","nodes":[],"documentation":{"id":28815,"nodeType":"StructuredDocumentation","src":"23037:151:56","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"23202:9:56","parameters":{"id":28818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28817,"mutability":"mutable","name":"path","nameLocation":"23228:4:56","nodeType":"VariableDeclaration","scope":28820,"src":"23212:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28816,"name":"string","nodeType":"ElementaryTypeName","src":"23212:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23211:22:56"},"returnParameters":{"id":28819,"nodeType":"ParameterList","parameters":[],"src":"23242:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28830,"nodeType":"FunctionDefinition","src":"23558:93:56","nodes":[],"documentation":{"id":28821,"nodeType":"StructuredDocumentation","src":"23249:304:56","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"23567:8:56","parameters":{"id":28826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28823,"mutability":"mutable","name":"from","nameLocation":"23592:4:56","nodeType":"VariableDeclaration","scope":28830,"src":"23576:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28822,"name":"string","nodeType":"ElementaryTypeName","src":"23576:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28825,"mutability":"mutable","name":"to","nameLocation":"23614:2:56","nodeType":"VariableDeclaration","scope":28830,"src":"23598:18:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28824,"name":"string","nodeType":"ElementaryTypeName","src":"23598:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23575:42:56"},"returnParameters":{"id":28829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28828,"mutability":"mutable","name":"copied","nameLocation":"23643:6:56","nodeType":"VariableDeclaration","scope":28830,"src":"23636:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28827,"name":"uint64","nodeType":"ElementaryTypeName","src":"23636:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23635:15:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28838,"nodeType":"FunctionDefinition","src":"24056:66:56","nodes":[],"documentation":{"id":28831,"nodeType":"StructuredDocumentation","src":"23657:394:56","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"24065:9:56","parameters":{"id":28836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28833,"mutability":"mutable","name":"path","nameLocation":"24091:4:56","nodeType":"VariableDeclaration","scope":28838,"src":"24075:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28832,"name":"string","nodeType":"ElementaryTypeName","src":"24075:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28835,"mutability":"mutable","name":"recursive","nameLocation":"24102:9:56","nodeType":"VariableDeclaration","scope":28838,"src":"24097:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28834,"name":"bool","nodeType":"ElementaryTypeName","src":"24097:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24074:38:56"},"returnParameters":{"id":28837,"nodeType":"ParameterList","parameters":[],"src":"24121:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28846,"nodeType":"FunctionDefinition","src":"24217:69:56","nodes":[],"documentation":{"id":28839,"nodeType":"StructuredDocumentation","src":"24128:84:56","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"24226:6:56","parameters":{"id":28842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28841,"mutability":"mutable","name":"path","nameLocation":"24249:4:56","nodeType":"VariableDeclaration","scope":28846,"src":"24233:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28840,"name":"string","nodeType":"ElementaryTypeName","src":"24233:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24232:22:56"},"returnParameters":{"id":28845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28844,"mutability":"mutable","name":"result","nameLocation":"24278:6:56","nodeType":"VariableDeclaration","scope":28846,"src":"24273:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28843,"name":"bool","nodeType":"ElementaryTypeName","src":"24273:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24272:13:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28855,"nodeType":"FunctionDefinition","src":"24351:84:56","nodes":[],"documentation":{"id":28847,"nodeType":"StructuredDocumentation","src":"24292:54:56","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"24360:3:56","parameters":{"id":28851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28850,"mutability":"mutable","name":"commandInput","nameLocation":"24382:12:56","nodeType":"VariableDeclaration","scope":28855,"src":"24364:30:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":28848,"name":"string","nodeType":"ElementaryTypeName","src":"24364:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":28849,"nodeType":"ArrayTypeName","src":"24364:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"24363:32:56"},"returnParameters":{"id":28854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28853,"mutability":"mutable","name":"result","nameLocation":"24427:6:56","nodeType":"VariableDeclaration","scope":28855,"src":"24414:19:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":28852,"name":"bytes","nodeType":"ElementaryTypeName","src":"24414:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24413:21:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28864,"nodeType":"FunctionDefinition","src":"24534:93:56","nodes":[],"documentation":{"id":28856,"nodeType":"StructuredDocumentation","src":"24441:88:56","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"24543:10:56","parameters":{"id":28859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28858,"mutability":"mutable","name":"path","nameLocation":"24570:4:56","nodeType":"VariableDeclaration","scope":28864,"src":"24554:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28857,"name":"string","nodeType":"ElementaryTypeName","src":"24554:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24553:22:56"},"returnParameters":{"id":28863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28862,"mutability":"mutable","name":"metadata","nameLocation":"24617:8:56","nodeType":"VariableDeclaration","scope":28864,"src":"24599:26:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$28184_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":28861,"nodeType":"UserDefinedTypeName","pathNode":{"id":28860,"name":"FsMetadata","nameLocations":["24599:10:56"],"nodeType":"IdentifierPath","referencedDeclaration":28184,"src":"24599:10:56"},"referencedDeclaration":28184,"src":"24599:10:56","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$28184_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"24598:28:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28872,"nodeType":"FunctionDefinition","src":"24865:101:56","nodes":[],"documentation":{"id":28865,"nodeType":"StructuredDocumentation","src":"24633:227:56","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"24874:7:56","parameters":{"id":28868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28867,"mutability":"mutable","name":"artifactPath","nameLocation":"24898:12:56","nodeType":"VariableDeclaration","scope":28872,"src":"24882:28:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28866,"name":"string","nodeType":"ElementaryTypeName","src":"24882:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24881:30:56"},"returnParameters":{"id":28871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28870,"mutability":"mutable","name":"creationBytecode","nameLocation":"24948:16:56","nodeType":"VariableDeclaration","scope":28872,"src":"24935:29:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":28869,"name":"bytes","nodeType":"ElementaryTypeName","src":"24935:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24934:31:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28880,"nodeType":"FunctionDefinition","src":"25204:108:56","nodes":[],"documentation":{"id":28873,"nodeType":"StructuredDocumentation","src":"24972:227:56","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"25213:15:56","parameters":{"id":28876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28875,"mutability":"mutable","name":"artifactPath","nameLocation":"25245:12:56","nodeType":"VariableDeclaration","scope":28880,"src":"25229:28:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28874,"name":"string","nodeType":"ElementaryTypeName","src":"25229:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25228:30:56"},"returnParameters":{"id":28879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28878,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"25295:15:56","nodeType":"VariableDeclaration","scope":28880,"src":"25282:28:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":28877,"name":"bytes","nodeType":"ElementaryTypeName","src":"25282:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25281:30:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28888,"nodeType":"FunctionDefinition","src":"25418:68:56","nodes":[],"documentation":{"id":28881,"nodeType":"StructuredDocumentation","src":"25318:95:56","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"25427:5:56","parameters":{"id":28884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28883,"mutability":"mutable","name":"path","nameLocation":"25449:4:56","nodeType":"VariableDeclaration","scope":28888,"src":"25433:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28882,"name":"string","nodeType":"ElementaryTypeName","src":"25433:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25432:22:56"},"returnParameters":{"id":28887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28886,"mutability":"mutable","name":"result","nameLocation":"25478:6:56","nodeType":"VariableDeclaration","scope":28888,"src":"25473:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28885,"name":"bool","nodeType":"ElementaryTypeName","src":"25473:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25472:13:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28896,"nodeType":"FunctionDefinition","src":"25595:69:56","nodes":[],"documentation":{"id":28889,"nodeType":"StructuredDocumentation","src":"25492:98:56","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"25604:6:56","parameters":{"id":28892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28891,"mutability":"mutable","name":"path","nameLocation":"25627:4:56","nodeType":"VariableDeclaration","scope":28896,"src":"25611:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28890,"name":"string","nodeType":"ElementaryTypeName","src":"25611:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25610:22:56"},"returnParameters":{"id":28895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28894,"mutability":"mutable","name":"result","nameLocation":"25656:6:56","nodeType":"VariableDeclaration","scope":28896,"src":"25651:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28893,"name":"bool","nodeType":"ElementaryTypeName","src":"25651:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25650:13:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28902,"nodeType":"FunctionDefinition","src":"25720:66:56","nodes":[],"documentation":{"id":28897,"nodeType":"StructuredDocumentation","src":"25670:45:56","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"25729:11:56","parameters":{"id":28898,"nodeType":"ParameterList","parameters":[],"src":"25740:2:56"},"returnParameters":{"id":28901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28900,"mutability":"mutable","name":"path","nameLocation":"25780:4:56","nodeType":"VariableDeclaration","scope":28902,"src":"25766:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":28899,"name":"string","nodeType":"ElementaryTypeName","src":"25766:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25765:20:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28910,"nodeType":"FunctionDefinition","src":"25853:83:56","nodes":[],"documentation":{"id":28903,"nodeType":"StructuredDocumentation","src":"25792:56:56","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"25862:6:56","parameters":{"id":28906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28905,"mutability":"mutable","name":"promptText","nameLocation":"25885:10:56","nodeType":"VariableDeclaration","scope":28910,"src":"25869:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28904,"name":"string","nodeType":"ElementaryTypeName","src":"25869:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25868:28:56"},"returnParameters":{"id":28909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28908,"mutability":"mutable","name":"input","nameLocation":"25929:5:56","nodeType":"VariableDeclaration","scope":28910,"src":"25915:19:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":28907,"name":"string","nodeType":"ElementaryTypeName","src":"25915:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25914:21:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28918,"nodeType":"FunctionDefinition","src":"25999:78:56","nodes":[],"documentation":{"id":28911,"nodeType":"StructuredDocumentation","src":"25942:52:56","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"26008:13:56","parameters":{"id":28914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28913,"mutability":"mutable","name":"promptText","nameLocation":"26038:10:56","nodeType":"VariableDeclaration","scope":28918,"src":"26022:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28912,"name":"string","nodeType":"ElementaryTypeName","src":"26022:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26021:28:56"},"returnParameters":{"id":28917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":28918,"src":"26068:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28915,"name":"address","nodeType":"ElementaryTypeName","src":"26068:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26067:9:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28926,"nodeType":"FunctionDefinition","src":"26151:89:56","nodes":[],"documentation":{"id":28919,"nodeType":"StructuredDocumentation","src":"26083:63:56","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"26160:12:56","parameters":{"id":28922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28921,"mutability":"mutable","name":"promptText","nameLocation":"26189:10:56","nodeType":"VariableDeclaration","scope":28926,"src":"26173:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28920,"name":"string","nodeType":"ElementaryTypeName","src":"26173:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26172:28:56"},"returnParameters":{"id":28925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28924,"mutability":"mutable","name":"input","nameLocation":"26233:5:56","nodeType":"VariableDeclaration","scope":28926,"src":"26219:19:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":28923,"name":"string","nodeType":"ElementaryTypeName","src":"26219:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26218:21:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28934,"nodeType":"FunctionDefinition","src":"26320:81:56","nodes":[],"documentation":{"id":28927,"nodeType":"StructuredDocumentation","src":"26246:69:56","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"26329:16:56","parameters":{"id":28930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28929,"mutability":"mutable","name":"promptText","nameLocation":"26362:10:56","nodeType":"VariableDeclaration","scope":28934,"src":"26346:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28928,"name":"string","nodeType":"ElementaryTypeName","src":"26346:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26345:28:56"},"returnParameters":{"id":28933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":28934,"src":"26392:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28931,"name":"uint256","nodeType":"ElementaryTypeName","src":"26392:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26391:9:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28942,"nodeType":"FunctionDefinition","src":"26461:75:56","nodes":[],"documentation":{"id":28935,"nodeType":"StructuredDocumentation","src":"26407:49:56","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"26470:10:56","parameters":{"id":28938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28937,"mutability":"mutable","name":"promptText","nameLocation":"26497:10:56","nodeType":"VariableDeclaration","scope":28942,"src":"26481:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28936,"name":"string","nodeType":"ElementaryTypeName","src":"26481:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26480:28:56"},"returnParameters":{"id":28941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":28942,"src":"26527:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28939,"name":"uint256","nodeType":"ElementaryTypeName","src":"26527:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26526:9:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":28952,"nodeType":"FunctionDefinition","src":"26784:89:56","nodes":[],"documentation":{"id":28943,"nodeType":"StructuredDocumentation","src":"26542:237:56","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26793:7:56","parameters":{"id":28946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28945,"mutability":"mutable","name":"path","nameLocation":"26817:4:56","nodeType":"VariableDeclaration","scope":28952,"src":"26801:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28944,"name":"string","nodeType":"ElementaryTypeName","src":"26801:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26800:22:56"},"returnParameters":{"id":28951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28950,"mutability":"mutable","name":"entries","nameLocation":"26864:7:56","nodeType":"VariableDeclaration","scope":28952,"src":"26846:25:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$28168_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":28948,"nodeType":"UserDefinedTypeName","pathNode":{"id":28947,"name":"DirEntry","nameLocations":["26846:8:56"],"nodeType":"IdentifierPath","referencedDeclaration":28168,"src":"26846:8:56"},"referencedDeclaration":28168,"src":"26846:8:56","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$28168_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":28949,"nodeType":"ArrayTypeName","src":"26846:10:56","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$28168_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26845:27:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28964,"nodeType":"FunctionDefinition","src":"26910:106:56","nodes":[],"documentation":{"id":28953,"nodeType":"StructuredDocumentation","src":"26879:26:56","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26919:7:56","parameters":{"id":28958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28955,"mutability":"mutable","name":"path","nameLocation":"26943:4:56","nodeType":"VariableDeclaration","scope":28964,"src":"26927:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28954,"name":"string","nodeType":"ElementaryTypeName","src":"26927:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28957,"mutability":"mutable","name":"maxDepth","nameLocation":"26956:8:56","nodeType":"VariableDeclaration","scope":28964,"src":"26949:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28956,"name":"uint64","nodeType":"ElementaryTypeName","src":"26949:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"26926:39:56"},"returnParameters":{"id":28963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28962,"mutability":"mutable","name":"entries","nameLocation":"27007:7:56","nodeType":"VariableDeclaration","scope":28964,"src":"26989:25:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$28168_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":28960,"nodeType":"UserDefinedTypeName","pathNode":{"id":28959,"name":"DirEntry","nameLocations":["26989:8:56"],"nodeType":"IdentifierPath","referencedDeclaration":28168,"src":"26989:8:56"},"referencedDeclaration":28168,"src":"26989:8:56","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$28168_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":28961,"nodeType":"ArrayTypeName","src":"26989:10:56","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$28168_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26988:27:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28978,"nodeType":"FunctionDefinition","src":"27053:148:56","nodes":[],"documentation":{"id":28965,"nodeType":"StructuredDocumentation","src":"27022:26:56","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"27062:7:56","parameters":{"id":28972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28967,"mutability":"mutable","name":"path","nameLocation":"27086:4:56","nodeType":"VariableDeclaration","scope":28978,"src":"27070:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28966,"name":"string","nodeType":"ElementaryTypeName","src":"27070:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":28969,"mutability":"mutable","name":"maxDepth","nameLocation":"27099:8:56","nodeType":"VariableDeclaration","scope":28978,"src":"27092:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":28968,"name":"uint64","nodeType":"ElementaryTypeName","src":"27092:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":28971,"mutability":"mutable","name":"followLinks","nameLocation":"27114:11:56","nodeType":"VariableDeclaration","scope":28978,"src":"27109:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":28970,"name":"bool","nodeType":"ElementaryTypeName","src":"27109:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27069:57:56"},"returnParameters":{"id":28977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28976,"mutability":"mutable","name":"entries","nameLocation":"27192:7:56","nodeType":"VariableDeclaration","scope":28978,"src":"27174:25:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$28168_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":28974,"nodeType":"UserDefinedTypeName","pathNode":{"id":28973,"name":"DirEntry","nameLocations":["27174:8:56"],"nodeType":"IdentifierPath","referencedDeclaration":28168,"src":"27174:8:56"},"referencedDeclaration":28168,"src":"27174:8:56","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$28168_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":28975,"nodeType":"ArrayTypeName","src":"27174:10:56","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$28168_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"27173:27:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28986,"nodeType":"FunctionDefinition","src":"27299:83:56","nodes":[],"documentation":{"id":28979,"nodeType":"StructuredDocumentation","src":"27207:87:56","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"27308:8:56","parameters":{"id":28982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28981,"mutability":"mutable","name":"path","nameLocation":"27333:4:56","nodeType":"VariableDeclaration","scope":28986,"src":"27317:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28980,"name":"string","nodeType":"ElementaryTypeName","src":"27317:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27316:22:56"},"returnParameters":{"id":28985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28984,"mutability":"mutable","name":"data","nameLocation":"27376:4:56","nodeType":"VariableDeclaration","scope":28986,"src":"27362:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":28983,"name":"string","nodeType":"ElementaryTypeName","src":"27362:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27361:20:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":28994,"nodeType":"FunctionDefinition","src":"27480:88:56","nodes":[],"documentation":{"id":28987,"nodeType":"StructuredDocumentation","src":"27388:87:56","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"27489:14:56","parameters":{"id":28990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28989,"mutability":"mutable","name":"path","nameLocation":"27520:4:56","nodeType":"VariableDeclaration","scope":28994,"src":"27504:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28988,"name":"string","nodeType":"ElementaryTypeName","src":"27504:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27503:22:56"},"returnParameters":{"id":28993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28992,"mutability":"mutable","name":"data","nameLocation":"27562:4:56","nodeType":"VariableDeclaration","scope":28994,"src":"27549:17:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":28991,"name":"bytes","nodeType":"ElementaryTypeName","src":"27549:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27548:19:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":29002,"nodeType":"FunctionDefinition","src":"27617:83:56","nodes":[],"documentation":{"id":28995,"nodeType":"StructuredDocumentation","src":"27574:38:56","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"27626:8:56","parameters":{"id":28998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28997,"mutability":"mutable","name":"path","nameLocation":"27651:4:56","nodeType":"VariableDeclaration","scope":29002,"src":"27635:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":28996,"name":"string","nodeType":"ElementaryTypeName","src":"27635:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27634:22:56"},"returnParameters":{"id":29001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29000,"mutability":"mutable","name":"line","nameLocation":"27694:4:56","nodeType":"VariableDeclaration","scope":29002,"src":"27680:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":28999,"name":"string","nodeType":"ElementaryTypeName","src":"27680:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27679:20:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":29010,"nodeType":"FunctionDefinition","src":"27959:93:56","nodes":[],"documentation":{"id":29003,"nodeType":"StructuredDocumentation","src":"27706:248:56","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"27968:8:56","parameters":{"id":29006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29005,"mutability":"mutable","name":"linkPath","nameLocation":"27993:8:56","nodeType":"VariableDeclaration","scope":29010,"src":"27977:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29004,"name":"string","nodeType":"ElementaryTypeName","src":"27977:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27976:26:56"},"returnParameters":{"id":29009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29008,"mutability":"mutable","name":"targetPath","nameLocation":"28040:10:56","nodeType":"VariableDeclaration","scope":29010,"src":"28026:24:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29007,"name":"string","nodeType":"ElementaryTypeName","src":"28026:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28025:26:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":29018,"nodeType":"FunctionDefinition","src":"28442:66:56","nodes":[],"documentation":{"id":29011,"nodeType":"StructuredDocumentation","src":"28058:379:56","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"28451:9:56","parameters":{"id":29016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29013,"mutability":"mutable","name":"path","nameLocation":"28477:4:56","nodeType":"VariableDeclaration","scope":29018,"src":"28461:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29012,"name":"string","nodeType":"ElementaryTypeName","src":"28461:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29015,"mutability":"mutable","name":"recursive","nameLocation":"28488:9:56","nodeType":"VariableDeclaration","scope":29018,"src":"28483:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29014,"name":"bool","nodeType":"ElementaryTypeName","src":"28483:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28460:38:56"},"returnParameters":{"id":29017,"nodeType":"ParameterList","parameters":[],"src":"28507:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29024,"nodeType":"FunctionDefinition","src":"28841:51:56","nodes":[],"documentation":{"id":29019,"nodeType":"StructuredDocumentation","src":"28514:322:56","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"28850:10:56","parameters":{"id":29022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29021,"mutability":"mutable","name":"path","nameLocation":"28877:4:56","nodeType":"VariableDeclaration","scope":29024,"src":"28861:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29020,"name":"string","nodeType":"ElementaryTypeName","src":"28861:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28860:22:56"},"returnParameters":{"id":29023,"nodeType":"ParameterList","parameters":[],"src":"28891:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29034,"nodeType":"FunctionDefinition","src":"28999:91:56","nodes":[],"documentation":{"id":29025,"nodeType":"StructuredDocumentation","src":"28898:96:56","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"29008:6:56","parameters":{"id":29029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29028,"mutability":"mutable","name":"commandInput","nameLocation":"29033:12:56","nodeType":"VariableDeclaration","scope":29034,"src":"29015:30:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":29026,"name":"string","nodeType":"ElementaryTypeName","src":"29015:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":29027,"nodeType":"ArrayTypeName","src":"29015:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"29014:32:56"},"returnParameters":{"id":29033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29032,"mutability":"mutable","name":"result","nameLocation":"29082:6:56","nodeType":"VariableDeclaration","scope":29034,"src":"29065:23:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$28202_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":29031,"nodeType":"UserDefinedTypeName","pathNode":{"id":29030,"name":"FfiResult","nameLocations":["29065:9:56"],"nodeType":"IdentifierPath","referencedDeclaration":28202,"src":"29065:9:56"},"referencedDeclaration":28202,"src":"29065:9:56","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$28202_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"29064:25:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29040,"nodeType":"FunctionDefinition","src":"29155:60:56","nodes":[],"documentation":{"id":29035,"nodeType":"StructuredDocumentation","src":"29096:54:56","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"29164:8:56","parameters":{"id":29036,"nodeType":"ParameterList","parameters":[],"src":"29172:2:56"},"returnParameters":{"id":29039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29038,"mutability":"mutable","name":"milliseconds","nameLocation":"29201:12:56","nodeType":"VariableDeclaration","scope":29040,"src":"29193:20:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29037,"name":"uint256","nodeType":"ElementaryTypeName","src":"29193:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29192:22:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29048,"nodeType":"FunctionDefinition","src":"29384:72:56","nodes":[],"documentation":{"id":29041,"nodeType":"StructuredDocumentation","src":"29221:158:56","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"29393:9:56","parameters":{"id":29046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29043,"mutability":"mutable","name":"path","nameLocation":"29419:4:56","nodeType":"VariableDeclaration","scope":29048,"src":"29403:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29042,"name":"string","nodeType":"ElementaryTypeName","src":"29403:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29045,"mutability":"mutable","name":"data","nameLocation":"29441:4:56","nodeType":"VariableDeclaration","scope":29048,"src":"29425:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29044,"name":"string","nodeType":"ElementaryTypeName","src":"29425:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29402:44:56"},"returnParameters":{"id":29047,"nodeType":"ParameterList","parameters":[],"src":"29455:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29056,"nodeType":"FunctionDefinition","src":"29634:77:56","nodes":[],"documentation":{"id":29049,"nodeType":"StructuredDocumentation","src":"29462:167:56","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"29643:15:56","parameters":{"id":29054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29051,"mutability":"mutable","name":"path","nameLocation":"29675:4:56","nodeType":"VariableDeclaration","scope":29056,"src":"29659:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29050,"name":"string","nodeType":"ElementaryTypeName","src":"29659:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29053,"mutability":"mutable","name":"data","nameLocation":"29696:4:56","nodeType":"VariableDeclaration","scope":29056,"src":"29681:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":29052,"name":"bytes","nodeType":"ElementaryTypeName","src":"29681:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29658:43:56"},"returnParameters":{"id":29055,"nodeType":"ParameterList","parameters":[],"src":"29710:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29064,"nodeType":"FunctionDefinition","src":"29832:72:56","nodes":[],"documentation":{"id":29057,"nodeType":"StructuredDocumentation","src":"29717:110:56","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"29841:9:56","parameters":{"id":29062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29059,"mutability":"mutable","name":"path","nameLocation":"29867:4:56","nodeType":"VariableDeclaration","scope":29064,"src":"29851:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29058,"name":"string","nodeType":"ElementaryTypeName","src":"29851:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29061,"mutability":"mutable","name":"data","nameLocation":"29889:4:56","nodeType":"VariableDeclaration","scope":29064,"src":"29873:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29060,"name":"string","nodeType":"ElementaryTypeName","src":"29873:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29850:44:56"},"returnParameters":{"id":29063,"nodeType":"ParameterList","parameters":[],"src":"29903:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29074,"nodeType":"FunctionDefinition","src":"30097:91:56","nodes":[],"documentation":{"id":29065,"nodeType":"StructuredDocumentation","src":"29941:151:56","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"30106:9:56","parameters":{"id":29070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29067,"mutability":"mutable","name":"json","nameLocation":"30132:4:56","nodeType":"VariableDeclaration","scope":29074,"src":"30116:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29066,"name":"string","nodeType":"ElementaryTypeName","src":"30116:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29069,"mutability":"mutable","name":"key","nameLocation":"30154:3:56","nodeType":"VariableDeclaration","scope":29074,"src":"30138:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29068,"name":"string","nodeType":"ElementaryTypeName","src":"30138:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30115:43:56"},"returnParameters":{"id":29073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29074,"src":"30182:4:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29071,"name":"bool","nodeType":"ElementaryTypeName","src":"30182:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30181:6:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":29084,"nodeType":"FunctionDefinition","src":"30243:95:56","nodes":[],"documentation":{"id":29075,"nodeType":"StructuredDocumentation","src":"30194:44:56","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"30252:13:56","parameters":{"id":29080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29077,"mutability":"mutable","name":"json","nameLocation":"30282:4:56","nodeType":"VariableDeclaration","scope":29084,"src":"30266:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29076,"name":"string","nodeType":"ElementaryTypeName","src":"30266:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29079,"mutability":"mutable","name":"key","nameLocation":"30304:3:56","nodeType":"VariableDeclaration","scope":29084,"src":"30288:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29078,"name":"string","nodeType":"ElementaryTypeName","src":"30288:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30265:43:56"},"returnParameters":{"id":29083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29084,"src":"30332:4:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29081,"name":"bool","nodeType":"ElementaryTypeName","src":"30332:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30331:6:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":29094,"nodeType":"FunctionDefinition","src":"30419:101:56","nodes":[],"documentation":{"id":29085,"nodeType":"StructuredDocumentation","src":"30344:70:56","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"30428:16:56","parameters":{"id":29090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29087,"mutability":"mutable","name":"json","nameLocation":"30461:4:56","nodeType":"VariableDeclaration","scope":29094,"src":"30445:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29086,"name":"string","nodeType":"ElementaryTypeName","src":"30445:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29089,"mutability":"mutable","name":"key","nameLocation":"30483:3:56","nodeType":"VariableDeclaration","scope":29094,"src":"30467:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29088,"name":"string","nodeType":"ElementaryTypeName","src":"30467:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30444:43:56"},"returnParameters":{"id":29093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29094,"src":"30511:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29091,"name":"address","nodeType":"ElementaryTypeName","src":"30511:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30510:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29105,"nodeType":"FunctionDefinition","src":"30603:139:56","nodes":[],"documentation":{"id":29095,"nodeType":"StructuredDocumentation","src":"30526:72:56","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"30612:21:56","parameters":{"id":29100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29097,"mutability":"mutable","name":"json","nameLocation":"30650:4:56","nodeType":"VariableDeclaration","scope":29105,"src":"30634:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29096,"name":"string","nodeType":"ElementaryTypeName","src":"30634:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29099,"mutability":"mutable","name":"key","nameLocation":"30672:3:56","nodeType":"VariableDeclaration","scope":29105,"src":"30656:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29098,"name":"string","nodeType":"ElementaryTypeName","src":"30656:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30633:43:56"},"returnParameters":{"id":29104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29105,"src":"30724:16:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":29101,"name":"address","nodeType":"ElementaryTypeName","src":"30724:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":29102,"nodeType":"ArrayTypeName","src":"30724:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"30723:18:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29115,"nodeType":"FunctionDefinition","src":"30820:95:56","nodes":[],"documentation":{"id":29106,"nodeType":"StructuredDocumentation","src":"30748:67:56","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"30829:13:56","parameters":{"id":29111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29108,"mutability":"mutable","name":"json","nameLocation":"30859:4:56","nodeType":"VariableDeclaration","scope":29115,"src":"30843:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29107,"name":"string","nodeType":"ElementaryTypeName","src":"30843:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29110,"mutability":"mutable","name":"key","nameLocation":"30881:3:56","nodeType":"VariableDeclaration","scope":29115,"src":"30865:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29109,"name":"string","nodeType":"ElementaryTypeName","src":"30865:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30842:43:56"},"returnParameters":{"id":29114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29115,"src":"30909:4:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29112,"name":"bool","nodeType":"ElementaryTypeName","src":"30909:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30908:6:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29126,"nodeType":"FunctionDefinition","src":"30995:109:56","nodes":[],"documentation":{"id":29116,"nodeType":"StructuredDocumentation","src":"30921:69:56","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"31004:18:56","parameters":{"id":29121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29118,"mutability":"mutable","name":"json","nameLocation":"31039:4:56","nodeType":"VariableDeclaration","scope":29126,"src":"31023:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29117,"name":"string","nodeType":"ElementaryTypeName","src":"31023:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29120,"mutability":"mutable","name":"key","nameLocation":"31061:3:56","nodeType":"VariableDeclaration","scope":29126,"src":"31045:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29119,"name":"string","nodeType":"ElementaryTypeName","src":"31045:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31022:43:56"},"returnParameters":{"id":29125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29126,"src":"31089:13:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":29122,"name":"bool","nodeType":"ElementaryTypeName","src":"31089:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":29123,"nodeType":"ArrayTypeName","src":"31089:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"31088:15:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29136,"nodeType":"FunctionDefinition","src":"31183:104:56","nodes":[],"documentation":{"id":29127,"nodeType":"StructuredDocumentation","src":"31110:68:56","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"31192:14:56","parameters":{"id":29132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29129,"mutability":"mutable","name":"json","nameLocation":"31223:4:56","nodeType":"VariableDeclaration","scope":29136,"src":"31207:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29128,"name":"string","nodeType":"ElementaryTypeName","src":"31207:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29131,"mutability":"mutable","name":"key","nameLocation":"31245:3:56","nodeType":"VariableDeclaration","scope":29136,"src":"31229:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29130,"name":"string","nodeType":"ElementaryTypeName","src":"31229:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31206:43:56"},"returnParameters":{"id":29135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29136,"src":"31273:12:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":29133,"name":"bytes","nodeType":"ElementaryTypeName","src":"31273:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31272:14:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29146,"nodeType":"FunctionDefinition","src":"31368:101:56","nodes":[],"documentation":{"id":29137,"nodeType":"StructuredDocumentation","src":"31293:70:56","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"31377:16:56","parameters":{"id":29142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29139,"mutability":"mutable","name":"json","nameLocation":"31410:4:56","nodeType":"VariableDeclaration","scope":29146,"src":"31394:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29138,"name":"string","nodeType":"ElementaryTypeName","src":"31394:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29141,"mutability":"mutable","name":"key","nameLocation":"31432:3:56","nodeType":"VariableDeclaration","scope":29146,"src":"31416:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29140,"name":"string","nodeType":"ElementaryTypeName","src":"31416:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31393:43:56"},"returnParameters":{"id":29145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29146,"src":"31460:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31460:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31459:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29157,"nodeType":"FunctionDefinition","src":"31552:139:56","nodes":[],"documentation":{"id":29147,"nodeType":"StructuredDocumentation","src":"31475:72:56","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"31561:21:56","parameters":{"id":29152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29149,"mutability":"mutable","name":"json","nameLocation":"31599:4:56","nodeType":"VariableDeclaration","scope":29157,"src":"31583:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29148,"name":"string","nodeType":"ElementaryTypeName","src":"31583:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29151,"mutability":"mutable","name":"key","nameLocation":"31621:3:56","nodeType":"VariableDeclaration","scope":29157,"src":"31605:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29150,"name":"string","nodeType":"ElementaryTypeName","src":"31605:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31582:43:56"},"returnParameters":{"id":29156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29157,"src":"31673:16:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":29153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31673:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":29154,"nodeType":"ArrayTypeName","src":"31673:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"31672:18:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29168,"nodeType":"FunctionDefinition","src":"31772:111:56","nodes":[],"documentation":{"id":29158,"nodeType":"StructuredDocumentation","src":"31697:70:56","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"31781:19:56","parameters":{"id":29163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29160,"mutability":"mutable","name":"json","nameLocation":"31817:4:56","nodeType":"VariableDeclaration","scope":29168,"src":"31801:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29159,"name":"string","nodeType":"ElementaryTypeName","src":"31801:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29162,"mutability":"mutable","name":"key","nameLocation":"31839:3:56","nodeType":"VariableDeclaration","scope":29168,"src":"31823:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29161,"name":"string","nodeType":"ElementaryTypeName","src":"31823:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31800:43:56"},"returnParameters":{"id":29167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29168,"src":"31867:14:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":29164,"name":"bytes","nodeType":"ElementaryTypeName","src":"31867:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":29165,"nodeType":"ArrayTypeName","src":"31867:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"31866:16:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29178,"nodeType":"FunctionDefinition","src":"31963:96:56","nodes":[],"documentation":{"id":29169,"nodeType":"StructuredDocumentation","src":"31889:69:56","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"31972:12:56","parameters":{"id":29174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29171,"mutability":"mutable","name":"json","nameLocation":"32001:4:56","nodeType":"VariableDeclaration","scope":29178,"src":"31985:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29170,"name":"string","nodeType":"ElementaryTypeName","src":"31985:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29173,"mutability":"mutable","name":"key","nameLocation":"32023:3:56","nodeType":"VariableDeclaration","scope":29178,"src":"32007:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29172,"name":"string","nodeType":"ElementaryTypeName","src":"32007:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31984:43:56"},"returnParameters":{"id":29177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29178,"src":"32051:6:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29175,"name":"int256","nodeType":"ElementaryTypeName","src":"32051:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32050:8:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29189,"nodeType":"FunctionDefinition","src":"32141:110:56","nodes":[],"documentation":{"id":29179,"nodeType":"StructuredDocumentation","src":"32065:71:56","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"32150:17:56","parameters":{"id":29184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29181,"mutability":"mutable","name":"json","nameLocation":"32184:4:56","nodeType":"VariableDeclaration","scope":29189,"src":"32168:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29180,"name":"string","nodeType":"ElementaryTypeName","src":"32168:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29183,"mutability":"mutable","name":"key","nameLocation":"32206:3:56","nodeType":"VariableDeclaration","scope":29189,"src":"32190:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29182,"name":"string","nodeType":"ElementaryTypeName","src":"32190:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32167:43:56"},"returnParameters":{"id":29188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29189,"src":"32234:15:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":29185,"name":"int256","nodeType":"ElementaryTypeName","src":"32234:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":29186,"nodeType":"ArrayTypeName","src":"32234:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"32233:17:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29200,"nodeType":"FunctionDefinition","src":"32316:111:56","nodes":[],"documentation":{"id":29190,"nodeType":"StructuredDocumentation","src":"32257:54:56","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"32325:13:56","parameters":{"id":29195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29192,"mutability":"mutable","name":"json","nameLocation":"32355:4:56","nodeType":"VariableDeclaration","scope":29200,"src":"32339:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29191,"name":"string","nodeType":"ElementaryTypeName","src":"32339:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29194,"mutability":"mutable","name":"key","nameLocation":"32377:3:56","nodeType":"VariableDeclaration","scope":29200,"src":"32361:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29193,"name":"string","nodeType":"ElementaryTypeName","src":"32361:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32338:43:56"},"returnParameters":{"id":29199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29198,"mutability":"mutable","name":"keys","nameLocation":"32421:4:56","nodeType":"VariableDeclaration","scope":29200,"src":"32405:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":29196,"name":"string","nodeType":"ElementaryTypeName","src":"32405:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":29197,"nodeType":"ArrayTypeName","src":"32405:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32404:22:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29210,"nodeType":"FunctionDefinition","src":"32507:106:56","nodes":[],"documentation":{"id":29201,"nodeType":"StructuredDocumentation","src":"32433:69:56","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"32516:15:56","parameters":{"id":29206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29203,"mutability":"mutable","name":"json","nameLocation":"32548:4:56","nodeType":"VariableDeclaration","scope":29210,"src":"32532:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29202,"name":"string","nodeType":"ElementaryTypeName","src":"32532:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29205,"mutability":"mutable","name":"key","nameLocation":"32570:3:56","nodeType":"VariableDeclaration","scope":29210,"src":"32554:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29204,"name":"string","nodeType":"ElementaryTypeName","src":"32554:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32531:43:56"},"returnParameters":{"id":29209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29210,"src":"32598:13:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29207,"name":"string","nodeType":"ElementaryTypeName","src":"32598:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32597:15:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29221,"nodeType":"FunctionDefinition","src":"32695:113:56","nodes":[],"documentation":{"id":29211,"nodeType":"StructuredDocumentation","src":"32619:71:56","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"32704:20:56","parameters":{"id":29216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29213,"mutability":"mutable","name":"json","nameLocation":"32741:4:56","nodeType":"VariableDeclaration","scope":29221,"src":"32725:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29212,"name":"string","nodeType":"ElementaryTypeName","src":"32725:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29215,"mutability":"mutable","name":"key","nameLocation":"32763:3:56","nodeType":"VariableDeclaration","scope":29221,"src":"32747:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29214,"name":"string","nodeType":"ElementaryTypeName","src":"32747:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32724:43:56"},"returnParameters":{"id":29220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29221,"src":"32791:15:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":29217,"name":"string","nodeType":"ElementaryTypeName","src":"32791:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":29218,"nodeType":"ArrayTypeName","src":"32791:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32790:17:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29231,"nodeType":"FunctionDefinition","src":"32889:98:56","nodes":[],"documentation":{"id":29222,"nodeType":"StructuredDocumentation","src":"32814:70:56","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"32898:13:56","parameters":{"id":29227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29224,"mutability":"mutable","name":"json","nameLocation":"32928:4:56","nodeType":"VariableDeclaration","scope":29231,"src":"32912:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29223,"name":"string","nodeType":"ElementaryTypeName","src":"32912:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29226,"mutability":"mutable","name":"key","nameLocation":"32950:3:56","nodeType":"VariableDeclaration","scope":29231,"src":"32934:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29225,"name":"string","nodeType":"ElementaryTypeName","src":"32934:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32911:43:56"},"returnParameters":{"id":29230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29231,"src":"32978:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29228,"name":"uint256","nodeType":"ElementaryTypeName","src":"32978:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32977:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29242,"nodeType":"FunctionDefinition","src":"33070:112:56","nodes":[],"documentation":{"id":29232,"nodeType":"StructuredDocumentation","src":"32993:72:56","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"33079:18:56","parameters":{"id":29237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29234,"mutability":"mutable","name":"json","nameLocation":"33114:4:56","nodeType":"VariableDeclaration","scope":29242,"src":"33098:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29233,"name":"string","nodeType":"ElementaryTypeName","src":"33098:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29236,"mutability":"mutable","name":"key","nameLocation":"33136:3:56","nodeType":"VariableDeclaration","scope":29242,"src":"33120:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29235,"name":"string","nodeType":"ElementaryTypeName","src":"33120:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33097:43:56"},"returnParameters":{"id":29241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29242,"src":"33164:16:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":29238,"name":"uint256","nodeType":"ElementaryTypeName","src":"33164:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":29239,"nodeType":"ArrayTypeName","src":"33164:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"33163:18:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29250,"nodeType":"FunctionDefinition","src":"33223:93:56","nodes":[],"documentation":{"id":29243,"nodeType":"StructuredDocumentation","src":"33188:30:56","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"33232:9:56","parameters":{"id":29246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29245,"mutability":"mutable","name":"json","nameLocation":"33258:4:56","nodeType":"VariableDeclaration","scope":29250,"src":"33242:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29244,"name":"string","nodeType":"ElementaryTypeName","src":"33242:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33241:22:56"},"returnParameters":{"id":29249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29248,"mutability":"mutable","name":"abiEncodedData","nameLocation":"33300:14:56","nodeType":"VariableDeclaration","scope":29250,"src":"33287:27:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":29247,"name":"bytes","nodeType":"ElementaryTypeName","src":"33287:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33286:29:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29260,"nodeType":"FunctionDefinition","src":"33366:114:56","nodes":[],"documentation":{"id":29251,"nodeType":"StructuredDocumentation","src":"33322:39:56","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"33375:9:56","parameters":{"id":29256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29253,"mutability":"mutable","name":"json","nameLocation":"33401:4:56","nodeType":"VariableDeclaration","scope":29260,"src":"33385:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29252,"name":"string","nodeType":"ElementaryTypeName","src":"33385:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29255,"mutability":"mutable","name":"key","nameLocation":"33423:3:56","nodeType":"VariableDeclaration","scope":29260,"src":"33407:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29254,"name":"string","nodeType":"ElementaryTypeName","src":"33407:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33384:43:56"},"returnParameters":{"id":29259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29258,"mutability":"mutable","name":"abiEncodedData","nameLocation":"33464:14:56","nodeType":"VariableDeclaration","scope":29260,"src":"33451:27:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":29257,"name":"bytes","nodeType":"ElementaryTypeName","src":"33451:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33450:29:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29272,"nodeType":"FunctionDefinition","src":"33515:148:56","nodes":[],"documentation":{"id":29261,"nodeType":"StructuredDocumentation","src":"33486:24:56","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"33524:16:56","parameters":{"id":29268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29263,"mutability":"mutable","name":"objectKey","nameLocation":"33557:9:56","nodeType":"VariableDeclaration","scope":29272,"src":"33541:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29262,"name":"string","nodeType":"ElementaryTypeName","src":"33541:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29265,"mutability":"mutable","name":"valueKey","nameLocation":"33584:8:56","nodeType":"VariableDeclaration","scope":29272,"src":"33568:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29264,"name":"string","nodeType":"ElementaryTypeName","src":"33568:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29267,"mutability":"mutable","name":"value","nameLocation":"33602:5:56","nodeType":"VariableDeclaration","scope":29272,"src":"33594:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29266,"name":"address","nodeType":"ElementaryTypeName","src":"33594:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33540:68:56"},"returnParameters":{"id":29271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29270,"mutability":"mutable","name":"json","nameLocation":"33657:4:56","nodeType":"VariableDeclaration","scope":29272,"src":"33643:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29269,"name":"string","nodeType":"ElementaryTypeName","src":"33643:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33642:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29285,"nodeType":"FunctionDefinition","src":"33698:160:56","nodes":[],"documentation":{"id":29273,"nodeType":"StructuredDocumentation","src":"33669:24:56","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"33707:16:56","parameters":{"id":29281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29275,"mutability":"mutable","name":"objectKey","nameLocation":"33740:9:56","nodeType":"VariableDeclaration","scope":29285,"src":"33724:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29274,"name":"string","nodeType":"ElementaryTypeName","src":"33724:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29277,"mutability":"mutable","name":"valueKey","nameLocation":"33767:8:56","nodeType":"VariableDeclaration","scope":29285,"src":"33751:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29276,"name":"string","nodeType":"ElementaryTypeName","src":"33751:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29280,"mutability":"mutable","name":"values","nameLocation":"33796:6:56","nodeType":"VariableDeclaration","scope":29285,"src":"33777:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":29278,"name":"address","nodeType":"ElementaryTypeName","src":"33777:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":29279,"nodeType":"ArrayTypeName","src":"33777:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"33723:80:56"},"returnParameters":{"id":29284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29283,"mutability":"mutable","name":"json","nameLocation":"33852:4:56","nodeType":"VariableDeclaration","scope":29285,"src":"33838:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29282,"name":"string","nodeType":"ElementaryTypeName","src":"33838:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33837:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29297,"nodeType":"FunctionDefinition","src":"33893:142:56","nodes":[],"documentation":{"id":29286,"nodeType":"StructuredDocumentation","src":"33864:24:56","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"33902:13:56","parameters":{"id":29293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29288,"mutability":"mutable","name":"objectKey","nameLocation":"33932:9:56","nodeType":"VariableDeclaration","scope":29297,"src":"33916:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29287,"name":"string","nodeType":"ElementaryTypeName","src":"33916:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29290,"mutability":"mutable","name":"valueKey","nameLocation":"33959:8:56","nodeType":"VariableDeclaration","scope":29297,"src":"33943:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29289,"name":"string","nodeType":"ElementaryTypeName","src":"33943:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29292,"mutability":"mutable","name":"value","nameLocation":"33974:5:56","nodeType":"VariableDeclaration","scope":29297,"src":"33969:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29291,"name":"bool","nodeType":"ElementaryTypeName","src":"33969:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33915:65:56"},"returnParameters":{"id":29296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29295,"mutability":"mutable","name":"json","nameLocation":"34029:4:56","nodeType":"VariableDeclaration","scope":29297,"src":"34015:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29294,"name":"string","nodeType":"ElementaryTypeName","src":"34015:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34014:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29310,"nodeType":"FunctionDefinition","src":"34070:154:56","nodes":[],"documentation":{"id":29298,"nodeType":"StructuredDocumentation","src":"34041:24:56","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"34079:13:56","parameters":{"id":29306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29300,"mutability":"mutable","name":"objectKey","nameLocation":"34109:9:56","nodeType":"VariableDeclaration","scope":29310,"src":"34093:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29299,"name":"string","nodeType":"ElementaryTypeName","src":"34093:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29302,"mutability":"mutable","name":"valueKey","nameLocation":"34136:8:56","nodeType":"VariableDeclaration","scope":29310,"src":"34120:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29301,"name":"string","nodeType":"ElementaryTypeName","src":"34120:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29305,"mutability":"mutable","name":"values","nameLocation":"34162:6:56","nodeType":"VariableDeclaration","scope":29310,"src":"34146:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":29303,"name":"bool","nodeType":"ElementaryTypeName","src":"34146:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":29304,"nodeType":"ArrayTypeName","src":"34146:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"34092:77:56"},"returnParameters":{"id":29309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29308,"mutability":"mutable","name":"json","nameLocation":"34218:4:56","nodeType":"VariableDeclaration","scope":29310,"src":"34204:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29307,"name":"string","nodeType":"ElementaryTypeName","src":"34204:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34203:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29322,"nodeType":"FunctionDefinition","src":"34259:148:56","nodes":[],"documentation":{"id":29311,"nodeType":"StructuredDocumentation","src":"34230:24:56","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"34268:16:56","parameters":{"id":29318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29313,"mutability":"mutable","name":"objectKey","nameLocation":"34301:9:56","nodeType":"VariableDeclaration","scope":29322,"src":"34285:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29312,"name":"string","nodeType":"ElementaryTypeName","src":"34285:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29315,"mutability":"mutable","name":"valueKey","nameLocation":"34328:8:56","nodeType":"VariableDeclaration","scope":29322,"src":"34312:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29314,"name":"string","nodeType":"ElementaryTypeName","src":"34312:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29317,"mutability":"mutable","name":"value","nameLocation":"34346:5:56","nodeType":"VariableDeclaration","scope":29322,"src":"34338:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34338:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"34284:68:56"},"returnParameters":{"id":29321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29320,"mutability":"mutable","name":"json","nameLocation":"34401:4:56","nodeType":"VariableDeclaration","scope":29322,"src":"34387:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29319,"name":"string","nodeType":"ElementaryTypeName","src":"34387:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34386:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29335,"nodeType":"FunctionDefinition","src":"34442:160:56","nodes":[],"documentation":{"id":29323,"nodeType":"StructuredDocumentation","src":"34413:24:56","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"34451:16:56","parameters":{"id":29331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29325,"mutability":"mutable","name":"objectKey","nameLocation":"34484:9:56","nodeType":"VariableDeclaration","scope":29335,"src":"34468:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29324,"name":"string","nodeType":"ElementaryTypeName","src":"34468:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29327,"mutability":"mutable","name":"valueKey","nameLocation":"34511:8:56","nodeType":"VariableDeclaration","scope":29335,"src":"34495:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29326,"name":"string","nodeType":"ElementaryTypeName","src":"34495:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29330,"mutability":"mutable","name":"values","nameLocation":"34540:6:56","nodeType":"VariableDeclaration","scope":29335,"src":"34521:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":29328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34521:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":29329,"nodeType":"ArrayTypeName","src":"34521:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"34467:80:56"},"returnParameters":{"id":29334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29333,"mutability":"mutable","name":"json","nameLocation":"34596:4:56","nodeType":"VariableDeclaration","scope":29335,"src":"34582:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29332,"name":"string","nodeType":"ElementaryTypeName","src":"34582:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34581:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29347,"nodeType":"FunctionDefinition","src":"34637:153:56","nodes":[],"documentation":{"id":29336,"nodeType":"StructuredDocumentation","src":"34608:24:56","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"34646:14:56","parameters":{"id":29343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29338,"mutability":"mutable","name":"objectKey","nameLocation":"34677:9:56","nodeType":"VariableDeclaration","scope":29347,"src":"34661:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29337,"name":"string","nodeType":"ElementaryTypeName","src":"34661:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29340,"mutability":"mutable","name":"valueKey","nameLocation":"34704:8:56","nodeType":"VariableDeclaration","scope":29347,"src":"34688:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29339,"name":"string","nodeType":"ElementaryTypeName","src":"34688:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29342,"mutability":"mutable","name":"value","nameLocation":"34729:5:56","nodeType":"VariableDeclaration","scope":29347,"src":"34714:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":29341,"name":"bytes","nodeType":"ElementaryTypeName","src":"34714:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34660:75:56"},"returnParameters":{"id":29346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29345,"mutability":"mutable","name":"json","nameLocation":"34784:4:56","nodeType":"VariableDeclaration","scope":29347,"src":"34770:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29344,"name":"string","nodeType":"ElementaryTypeName","src":"34770:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34769:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29360,"nodeType":"FunctionDefinition","src":"34825:156:56","nodes":[],"documentation":{"id":29348,"nodeType":"StructuredDocumentation","src":"34796:24:56","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"34834:14:56","parameters":{"id":29356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29350,"mutability":"mutable","name":"objectKey","nameLocation":"34865:9:56","nodeType":"VariableDeclaration","scope":29360,"src":"34849:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29349,"name":"string","nodeType":"ElementaryTypeName","src":"34849:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29352,"mutability":"mutable","name":"valueKey","nameLocation":"34892:8:56","nodeType":"VariableDeclaration","scope":29360,"src":"34876:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29351,"name":"string","nodeType":"ElementaryTypeName","src":"34876:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29355,"mutability":"mutable","name":"values","nameLocation":"34919:6:56","nodeType":"VariableDeclaration","scope":29360,"src":"34902:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":29353,"name":"bytes","nodeType":"ElementaryTypeName","src":"34902:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":29354,"nodeType":"ArrayTypeName","src":"34902:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"34848:78:56"},"returnParameters":{"id":29359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29358,"mutability":"mutable","name":"json","nameLocation":"34975:4:56","nodeType":"VariableDeclaration","scope":29360,"src":"34961:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29357,"name":"string","nodeType":"ElementaryTypeName","src":"34961:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34960:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29372,"nodeType":"FunctionDefinition","src":"35016:143:56","nodes":[],"documentation":{"id":29361,"nodeType":"StructuredDocumentation","src":"34987:24:56","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"35025:12:56","parameters":{"id":29368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29363,"mutability":"mutable","name":"objectKey","nameLocation":"35054:9:56","nodeType":"VariableDeclaration","scope":29372,"src":"35038:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29362,"name":"string","nodeType":"ElementaryTypeName","src":"35038:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29365,"mutability":"mutable","name":"valueKey","nameLocation":"35081:8:56","nodeType":"VariableDeclaration","scope":29372,"src":"35065:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29364,"name":"string","nodeType":"ElementaryTypeName","src":"35065:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29367,"mutability":"mutable","name":"value","nameLocation":"35098:5:56","nodeType":"VariableDeclaration","scope":29372,"src":"35091:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29366,"name":"int256","nodeType":"ElementaryTypeName","src":"35091:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35037:67:56"},"returnParameters":{"id":29371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29370,"mutability":"mutable","name":"json","nameLocation":"35153:4:56","nodeType":"VariableDeclaration","scope":29372,"src":"35139:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29369,"name":"string","nodeType":"ElementaryTypeName","src":"35139:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35138:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29385,"nodeType":"FunctionDefinition","src":"35194:155:56","nodes":[],"documentation":{"id":29373,"nodeType":"StructuredDocumentation","src":"35165:24:56","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"35203:12:56","parameters":{"id":29381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29375,"mutability":"mutable","name":"objectKey","nameLocation":"35232:9:56","nodeType":"VariableDeclaration","scope":29385,"src":"35216:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29374,"name":"string","nodeType":"ElementaryTypeName","src":"35216:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29377,"mutability":"mutable","name":"valueKey","nameLocation":"35259:8:56","nodeType":"VariableDeclaration","scope":29385,"src":"35243:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29376,"name":"string","nodeType":"ElementaryTypeName","src":"35243:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29380,"mutability":"mutable","name":"values","nameLocation":"35287:6:56","nodeType":"VariableDeclaration","scope":29385,"src":"35269:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":29378,"name":"int256","nodeType":"ElementaryTypeName","src":"35269:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":29379,"nodeType":"ArrayTypeName","src":"35269:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"35215:79:56"},"returnParameters":{"id":29384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29383,"mutability":"mutable","name":"json","nameLocation":"35343:4:56","nodeType":"VariableDeclaration","scope":29385,"src":"35329:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29382,"name":"string","nodeType":"ElementaryTypeName","src":"35329:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35328:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29395,"nodeType":"FunctionDefinition","src":"35546:111:56","nodes":[],"documentation":{"id":29386,"nodeType":"StructuredDocumentation","src":"35355:186:56","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"35555:13:56","parameters":{"id":29391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29388,"mutability":"mutable","name":"objectKey","nameLocation":"35585:9:56","nodeType":"VariableDeclaration","scope":29395,"src":"35569:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29387,"name":"string","nodeType":"ElementaryTypeName","src":"35569:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29390,"mutability":"mutable","name":"value","nameLocation":"35612:5:56","nodeType":"VariableDeclaration","scope":29395,"src":"35596:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29389,"name":"string","nodeType":"ElementaryTypeName","src":"35596:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35568:50:56"},"returnParameters":{"id":29394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29393,"mutability":"mutable","name":"json","nameLocation":"35651:4:56","nodeType":"VariableDeclaration","scope":29395,"src":"35637:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29392,"name":"string","nodeType":"ElementaryTypeName","src":"35637:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35636:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29407,"nodeType":"FunctionDefinition","src":"35692:155:56","nodes":[],"documentation":{"id":29396,"nodeType":"StructuredDocumentation","src":"35663:24:56","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"35701:15:56","parameters":{"id":29403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29398,"mutability":"mutable","name":"objectKey","nameLocation":"35733:9:56","nodeType":"VariableDeclaration","scope":29407,"src":"35717:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29397,"name":"string","nodeType":"ElementaryTypeName","src":"35717:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29400,"mutability":"mutable","name":"valueKey","nameLocation":"35760:8:56","nodeType":"VariableDeclaration","scope":29407,"src":"35744:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29399,"name":"string","nodeType":"ElementaryTypeName","src":"35744:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29402,"mutability":"mutable","name":"value","nameLocation":"35786:5:56","nodeType":"VariableDeclaration","scope":29407,"src":"35770:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29401,"name":"string","nodeType":"ElementaryTypeName","src":"35770:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35716:76:56"},"returnParameters":{"id":29406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29405,"mutability":"mutable","name":"json","nameLocation":"35841:4:56","nodeType":"VariableDeclaration","scope":29407,"src":"35827:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29404,"name":"string","nodeType":"ElementaryTypeName","src":"35827:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35826:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29420,"nodeType":"FunctionDefinition","src":"35882:158:56","nodes":[],"documentation":{"id":29408,"nodeType":"StructuredDocumentation","src":"35853:24:56","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"35891:15:56","parameters":{"id":29416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29410,"mutability":"mutable","name":"objectKey","nameLocation":"35923:9:56","nodeType":"VariableDeclaration","scope":29420,"src":"35907:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29409,"name":"string","nodeType":"ElementaryTypeName","src":"35907:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29412,"mutability":"mutable","name":"valueKey","nameLocation":"35950:8:56","nodeType":"VariableDeclaration","scope":29420,"src":"35934:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29411,"name":"string","nodeType":"ElementaryTypeName","src":"35934:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29415,"mutability":"mutable","name":"values","nameLocation":"35978:6:56","nodeType":"VariableDeclaration","scope":29420,"src":"35960:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":29413,"name":"string","nodeType":"ElementaryTypeName","src":"35960:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":29414,"nodeType":"ArrayTypeName","src":"35960:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"35906:79:56"},"returnParameters":{"id":29419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29418,"mutability":"mutable","name":"json","nameLocation":"36034:4:56","nodeType":"VariableDeclaration","scope":29420,"src":"36020:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29417,"name":"string","nodeType":"ElementaryTypeName","src":"36020:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36019:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29432,"nodeType":"FunctionDefinition","src":"36075:150:56","nodes":[],"documentation":{"id":29421,"nodeType":"StructuredDocumentation","src":"36046:24:56","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"36084:18:56","parameters":{"id":29428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29423,"mutability":"mutable","name":"objectKey","nameLocation":"36119:9:56","nodeType":"VariableDeclaration","scope":29432,"src":"36103:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29422,"name":"string","nodeType":"ElementaryTypeName","src":"36103:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29425,"mutability":"mutable","name":"valueKey","nameLocation":"36146:8:56","nodeType":"VariableDeclaration","scope":29432,"src":"36130:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29424,"name":"string","nodeType":"ElementaryTypeName","src":"36130:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29427,"mutability":"mutable","name":"value","nameLocation":"36164:5:56","nodeType":"VariableDeclaration","scope":29432,"src":"36156:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29426,"name":"uint256","nodeType":"ElementaryTypeName","src":"36156:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36102:68:56"},"returnParameters":{"id":29431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29430,"mutability":"mutable","name":"json","nameLocation":"36219:4:56","nodeType":"VariableDeclaration","scope":29432,"src":"36205:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29429,"name":"string","nodeType":"ElementaryTypeName","src":"36205:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36204:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29444,"nodeType":"FunctionDefinition","src":"36260:145:56","nodes":[],"documentation":{"id":29433,"nodeType":"StructuredDocumentation","src":"36231:24:56","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"36269:13:56","parameters":{"id":29440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29435,"mutability":"mutable","name":"objectKey","nameLocation":"36299:9:56","nodeType":"VariableDeclaration","scope":29444,"src":"36283:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29434,"name":"string","nodeType":"ElementaryTypeName","src":"36283:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29437,"mutability":"mutable","name":"valueKey","nameLocation":"36326:8:56","nodeType":"VariableDeclaration","scope":29444,"src":"36310:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29436,"name":"string","nodeType":"ElementaryTypeName","src":"36310:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29439,"mutability":"mutable","name":"value","nameLocation":"36344:5:56","nodeType":"VariableDeclaration","scope":29444,"src":"36336:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29438,"name":"uint256","nodeType":"ElementaryTypeName","src":"36336:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36282:68:56"},"returnParameters":{"id":29443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29442,"mutability":"mutable","name":"json","nameLocation":"36399:4:56","nodeType":"VariableDeclaration","scope":29444,"src":"36385:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29441,"name":"string","nodeType":"ElementaryTypeName","src":"36385:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36384:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29457,"nodeType":"FunctionDefinition","src":"36440:157:56","nodes":[],"documentation":{"id":29445,"nodeType":"StructuredDocumentation","src":"36411:24:56","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"36449:13:56","parameters":{"id":29453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29447,"mutability":"mutable","name":"objectKey","nameLocation":"36479:9:56","nodeType":"VariableDeclaration","scope":29457,"src":"36463:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29446,"name":"string","nodeType":"ElementaryTypeName","src":"36463:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29449,"mutability":"mutable","name":"valueKey","nameLocation":"36506:8:56","nodeType":"VariableDeclaration","scope":29457,"src":"36490:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29448,"name":"string","nodeType":"ElementaryTypeName","src":"36490:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29452,"mutability":"mutable","name":"values","nameLocation":"36535:6:56","nodeType":"VariableDeclaration","scope":29457,"src":"36516:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":29450,"name":"uint256","nodeType":"ElementaryTypeName","src":"36516:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":29451,"nodeType":"ArrayTypeName","src":"36516:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"36462:80:56"},"returnParameters":{"id":29456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29455,"mutability":"mutable","name":"json","nameLocation":"36591:4:56","nodeType":"VariableDeclaration","scope":29457,"src":"36577:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29454,"name":"string","nodeType":"ElementaryTypeName","src":"36577:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36576:20:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29465,"nodeType":"FunctionDefinition","src":"36697:72:56","nodes":[],"documentation":{"id":29458,"nodeType":"StructuredDocumentation","src":"36603:89:56","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"36706:9:56","parameters":{"id":29463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29460,"mutability":"mutable","name":"json","nameLocation":"36732:4:56","nodeType":"VariableDeclaration","scope":29465,"src":"36716:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29459,"name":"string","nodeType":"ElementaryTypeName","src":"36716:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29462,"mutability":"mutable","name":"path","nameLocation":"36754:4:56","nodeType":"VariableDeclaration","scope":29465,"src":"36738:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29461,"name":"string","nodeType":"ElementaryTypeName","src":"36738:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36715:44:56"},"returnParameters":{"id":29464,"nodeType":"ParameterList","parameters":[],"src":"36768:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29475,"nodeType":"FunctionDefinition","src":"36995:98:56","nodes":[],"documentation":{"id":29466,"nodeType":"StructuredDocumentation","src":"36775:215:56","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"37004:9:56","parameters":{"id":29473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29468,"mutability":"mutable","name":"json","nameLocation":"37030:4:56","nodeType":"VariableDeclaration","scope":29475,"src":"37014:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29467,"name":"string","nodeType":"ElementaryTypeName","src":"37014:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29470,"mutability":"mutable","name":"path","nameLocation":"37052:4:56","nodeType":"VariableDeclaration","scope":29475,"src":"37036:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29469,"name":"string","nodeType":"ElementaryTypeName","src":"37036:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29472,"mutability":"mutable","name":"valueKey","nameLocation":"37074:8:56","nodeType":"VariableDeclaration","scope":29475,"src":"37058:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29471,"name":"string","nodeType":"ElementaryTypeName","src":"37058:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37013:70:56"},"returnParameters":{"id":29474,"nodeType":"ParameterList","parameters":[],"src":"37092:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29479,"nodeType":"FunctionDefinition","src":"37632:30:56","nodes":[],"documentation":{"id":29476,"nodeType":"StructuredDocumentation","src":"37135:492:56","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37641:9:56","parameters":{"id":29477,"nodeType":"ParameterList","parameters":[],"src":"37650:2:56"},"returnParameters":{"id":29478,"nodeType":"ParameterList","parameters":[],"src":"37661:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29485,"nodeType":"FunctionDefinition","src":"37832:44:56","nodes":[],"documentation":{"id":29480,"nodeType":"StructuredDocumentation","src":"37668:159:56","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37841:9:56","parameters":{"id":29483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29482,"mutability":"mutable","name":"signer","nameLocation":"37859:6:56","nodeType":"VariableDeclaration","scope":29485,"src":"37851:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29481,"name":"address","nodeType":"ElementaryTypeName","src":"37851:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37850:16:56"},"returnParameters":{"id":29484,"nodeType":"ParameterList","parameters":[],"src":"37875:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29491,"nodeType":"FunctionDefinition","src":"38050:48:56","nodes":[],"documentation":{"id":29486,"nodeType":"StructuredDocumentation","src":"37882:163:56","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"38059:9:56","parameters":{"id":29489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29488,"mutability":"mutable","name":"privateKey","nameLocation":"38077:10:56","nodeType":"VariableDeclaration","scope":29491,"src":"38069:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29487,"name":"uint256","nodeType":"ElementaryTypeName","src":"38069:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38068:20:56"},"returnParameters":{"id":29490,"nodeType":"ParameterList","parameters":[],"src":"38097:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29495,"nodeType":"FunctionDefinition","src":"38608:35:56","nodes":[],"documentation":{"id":29492,"nodeType":"StructuredDocumentation","src":"38104:499:56","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38617:14:56","parameters":{"id":29493,"nodeType":"ParameterList","parameters":[],"src":"38631:2:56"},"returnParameters":{"id":29494,"nodeType":"ParameterList","parameters":[],"src":"38642:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29501,"nodeType":"FunctionDefinition","src":"38805:49:56","nodes":[],"documentation":{"id":29496,"nodeType":"StructuredDocumentation","src":"38649:151:56","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38814:14:56","parameters":{"id":29499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29498,"mutability":"mutable","name":"signer","nameLocation":"38837:6:56","nodeType":"VariableDeclaration","scope":29501,"src":"38829:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29497,"name":"address","nodeType":"ElementaryTypeName","src":"38829:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38828:16:56"},"returnParameters":{"id":29500,"nodeType":"ParameterList","parameters":[],"src":"38853:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29507,"nodeType":"FunctionDefinition","src":"39020:53:56","nodes":[],"documentation":{"id":29502,"nodeType":"StructuredDocumentation","src":"38860:155:56","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"39029:14:56","parameters":{"id":29505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29504,"mutability":"mutable","name":"privateKey","nameLocation":"39052:10:56","nodeType":"VariableDeclaration","scope":29507,"src":"39044:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29503,"name":"uint256","nodeType":"ElementaryTypeName","src":"39044:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39043:20:56"},"returnParameters":{"id":29506,"nodeType":"ParameterList","parameters":[],"src":"39072:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29511,"nodeType":"FunctionDefinition","src":"39126:34:56","nodes":[],"documentation":{"id":29508,"nodeType":"StructuredDocumentation","src":"39079:42:56","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"39135:13:56","parameters":{"id":29509,"nodeType":"ParameterList","parameters":[],"src":"39148:2:56"},"returnParameters":{"id":29510,"nodeType":"ParameterList","parameters":[],"src":"39159:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":29521,"nodeType":"FunctionDefinition","src":"39409:93:56","nodes":[],"documentation":{"id":29512,"nodeType":"StructuredDocumentation","src":"39199:205:56","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"39418:7:56","parameters":{"id":29517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29514,"mutability":"mutable","name":"input","nameLocation":"39442:5:56","nodeType":"VariableDeclaration","scope":29521,"src":"39426:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29513,"name":"string","nodeType":"ElementaryTypeName","src":"39426:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29516,"mutability":"mutable","name":"key","nameLocation":"39465:3:56","nodeType":"VariableDeclaration","scope":29521,"src":"39449:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29515,"name":"string","nodeType":"ElementaryTypeName","src":"39449:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39425:44:56"},"returnParameters":{"id":29520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29521,"src":"39493:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29518,"name":"uint256","nodeType":"ElementaryTypeName","src":"39493:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39492:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29529,"nodeType":"FunctionDefinition","src":"39561:100:56","nodes":[],"documentation":{"id":29522,"nodeType":"StructuredDocumentation","src":"39508:48:56","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"39570:12:56","parameters":{"id":29525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29524,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39599:16:56","nodeType":"VariableDeclaration","scope":29529,"src":"39583:32:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29523,"name":"string","nodeType":"ElementaryTypeName","src":"39583:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39582:34:56"},"returnParameters":{"id":29528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29527,"mutability":"mutable","name":"parsedValue","nameLocation":"39648:11:56","nodeType":"VariableDeclaration","scope":29529,"src":"39640:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29526,"name":"address","nodeType":"ElementaryTypeName","src":"39640:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39639:21:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29537,"nodeType":"FunctionDefinition","src":"39716:94:56","nodes":[],"documentation":{"id":29530,"nodeType":"StructuredDocumentation","src":"39667:44:56","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"39725:9:56","parameters":{"id":29533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29532,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39751:16:56","nodeType":"VariableDeclaration","scope":29537,"src":"39735:32:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29531,"name":"string","nodeType":"ElementaryTypeName","src":"39735:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39734:34:56"},"returnParameters":{"id":29536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29535,"mutability":"mutable","name":"parsedValue","nameLocation":"39797:11:56","nodeType":"VariableDeclaration","scope":29537,"src":"39792:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29534,"name":"bool","nodeType":"ElementaryTypeName","src":"39792:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"39791:18:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29545,"nodeType":"FunctionDefinition","src":"39864:103:56","nodes":[],"documentation":{"id":29538,"nodeType":"StructuredDocumentation","src":"39816:43:56","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"39873:10:56","parameters":{"id":29541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29540,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39900:16:56","nodeType":"VariableDeclaration","scope":29545,"src":"39884:32:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29539,"name":"string","nodeType":"ElementaryTypeName","src":"39884:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39883:34:56"},"returnParameters":{"id":29544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29543,"mutability":"mutable","name":"parsedValue","nameLocation":"39954:11:56","nodeType":"VariableDeclaration","scope":29545,"src":"39941:24:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":29542,"name":"bytes","nodeType":"ElementaryTypeName","src":"39941:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39940:26:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29553,"nodeType":"FunctionDefinition","src":"40025:100:56","nodes":[],"documentation":{"id":29546,"nodeType":"StructuredDocumentation","src":"39973:47:56","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"40034:12:56","parameters":{"id":29549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29548,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40063:16:56","nodeType":"VariableDeclaration","scope":29553,"src":"40047:32:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29547,"name":"string","nodeType":"ElementaryTypeName","src":"40047:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40046:34:56"},"returnParameters":{"id":29552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29551,"mutability":"mutable","name":"parsedValue","nameLocation":"40112:11:56","nodeType":"VariableDeclaration","scope":29553,"src":"40104:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"40104:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"40103:21:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29561,"nodeType":"FunctionDefinition","src":"40182:95:56","nodes":[],"documentation":{"id":29554,"nodeType":"StructuredDocumentation","src":"40131:46:56","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"40191:8:56","parameters":{"id":29557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29556,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40216:16:56","nodeType":"VariableDeclaration","scope":29561,"src":"40200:32:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29555,"name":"string","nodeType":"ElementaryTypeName","src":"40200:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40199:34:56"},"returnParameters":{"id":29560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29559,"mutability":"mutable","name":"parsedValue","nameLocation":"40264:11:56","nodeType":"VariableDeclaration","scope":29561,"src":"40257:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29558,"name":"int256","nodeType":"ElementaryTypeName","src":"40257:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"40256:20:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29569,"nodeType":"FunctionDefinition","src":"40335:97:56","nodes":[],"documentation":{"id":29562,"nodeType":"StructuredDocumentation","src":"40283:47:56","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"40344:9:56","parameters":{"id":29565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29564,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40370:16:56","nodeType":"VariableDeclaration","scope":29569,"src":"40354:32:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29563,"name":"string","nodeType":"ElementaryTypeName","src":"40354:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40353:34:56"},"returnParameters":{"id":29568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29567,"mutability":"mutable","name":"parsedValue","nameLocation":"40419:11:56","nodeType":"VariableDeclaration","scope":29569,"src":"40411:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29566,"name":"uint256","nodeType":"ElementaryTypeName","src":"40411:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40410:21:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29581,"nodeType":"FunctionDefinition","src":"40510:151:56","nodes":[],"documentation":{"id":29570,"nodeType":"StructuredDocumentation","src":"40438:67:56","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"40519:7:56","parameters":{"id":29577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29572,"mutability":"mutable","name":"input","nameLocation":"40543:5:56","nodeType":"VariableDeclaration","scope":29581,"src":"40527:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29571,"name":"string","nodeType":"ElementaryTypeName","src":"40527:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29574,"mutability":"mutable","name":"from","nameLocation":"40566:4:56","nodeType":"VariableDeclaration","scope":29581,"src":"40550:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29573,"name":"string","nodeType":"ElementaryTypeName","src":"40550:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29576,"mutability":"mutable","name":"to","nameLocation":"40588:2:56","nodeType":"VariableDeclaration","scope":29581,"src":"40572:18:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29575,"name":"string","nodeType":"ElementaryTypeName","src":"40572:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40526:65:56"},"returnParameters":{"id":29580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29579,"mutability":"mutable","name":"output","nameLocation":"40653:6:56","nodeType":"VariableDeclaration","scope":29581,"src":"40639:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29578,"name":"string","nodeType":"ElementaryTypeName","src":"40639:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40638:22:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29592,"nodeType":"FunctionDefinition","src":"40754:113:56","nodes":[],"documentation":{"id":29582,"nodeType":"StructuredDocumentation","src":"40667:82:56","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"40763:5:56","parameters":{"id":29587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29584,"mutability":"mutable","name":"input","nameLocation":"40785:5:56","nodeType":"VariableDeclaration","scope":29592,"src":"40769:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29583,"name":"string","nodeType":"ElementaryTypeName","src":"40769:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29586,"mutability":"mutable","name":"delimiter","nameLocation":"40808:9:56","nodeType":"VariableDeclaration","scope":29592,"src":"40792:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29585,"name":"string","nodeType":"ElementaryTypeName","src":"40792:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40768:50:56"},"returnParameters":{"id":29591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29590,"mutability":"mutable","name":"outputs","nameLocation":"40858:7:56","nodeType":"VariableDeclaration","scope":29592,"src":"40842:23:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":29588,"name":"string","nodeType":"ElementaryTypeName","src":"40842:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":29589,"nodeType":"ArrayTypeName","src":"40842:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"40841:25:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29600,"nodeType":"FunctionDefinition","src":"40929:89:56","nodes":[],"documentation":{"id":29593,"nodeType":"StructuredDocumentation","src":"40873:51:56","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"40938:11:56","parameters":{"id":29596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29595,"mutability":"mutable","name":"input","nameLocation":"40966:5:56","nodeType":"VariableDeclaration","scope":29600,"src":"40950:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29594,"name":"string","nodeType":"ElementaryTypeName","src":"40950:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40949:23:56"},"returnParameters":{"id":29599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29598,"mutability":"mutable","name":"output","nameLocation":"41010:6:56","nodeType":"VariableDeclaration","scope":29600,"src":"40996:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29597,"name":"string","nodeType":"ElementaryTypeName","src":"40996:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40995:22:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29608,"nodeType":"FunctionDefinition","src":"41072:88:56","nodes":[],"documentation":{"id":29601,"nodeType":"StructuredDocumentation","src":"41024:43:56","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41081:8:56","parameters":{"id":29604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29603,"mutability":"mutable","name":"value","nameLocation":"41098:5:56","nodeType":"VariableDeclaration","scope":29608,"src":"41090:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29602,"name":"address","nodeType":"ElementaryTypeName","src":"41090:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41089:15:56"},"returnParameters":{"id":29607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29606,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41142:16:56","nodeType":"VariableDeclaration","scope":29608,"src":"41128:30:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29605,"name":"string","nodeType":"ElementaryTypeName","src":"41128:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41127:32:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29616,"nodeType":"FunctionDefinition","src":"41214:95:56","nodes":[],"documentation":{"id":29609,"nodeType":"StructuredDocumentation","src":"41166:43:56","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41223:8:56","parameters":{"id":29612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29611,"mutability":"mutable","name":"value","nameLocation":"41247:5:56","nodeType":"VariableDeclaration","scope":29616,"src":"41232:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":29610,"name":"bytes","nodeType":"ElementaryTypeName","src":"41232:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"41231:22:56"},"returnParameters":{"id":29615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29614,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41291:16:56","nodeType":"VariableDeclaration","scope":29616,"src":"41277:30:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29613,"name":"string","nodeType":"ElementaryTypeName","src":"41277:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41276:32:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29624,"nodeType":"FunctionDefinition","src":"41363:88:56","nodes":[],"documentation":{"id":29617,"nodeType":"StructuredDocumentation","src":"41315:43:56","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41372:8:56","parameters":{"id":29620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29619,"mutability":"mutable","name":"value","nameLocation":"41389:5:56","nodeType":"VariableDeclaration","scope":29624,"src":"41381:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"41381:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"41380:15:56"},"returnParameters":{"id":29623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29622,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41433:16:56","nodeType":"VariableDeclaration","scope":29624,"src":"41419:30:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29621,"name":"string","nodeType":"ElementaryTypeName","src":"41419:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41418:32:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29632,"nodeType":"FunctionDefinition","src":"41505:85:56","nodes":[],"documentation":{"id":29625,"nodeType":"StructuredDocumentation","src":"41457:43:56","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41514:8:56","parameters":{"id":29628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29627,"mutability":"mutable","name":"value","nameLocation":"41528:5:56","nodeType":"VariableDeclaration","scope":29632,"src":"41523:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29626,"name":"bool","nodeType":"ElementaryTypeName","src":"41523:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41522:12:56"},"returnParameters":{"id":29631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29630,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41572:16:56","nodeType":"VariableDeclaration","scope":29632,"src":"41558:30:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29629,"name":"string","nodeType":"ElementaryTypeName","src":"41558:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41557:32:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29640,"nodeType":"FunctionDefinition","src":"41644:88:56","nodes":[],"documentation":{"id":29633,"nodeType":"StructuredDocumentation","src":"41596:43:56","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41653:8:56","parameters":{"id":29636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29635,"mutability":"mutable","name":"value","nameLocation":"41670:5:56","nodeType":"VariableDeclaration","scope":29640,"src":"41662:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29634,"name":"uint256","nodeType":"ElementaryTypeName","src":"41662:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41661:15:56"},"returnParameters":{"id":29639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29638,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41714:16:56","nodeType":"VariableDeclaration","scope":29640,"src":"41700:30:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29637,"name":"string","nodeType":"ElementaryTypeName","src":"41700:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41699:32:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29648,"nodeType":"FunctionDefinition","src":"41786:87:56","nodes":[],"documentation":{"id":29641,"nodeType":"StructuredDocumentation","src":"41738:43:56","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41795:8:56","parameters":{"id":29644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29643,"mutability":"mutable","name":"value","nameLocation":"41811:5:56","nodeType":"VariableDeclaration","scope":29648,"src":"41804:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29642,"name":"int256","nodeType":"ElementaryTypeName","src":"41804:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41803:14:56"},"returnParameters":{"id":29647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29646,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41855:16:56","nodeType":"VariableDeclaration","scope":29648,"src":"41841:30:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29645,"name":"string","nodeType":"ElementaryTypeName","src":"41841:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41840:32:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29656,"nodeType":"FunctionDefinition","src":"41935:89:56","nodes":[],"documentation":{"id":29649,"nodeType":"StructuredDocumentation","src":"41879:51:56","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"41944:11:56","parameters":{"id":29652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29651,"mutability":"mutable","name":"input","nameLocation":"41972:5:56","nodeType":"VariableDeclaration","scope":29656,"src":"41956:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29650,"name":"string","nodeType":"ElementaryTypeName","src":"41956:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41955:23:56"},"returnParameters":{"id":29655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29654,"mutability":"mutable","name":"output","nameLocation":"42016:6:56","nodeType":"VariableDeclaration","scope":29656,"src":"42002:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29653,"name":"string","nodeType":"ElementaryTypeName","src":"42002:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42001:22:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29664,"nodeType":"FunctionDefinition","src":"42107:82:56","nodes":[],"documentation":{"id":29657,"nodeType":"StructuredDocumentation","src":"42030:72:56","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"42116:4:56","parameters":{"id":29660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29659,"mutability":"mutable","name":"input","nameLocation":"42137:5:56","nodeType":"VariableDeclaration","scope":29664,"src":"42121:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29658,"name":"string","nodeType":"ElementaryTypeName","src":"42121:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42120:23:56"},"returnParameters":{"id":29663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29662,"mutability":"mutable","name":"output","nameLocation":"42181:6:56","nodeType":"VariableDeclaration","scope":29664,"src":"42167:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29661,"name":"string","nodeType":"ElementaryTypeName","src":"42167:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42166:22:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29676,"nodeType":"FunctionDefinition","src":"42384:113:56","nodes":[],"documentation":{"id":29665,"nodeType":"StructuredDocumentation","src":"42229:150:56","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42393:24:56","parameters":{"id":29674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29667,"mutability":"mutable","name":"left","nameLocation":"42426:4:56","nodeType":"VariableDeclaration","scope":29676,"src":"42418:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29666,"name":"uint256","nodeType":"ElementaryTypeName","src":"42418:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29669,"mutability":"mutable","name":"right","nameLocation":"42440:5:56","nodeType":"VariableDeclaration","scope":29676,"src":"42432:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29668,"name":"uint256","nodeType":"ElementaryTypeName","src":"42432:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29671,"mutability":"mutable","name":"maxDelta","nameLocation":"42455:8:56","nodeType":"VariableDeclaration","scope":29676,"src":"42447:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29670,"name":"uint256","nodeType":"ElementaryTypeName","src":"42447:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29673,"mutability":"mutable","name":"decimals","nameLocation":"42473:8:56","nodeType":"VariableDeclaration","scope":29676,"src":"42465:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29672,"name":"uint256","nodeType":"ElementaryTypeName","src":"42465:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42417:65:56"},"returnParameters":{"id":29675,"nodeType":"ParameterList","parameters":[],"src":"42496:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29690,"nodeType":"FunctionDefinition","src":"42712:182:56","nodes":[],"documentation":{"id":29677,"nodeType":"StructuredDocumentation","src":"42503:204:56","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42721:24:56","parameters":{"id":29688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29679,"mutability":"mutable","name":"left","nameLocation":"42763:4:56","nodeType":"VariableDeclaration","scope":29690,"src":"42755:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29678,"name":"uint256","nodeType":"ElementaryTypeName","src":"42755:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29681,"mutability":"mutable","name":"right","nameLocation":"42785:5:56","nodeType":"VariableDeclaration","scope":29690,"src":"42777:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29680,"name":"uint256","nodeType":"ElementaryTypeName","src":"42777:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29683,"mutability":"mutable","name":"maxDelta","nameLocation":"42808:8:56","nodeType":"VariableDeclaration","scope":29690,"src":"42800:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29682,"name":"uint256","nodeType":"ElementaryTypeName","src":"42800:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29685,"mutability":"mutable","name":"decimals","nameLocation":"42834:8:56","nodeType":"VariableDeclaration","scope":29690,"src":"42826:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29684,"name":"uint256","nodeType":"ElementaryTypeName","src":"42826:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29687,"mutability":"mutable","name":"error","nameLocation":"42868:5:56","nodeType":"VariableDeclaration","scope":29690,"src":"42852:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29686,"name":"string","nodeType":"ElementaryTypeName","src":"42852:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42745:134:56"},"returnParameters":{"id":29689,"nodeType":"ParameterList","parameters":[],"src":"42893:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29702,"nodeType":"FunctionDefinition","src":"43054:111:56","nodes":[],"documentation":{"id":29691,"nodeType":"StructuredDocumentation","src":"42900:149:56","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"43063:24:56","parameters":{"id":29700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29693,"mutability":"mutable","name":"left","nameLocation":"43095:4:56","nodeType":"VariableDeclaration","scope":29702,"src":"43088:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29692,"name":"int256","nodeType":"ElementaryTypeName","src":"43088:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29695,"mutability":"mutable","name":"right","nameLocation":"43108:5:56","nodeType":"VariableDeclaration","scope":29702,"src":"43101:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29694,"name":"int256","nodeType":"ElementaryTypeName","src":"43101:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29697,"mutability":"mutable","name":"maxDelta","nameLocation":"43123:8:56","nodeType":"VariableDeclaration","scope":29702,"src":"43115:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29696,"name":"uint256","nodeType":"ElementaryTypeName","src":"43115:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29699,"mutability":"mutable","name":"decimals","nameLocation":"43141:8:56","nodeType":"VariableDeclaration","scope":29702,"src":"43133:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29698,"name":"uint256","nodeType":"ElementaryTypeName","src":"43133:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43087:63:56"},"returnParameters":{"id":29701,"nodeType":"ParameterList","parameters":[],"src":"43164:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29716,"nodeType":"FunctionDefinition","src":"43379:180:56","nodes":[],"documentation":{"id":29703,"nodeType":"StructuredDocumentation","src":"43171:203:56","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"43388:24:56","parameters":{"id":29714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29705,"mutability":"mutable","name":"left","nameLocation":"43429:4:56","nodeType":"VariableDeclaration","scope":29716,"src":"43422:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29704,"name":"int256","nodeType":"ElementaryTypeName","src":"43422:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29707,"mutability":"mutable","name":"right","nameLocation":"43450:5:56","nodeType":"VariableDeclaration","scope":29716,"src":"43443:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29706,"name":"int256","nodeType":"ElementaryTypeName","src":"43443:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29709,"mutability":"mutable","name":"maxDelta","nameLocation":"43473:8:56","nodeType":"VariableDeclaration","scope":29716,"src":"43465:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29708,"name":"uint256","nodeType":"ElementaryTypeName","src":"43465:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29711,"mutability":"mutable","name":"decimals","nameLocation":"43499:8:56","nodeType":"VariableDeclaration","scope":29716,"src":"43491:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29710,"name":"uint256","nodeType":"ElementaryTypeName","src":"43491:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29713,"mutability":"mutable","name":"error","nameLocation":"43533:5:56","nodeType":"VariableDeclaration","scope":29716,"src":"43517:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29712,"name":"string","nodeType":"ElementaryTypeName","src":"43517:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43412:132:56"},"returnParameters":{"id":29715,"nodeType":"ParameterList","parameters":[],"src":"43558:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29726,"nodeType":"FunctionDefinition","src":"43663:88:56","nodes":[],"documentation":{"id":29717,"nodeType":"StructuredDocumentation","src":"43565:93:56","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43672:17:56","parameters":{"id":29724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29719,"mutability":"mutable","name":"left","nameLocation":"43698:4:56","nodeType":"VariableDeclaration","scope":29726,"src":"43690:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29718,"name":"uint256","nodeType":"ElementaryTypeName","src":"43690:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29721,"mutability":"mutable","name":"right","nameLocation":"43712:5:56","nodeType":"VariableDeclaration","scope":29726,"src":"43704:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29720,"name":"uint256","nodeType":"ElementaryTypeName","src":"43704:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29723,"mutability":"mutable","name":"maxDelta","nameLocation":"43727:8:56","nodeType":"VariableDeclaration","scope":29726,"src":"43719:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29722,"name":"uint256","nodeType":"ElementaryTypeName","src":"43719:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43689:47:56"},"returnParameters":{"id":29725,"nodeType":"ParameterList","parameters":[],"src":"43750:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29738,"nodeType":"FunctionDefinition","src":"43917:111:56","nodes":[],"documentation":{"id":29727,"nodeType":"StructuredDocumentation","src":"43757:155:56","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43926:17:56","parameters":{"id":29736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29729,"mutability":"mutable","name":"left","nameLocation":"43952:4:56","nodeType":"VariableDeclaration","scope":29738,"src":"43944:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29728,"name":"uint256","nodeType":"ElementaryTypeName","src":"43944:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29731,"mutability":"mutable","name":"right","nameLocation":"43966:5:56","nodeType":"VariableDeclaration","scope":29738,"src":"43958:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29730,"name":"uint256","nodeType":"ElementaryTypeName","src":"43958:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29733,"mutability":"mutable","name":"maxDelta","nameLocation":"43981:8:56","nodeType":"VariableDeclaration","scope":29738,"src":"43973:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29732,"name":"uint256","nodeType":"ElementaryTypeName","src":"43973:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29735,"mutability":"mutable","name":"error","nameLocation":"44007:5:56","nodeType":"VariableDeclaration","scope":29738,"src":"43991:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29734,"name":"string","nodeType":"ElementaryTypeName","src":"43991:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43943:70:56"},"returnParameters":{"id":29737,"nodeType":"ParameterList","parameters":[],"src":"44027:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29748,"nodeType":"FunctionDefinition","src":"44131:86:56","nodes":[],"documentation":{"id":29739,"nodeType":"StructuredDocumentation","src":"44034:92:56","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"44140:17:56","parameters":{"id":29746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29741,"mutability":"mutable","name":"left","nameLocation":"44165:4:56","nodeType":"VariableDeclaration","scope":29748,"src":"44158:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29740,"name":"int256","nodeType":"ElementaryTypeName","src":"44158:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29743,"mutability":"mutable","name":"right","nameLocation":"44178:5:56","nodeType":"VariableDeclaration","scope":29748,"src":"44171:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29742,"name":"int256","nodeType":"ElementaryTypeName","src":"44171:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29745,"mutability":"mutable","name":"maxDelta","nameLocation":"44193:8:56","nodeType":"VariableDeclaration","scope":29748,"src":"44185:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29744,"name":"uint256","nodeType":"ElementaryTypeName","src":"44185:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44157:45:56"},"returnParameters":{"id":29747,"nodeType":"ParameterList","parameters":[],"src":"44216:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29760,"nodeType":"FunctionDefinition","src":"44382:109:56","nodes":[],"documentation":{"id":29749,"nodeType":"StructuredDocumentation","src":"44223:154:56","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"44391:17:56","parameters":{"id":29758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29751,"mutability":"mutable","name":"left","nameLocation":"44416:4:56","nodeType":"VariableDeclaration","scope":29760,"src":"44409:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29750,"name":"int256","nodeType":"ElementaryTypeName","src":"44409:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29753,"mutability":"mutable","name":"right","nameLocation":"44429:5:56","nodeType":"VariableDeclaration","scope":29760,"src":"44422:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29752,"name":"int256","nodeType":"ElementaryTypeName","src":"44422:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29755,"mutability":"mutable","name":"maxDelta","nameLocation":"44444:8:56","nodeType":"VariableDeclaration","scope":29760,"src":"44436:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29754,"name":"uint256","nodeType":"ElementaryTypeName","src":"44436:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29757,"mutability":"mutable","name":"error","nameLocation":"44470:5:56","nodeType":"VariableDeclaration","scope":29760,"src":"44454:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29756,"name":"string","nodeType":"ElementaryTypeName","src":"44454:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44408:68:56"},"returnParameters":{"id":29759,"nodeType":"ParameterList","parameters":[],"src":"44490:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29772,"nodeType":"FunctionDefinition","src":"44762:136:56","nodes":[],"documentation":{"id":29761,"nodeType":"StructuredDocumentation","src":"44497:260:56","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"44771:24:56","parameters":{"id":29770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29763,"mutability":"mutable","name":"left","nameLocation":"44804:4:56","nodeType":"VariableDeclaration","scope":29772,"src":"44796:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29762,"name":"uint256","nodeType":"ElementaryTypeName","src":"44796:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29765,"mutability":"mutable","name":"right","nameLocation":"44818:5:56","nodeType":"VariableDeclaration","scope":29772,"src":"44810:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29764,"name":"uint256","nodeType":"ElementaryTypeName","src":"44810:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29767,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"44833:15:56","nodeType":"VariableDeclaration","scope":29772,"src":"44825:23:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29766,"name":"uint256","nodeType":"ElementaryTypeName","src":"44825:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29769,"mutability":"mutable","name":"decimals","nameLocation":"44858:8:56","nodeType":"VariableDeclaration","scope":29772,"src":"44850:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29768,"name":"uint256","nodeType":"ElementaryTypeName","src":"44850:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44795:72:56"},"returnParameters":{"id":29771,"nodeType":"ParameterList","parameters":[],"src":"44897:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29786,"nodeType":"FunctionDefinition","src":"45223:189:56","nodes":[],"documentation":{"id":29773,"nodeType":"StructuredDocumentation","src":"44904:314:56","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"45232:24:56","parameters":{"id":29784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29775,"mutability":"mutable","name":"left","nameLocation":"45274:4:56","nodeType":"VariableDeclaration","scope":29786,"src":"45266:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29774,"name":"uint256","nodeType":"ElementaryTypeName","src":"45266:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29777,"mutability":"mutable","name":"right","nameLocation":"45296:5:56","nodeType":"VariableDeclaration","scope":29786,"src":"45288:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29776,"name":"uint256","nodeType":"ElementaryTypeName","src":"45288:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29779,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45319:15:56","nodeType":"VariableDeclaration","scope":29786,"src":"45311:23:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29778,"name":"uint256","nodeType":"ElementaryTypeName","src":"45311:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29781,"mutability":"mutable","name":"decimals","nameLocation":"45352:8:56","nodeType":"VariableDeclaration","scope":29786,"src":"45344:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29780,"name":"uint256","nodeType":"ElementaryTypeName","src":"45344:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29783,"mutability":"mutable","name":"error","nameLocation":"45386:5:56","nodeType":"VariableDeclaration","scope":29786,"src":"45370:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29782,"name":"string","nodeType":"ElementaryTypeName","src":"45370:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45256:141:56"},"returnParameters":{"id":29785,"nodeType":"ParameterList","parameters":[],"src":"45411:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29798,"nodeType":"FunctionDefinition","src":"45682:134:56","nodes":[],"documentation":{"id":29787,"nodeType":"StructuredDocumentation","src":"45418:259:56","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"45691:24:56","parameters":{"id":29796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29789,"mutability":"mutable","name":"left","nameLocation":"45723:4:56","nodeType":"VariableDeclaration","scope":29798,"src":"45716:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29788,"name":"int256","nodeType":"ElementaryTypeName","src":"45716:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29791,"mutability":"mutable","name":"right","nameLocation":"45736:5:56","nodeType":"VariableDeclaration","scope":29798,"src":"45729:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29790,"name":"int256","nodeType":"ElementaryTypeName","src":"45729:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29793,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45751:15:56","nodeType":"VariableDeclaration","scope":29798,"src":"45743:23:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29792,"name":"uint256","nodeType":"ElementaryTypeName","src":"45743:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29795,"mutability":"mutable","name":"decimals","nameLocation":"45776:8:56","nodeType":"VariableDeclaration","scope":29798,"src":"45768:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29794,"name":"uint256","nodeType":"ElementaryTypeName","src":"45768:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45715:70:56"},"returnParameters":{"id":29797,"nodeType":"ParameterList","parameters":[],"src":"45815:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29812,"nodeType":"FunctionDefinition","src":"46140:187:56","nodes":[],"documentation":{"id":29799,"nodeType":"StructuredDocumentation","src":"45822:313:56","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"46149:24:56","parameters":{"id":29810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29801,"mutability":"mutable","name":"left","nameLocation":"46190:4:56","nodeType":"VariableDeclaration","scope":29812,"src":"46183:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29800,"name":"int256","nodeType":"ElementaryTypeName","src":"46183:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29803,"mutability":"mutable","name":"right","nameLocation":"46211:5:56","nodeType":"VariableDeclaration","scope":29812,"src":"46204:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29802,"name":"int256","nodeType":"ElementaryTypeName","src":"46204:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29805,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46234:15:56","nodeType":"VariableDeclaration","scope":29812,"src":"46226:23:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29804,"name":"uint256","nodeType":"ElementaryTypeName","src":"46226:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29807,"mutability":"mutable","name":"decimals","nameLocation":"46267:8:56","nodeType":"VariableDeclaration","scope":29812,"src":"46259:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29806,"name":"uint256","nodeType":"ElementaryTypeName","src":"46259:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29809,"mutability":"mutable","name":"error","nameLocation":"46301:5:56","nodeType":"VariableDeclaration","scope":29812,"src":"46285:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29808,"name":"string","nodeType":"ElementaryTypeName","src":"46285:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46173:139:56"},"returnParameters":{"id":29811,"nodeType":"ParameterList","parameters":[],"src":"46326:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29822,"nodeType":"FunctionDefinition","src":"46541:95:56","nodes":[],"documentation":{"id":29813,"nodeType":"StructuredDocumentation","src":"46333:203:56","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"46550:17:56","parameters":{"id":29820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29815,"mutability":"mutable","name":"left","nameLocation":"46576:4:56","nodeType":"VariableDeclaration","scope":29822,"src":"46568:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29814,"name":"uint256","nodeType":"ElementaryTypeName","src":"46568:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29817,"mutability":"mutable","name":"right","nameLocation":"46590:5:56","nodeType":"VariableDeclaration","scope":29822,"src":"46582:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29816,"name":"uint256","nodeType":"ElementaryTypeName","src":"46582:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29819,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46605:15:56","nodeType":"VariableDeclaration","scope":29822,"src":"46597:23:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29818,"name":"uint256","nodeType":"ElementaryTypeName","src":"46597:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46567:54:56"},"returnParameters":{"id":29821,"nodeType":"ParameterList","parameters":[],"src":"46635:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29834,"nodeType":"FunctionDefinition","src":"46912:134:56","nodes":[],"documentation":{"id":29823,"nodeType":"StructuredDocumentation","src":"46642:265:56","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"46921:17:56","parameters":{"id":29832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29825,"mutability":"mutable","name":"left","nameLocation":"46947:4:56","nodeType":"VariableDeclaration","scope":29834,"src":"46939:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29824,"name":"uint256","nodeType":"ElementaryTypeName","src":"46939:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29827,"mutability":"mutable","name":"right","nameLocation":"46961:5:56","nodeType":"VariableDeclaration","scope":29834,"src":"46953:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29826,"name":"uint256","nodeType":"ElementaryTypeName","src":"46953:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29829,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46976:15:56","nodeType":"VariableDeclaration","scope":29834,"src":"46968:23:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29828,"name":"uint256","nodeType":"ElementaryTypeName","src":"46968:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29831,"mutability":"mutable","name":"error","nameLocation":"47009:5:56","nodeType":"VariableDeclaration","scope":29834,"src":"46993:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29830,"name":"string","nodeType":"ElementaryTypeName","src":"46993:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46938:77:56"},"returnParameters":{"id":29833,"nodeType":"ParameterList","parameters":[],"src":"47045:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29844,"nodeType":"FunctionDefinition","src":"47259:93:56","nodes":[],"documentation":{"id":29835,"nodeType":"StructuredDocumentation","src":"47052:202:56","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"47268:17:56","parameters":{"id":29842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29837,"mutability":"mutable","name":"left","nameLocation":"47293:4:56","nodeType":"VariableDeclaration","scope":29844,"src":"47286:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29836,"name":"int256","nodeType":"ElementaryTypeName","src":"47286:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29839,"mutability":"mutable","name":"right","nameLocation":"47306:5:56","nodeType":"VariableDeclaration","scope":29844,"src":"47299:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29838,"name":"int256","nodeType":"ElementaryTypeName","src":"47299:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29841,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47321:15:56","nodeType":"VariableDeclaration","scope":29844,"src":"47313:23:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29840,"name":"uint256","nodeType":"ElementaryTypeName","src":"47313:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47285:52:56"},"returnParameters":{"id":29843,"nodeType":"ParameterList","parameters":[],"src":"47351:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29856,"nodeType":"FunctionDefinition","src":"47627:132:56","nodes":[],"documentation":{"id":29845,"nodeType":"StructuredDocumentation","src":"47358:264:56","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"47636:17:56","parameters":{"id":29854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29847,"mutability":"mutable","name":"left","nameLocation":"47661:4:56","nodeType":"VariableDeclaration","scope":29856,"src":"47654:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29846,"name":"int256","nodeType":"ElementaryTypeName","src":"47654:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29849,"mutability":"mutable","name":"right","nameLocation":"47674:5:56","nodeType":"VariableDeclaration","scope":29856,"src":"47667:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29848,"name":"int256","nodeType":"ElementaryTypeName","src":"47667:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29851,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47689:15:56","nodeType":"VariableDeclaration","scope":29856,"src":"47681:23:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29850,"name":"uint256","nodeType":"ElementaryTypeName","src":"47681:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29853,"mutability":"mutable","name":"error","nameLocation":"47722:5:56","nodeType":"VariableDeclaration","scope":29856,"src":"47706:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29852,"name":"string","nodeType":"ElementaryTypeName","src":"47706:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47653:75:56"},"returnParameters":{"id":29855,"nodeType":"ParameterList","parameters":[],"src":"47758:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29866,"nodeType":"FunctionDefinition","src":"47868:86:56","nodes":[],"documentation":{"id":29857,"nodeType":"StructuredDocumentation","src":"47765:98:56","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"47877:15:56","parameters":{"id":29864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29859,"mutability":"mutable","name":"left","nameLocation":"47901:4:56","nodeType":"VariableDeclaration","scope":29866,"src":"47893:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29858,"name":"uint256","nodeType":"ElementaryTypeName","src":"47893:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29861,"mutability":"mutable","name":"right","nameLocation":"47915:5:56","nodeType":"VariableDeclaration","scope":29866,"src":"47907:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29860,"name":"uint256","nodeType":"ElementaryTypeName","src":"47907:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29863,"mutability":"mutable","name":"decimals","nameLocation":"47930:8:56","nodeType":"VariableDeclaration","scope":29866,"src":"47922:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29862,"name":"uint256","nodeType":"ElementaryTypeName","src":"47922:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47892:47:56"},"returnParameters":{"id":29865,"nodeType":"ParameterList","parameters":[],"src":"47953:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29878,"nodeType":"FunctionDefinition","src":"48125:109:56","nodes":[],"documentation":{"id":29867,"nodeType":"StructuredDocumentation","src":"47960:160:56","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48134:15:56","parameters":{"id":29876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29869,"mutability":"mutable","name":"left","nameLocation":"48158:4:56","nodeType":"VariableDeclaration","scope":29878,"src":"48150:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29868,"name":"uint256","nodeType":"ElementaryTypeName","src":"48150:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29871,"mutability":"mutable","name":"right","nameLocation":"48172:5:56","nodeType":"VariableDeclaration","scope":29878,"src":"48164:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29870,"name":"uint256","nodeType":"ElementaryTypeName","src":"48164:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29873,"mutability":"mutable","name":"decimals","nameLocation":"48187:8:56","nodeType":"VariableDeclaration","scope":29878,"src":"48179:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29872,"name":"uint256","nodeType":"ElementaryTypeName","src":"48179:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29875,"mutability":"mutable","name":"error","nameLocation":"48213:5:56","nodeType":"VariableDeclaration","scope":29878,"src":"48197:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29874,"name":"string","nodeType":"ElementaryTypeName","src":"48197:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48149:70:56"},"returnParameters":{"id":29877,"nodeType":"ParameterList","parameters":[],"src":"48233:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29888,"nodeType":"FunctionDefinition","src":"48342:84:56","nodes":[],"documentation":{"id":29879,"nodeType":"StructuredDocumentation","src":"48240:97:56","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48351:15:56","parameters":{"id":29886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29881,"mutability":"mutable","name":"left","nameLocation":"48374:4:56","nodeType":"VariableDeclaration","scope":29888,"src":"48367:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29880,"name":"int256","nodeType":"ElementaryTypeName","src":"48367:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29883,"mutability":"mutable","name":"right","nameLocation":"48387:5:56","nodeType":"VariableDeclaration","scope":29888,"src":"48380:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29882,"name":"int256","nodeType":"ElementaryTypeName","src":"48380:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29885,"mutability":"mutable","name":"decimals","nameLocation":"48402:8:56","nodeType":"VariableDeclaration","scope":29888,"src":"48394:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29884,"name":"uint256","nodeType":"ElementaryTypeName","src":"48394:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48366:45:56"},"returnParameters":{"id":29887,"nodeType":"ParameterList","parameters":[],"src":"48425:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29900,"nodeType":"FunctionDefinition","src":"48596:107:56","nodes":[],"documentation":{"id":29889,"nodeType":"StructuredDocumentation","src":"48432:159:56","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48605:15:56","parameters":{"id":29898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29891,"mutability":"mutable","name":"left","nameLocation":"48628:4:56","nodeType":"VariableDeclaration","scope":29900,"src":"48621:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29890,"name":"int256","nodeType":"ElementaryTypeName","src":"48621:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29893,"mutability":"mutable","name":"right","nameLocation":"48641:5:56","nodeType":"VariableDeclaration","scope":29900,"src":"48634:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":29892,"name":"int256","nodeType":"ElementaryTypeName","src":"48634:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":29895,"mutability":"mutable","name":"decimals","nameLocation":"48656:8:56","nodeType":"VariableDeclaration","scope":29900,"src":"48648:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29894,"name":"uint256","nodeType":"ElementaryTypeName","src":"48648:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29897,"mutability":"mutable","name":"error","nameLocation":"48682:5:56","nodeType":"VariableDeclaration","scope":29900,"src":"48666:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29896,"name":"string","nodeType":"ElementaryTypeName","src":"48666:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48620:68:56"},"returnParameters":{"id":29899,"nodeType":"ParameterList","parameters":[],"src":"48702:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29908,"nodeType":"FunctionDefinition","src":"48759:55:56","nodes":[],"documentation":{"id":29901,"nodeType":"StructuredDocumentation","src":"48709:45:56","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48768:8:56","parameters":{"id":29906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29903,"mutability":"mutable","name":"left","nameLocation":"48782:4:56","nodeType":"VariableDeclaration","scope":29908,"src":"48777:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29902,"name":"bool","nodeType":"ElementaryTypeName","src":"48777:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":29905,"mutability":"mutable","name":"right","nameLocation":"48793:5:56","nodeType":"VariableDeclaration","scope":29908,"src":"48788:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29904,"name":"bool","nodeType":"ElementaryTypeName","src":"48788:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48776:23:56"},"returnParameters":{"id":29907,"nodeType":"ParameterList","parameters":[],"src":"48813:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29918,"nodeType":"FunctionDefinition","src":"48927:78:56","nodes":[],"documentation":{"id":29909,"nodeType":"StructuredDocumentation","src":"48820:102:56","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48936:8:56","parameters":{"id":29916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29911,"mutability":"mutable","name":"left","nameLocation":"48950:4:56","nodeType":"VariableDeclaration","scope":29918,"src":"48945:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29910,"name":"bool","nodeType":"ElementaryTypeName","src":"48945:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":29913,"mutability":"mutable","name":"right","nameLocation":"48961:5:56","nodeType":"VariableDeclaration","scope":29918,"src":"48956:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29912,"name":"bool","nodeType":"ElementaryTypeName","src":"48956:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":29915,"mutability":"mutable","name":"error","nameLocation":"48984:5:56","nodeType":"VariableDeclaration","scope":29918,"src":"48968:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29914,"name":"string","nodeType":"ElementaryTypeName","src":"48968:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48944:46:56"},"returnParameters":{"id":29917,"nodeType":"ParameterList","parameters":[],"src":"49004:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29926,"nodeType":"FunctionDefinition","src":"49063:77:56","nodes":[],"documentation":{"id":29919,"nodeType":"StructuredDocumentation","src":"49011:47:56","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49072:8:56","parameters":{"id":29924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29921,"mutability":"mutable","name":"left","nameLocation":"49097:4:56","nodeType":"VariableDeclaration","scope":29926,"src":"49081:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29920,"name":"string","nodeType":"ElementaryTypeName","src":"49081:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29923,"mutability":"mutable","name":"right","nameLocation":"49119:5:56","nodeType":"VariableDeclaration","scope":29926,"src":"49103:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29922,"name":"string","nodeType":"ElementaryTypeName","src":"49103:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49080:45:56"},"returnParameters":{"id":29925,"nodeType":"ParameterList","parameters":[],"src":"49139:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29936,"nodeType":"FunctionDefinition","src":"49255:100:56","nodes":[],"documentation":{"id":29927,"nodeType":"StructuredDocumentation","src":"49146:104:56","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49264:8:56","parameters":{"id":29934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29929,"mutability":"mutable","name":"left","nameLocation":"49289:4:56","nodeType":"VariableDeclaration","scope":29936,"src":"49273:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29928,"name":"string","nodeType":"ElementaryTypeName","src":"49273:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29931,"mutability":"mutable","name":"right","nameLocation":"49311:5:56","nodeType":"VariableDeclaration","scope":29936,"src":"49295:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29930,"name":"string","nodeType":"ElementaryTypeName","src":"49295:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":29933,"mutability":"mutable","name":"error","nameLocation":"49334:5:56","nodeType":"VariableDeclaration","scope":29936,"src":"49318:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29932,"name":"string","nodeType":"ElementaryTypeName","src":"49318:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49272:68:56"},"returnParameters":{"id":29935,"nodeType":"ParameterList","parameters":[],"src":"49354:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29944,"nodeType":"FunctionDefinition","src":"49412:75:56","nodes":[],"documentation":{"id":29937,"nodeType":"StructuredDocumentation","src":"49361:46:56","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49421:8:56","parameters":{"id":29942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29939,"mutability":"mutable","name":"left","nameLocation":"49445:4:56","nodeType":"VariableDeclaration","scope":29944,"src":"49430:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":29938,"name":"bytes","nodeType":"ElementaryTypeName","src":"49430:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":29941,"mutability":"mutable","name":"right","nameLocation":"49466:5:56","nodeType":"VariableDeclaration","scope":29944,"src":"49451:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":29940,"name":"bytes","nodeType":"ElementaryTypeName","src":"49451:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49429:43:56"},"returnParameters":{"id":29943,"nodeType":"ParameterList","parameters":[],"src":"49486:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29954,"nodeType":"FunctionDefinition","src":"49601:98:56","nodes":[],"documentation":{"id":29945,"nodeType":"StructuredDocumentation","src":"49493:103:56","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49610:8:56","parameters":{"id":29952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29947,"mutability":"mutable","name":"left","nameLocation":"49634:4:56","nodeType":"VariableDeclaration","scope":29954,"src":"49619:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":29946,"name":"bytes","nodeType":"ElementaryTypeName","src":"49619:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":29949,"mutability":"mutable","name":"right","nameLocation":"49655:5:56","nodeType":"VariableDeclaration","scope":29954,"src":"49640:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":29948,"name":"bytes","nodeType":"ElementaryTypeName","src":"49640:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":29951,"mutability":"mutable","name":"error","nameLocation":"49678:5:56","nodeType":"VariableDeclaration","scope":29954,"src":"49662:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29950,"name":"string","nodeType":"ElementaryTypeName","src":"49662:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49618:66:56"},"returnParameters":{"id":29953,"nodeType":"ParameterList","parameters":[],"src":"49698:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29964,"nodeType":"FunctionDefinition","src":"49765:77:56","nodes":[],"documentation":{"id":29955,"nodeType":"StructuredDocumentation","src":"49705:55:56","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49774:8:56","parameters":{"id":29962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29958,"mutability":"mutable","name":"left","nameLocation":"49799:4:56","nodeType":"VariableDeclaration","scope":29964,"src":"49783:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":29956,"name":"bool","nodeType":"ElementaryTypeName","src":"49783:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":29957,"nodeType":"ArrayTypeName","src":"49783:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":29961,"mutability":"mutable","name":"right","nameLocation":"49821:5:56","nodeType":"VariableDeclaration","scope":29964,"src":"49805:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":29959,"name":"bool","nodeType":"ElementaryTypeName","src":"49805:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":29960,"nodeType":"ArrayTypeName","src":"49805:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"49782:45:56"},"returnParameters":{"id":29963,"nodeType":"ParameterList","parameters":[],"src":"49841:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29976,"nodeType":"FunctionDefinition","src":"49965:100:56","nodes":[],"documentation":{"id":29965,"nodeType":"StructuredDocumentation","src":"49848:112:56","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49974:8:56","parameters":{"id":29974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29968,"mutability":"mutable","name":"left","nameLocation":"49999:4:56","nodeType":"VariableDeclaration","scope":29976,"src":"49983:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":29966,"name":"bool","nodeType":"ElementaryTypeName","src":"49983:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":29967,"nodeType":"ArrayTypeName","src":"49983:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":29971,"mutability":"mutable","name":"right","nameLocation":"50021:5:56","nodeType":"VariableDeclaration","scope":29976,"src":"50005:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":29969,"name":"bool","nodeType":"ElementaryTypeName","src":"50005:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":29970,"nodeType":"ArrayTypeName","src":"50005:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":29973,"mutability":"mutable","name":"error","nameLocation":"50044:5:56","nodeType":"VariableDeclaration","scope":29976,"src":"50028:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29972,"name":"string","nodeType":"ElementaryTypeName","src":"50028:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49982:68:56"},"returnParameters":{"id":29975,"nodeType":"ParameterList","parameters":[],"src":"50064:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29986,"nodeType":"FunctionDefinition","src":"50133:83:56","nodes":[],"documentation":{"id":29977,"nodeType":"StructuredDocumentation","src":"50071:57:56","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50142:8:56","parameters":{"id":29984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29980,"mutability":"mutable","name":"left","nameLocation":"50170:4:56","nodeType":"VariableDeclaration","scope":29986,"src":"50151:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":29978,"name":"uint256","nodeType":"ElementaryTypeName","src":"50151:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":29979,"nodeType":"ArrayTypeName","src":"50151:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":29983,"mutability":"mutable","name":"right","nameLocation":"50195:5:56","nodeType":"VariableDeclaration","scope":29986,"src":"50176:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":29981,"name":"uint256","nodeType":"ElementaryTypeName","src":"50176:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":29982,"nodeType":"ArrayTypeName","src":"50176:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"50150:51:56"},"returnParameters":{"id":29985,"nodeType":"ParameterList","parameters":[],"src":"50215:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":29998,"nodeType":"FunctionDefinition","src":"50342:106:56","nodes":[],"documentation":{"id":29987,"nodeType":"StructuredDocumentation","src":"50222:115:56","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50351:8:56","parameters":{"id":29996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29990,"mutability":"mutable","name":"left","nameLocation":"50379:4:56","nodeType":"VariableDeclaration","scope":29998,"src":"50360:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":29988,"name":"uint256","nodeType":"ElementaryTypeName","src":"50360:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":29989,"nodeType":"ArrayTypeName","src":"50360:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":29993,"mutability":"mutable","name":"right","nameLocation":"50404:5:56","nodeType":"VariableDeclaration","scope":29998,"src":"50385:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":29991,"name":"uint256","nodeType":"ElementaryTypeName","src":"50385:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":29992,"nodeType":"ArrayTypeName","src":"50385:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":29995,"mutability":"mutable","name":"error","nameLocation":"50427:5:56","nodeType":"VariableDeclaration","scope":29998,"src":"50411:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":29994,"name":"string","nodeType":"ElementaryTypeName","src":"50411:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50359:74:56"},"returnParameters":{"id":29997,"nodeType":"ParameterList","parameters":[],"src":"50447:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30008,"nodeType":"FunctionDefinition","src":"50516:81:56","nodes":[],"documentation":{"id":29999,"nodeType":"StructuredDocumentation","src":"50454:57:56","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50525:8:56","parameters":{"id":30006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30002,"mutability":"mutable","name":"left","nameLocation":"50552:4:56","nodeType":"VariableDeclaration","scope":30008,"src":"50534:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":30000,"name":"int256","nodeType":"ElementaryTypeName","src":"50534:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":30001,"nodeType":"ArrayTypeName","src":"50534:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":30005,"mutability":"mutable","name":"right","nameLocation":"50576:5:56","nodeType":"VariableDeclaration","scope":30008,"src":"50558:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":30003,"name":"int256","nodeType":"ElementaryTypeName","src":"50558:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":30004,"nodeType":"ArrayTypeName","src":"50558:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"50533:49:56"},"returnParameters":{"id":30007,"nodeType":"ParameterList","parameters":[],"src":"50596:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30020,"nodeType":"FunctionDefinition","src":"50722:104:56","nodes":[],"documentation":{"id":30009,"nodeType":"StructuredDocumentation","src":"50603:114:56","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50731:8:56","parameters":{"id":30018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30012,"mutability":"mutable","name":"left","nameLocation":"50758:4:56","nodeType":"VariableDeclaration","scope":30020,"src":"50740:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":30010,"name":"int256","nodeType":"ElementaryTypeName","src":"50740:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":30011,"nodeType":"ArrayTypeName","src":"50740:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":30015,"mutability":"mutable","name":"right","nameLocation":"50782:5:56","nodeType":"VariableDeclaration","scope":30020,"src":"50764:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":30013,"name":"int256","nodeType":"ElementaryTypeName","src":"50764:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":30014,"nodeType":"ArrayTypeName","src":"50764:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":30017,"mutability":"mutable","name":"error","nameLocation":"50805:5:56","nodeType":"VariableDeclaration","scope":30020,"src":"50789:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30016,"name":"string","nodeType":"ElementaryTypeName","src":"50789:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50739:72:56"},"returnParameters":{"id":30019,"nodeType":"ParameterList","parameters":[],"src":"50825:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30028,"nodeType":"FunctionDefinition","src":"50885:61:56","nodes":[],"documentation":{"id":30021,"nodeType":"StructuredDocumentation","src":"50832:48:56","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50894:8:56","parameters":{"id":30026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30023,"mutability":"mutable","name":"left","nameLocation":"50911:4:56","nodeType":"VariableDeclaration","scope":30028,"src":"50903:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30022,"name":"uint256","nodeType":"ElementaryTypeName","src":"50903:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30025,"mutability":"mutable","name":"right","nameLocation":"50925:5:56","nodeType":"VariableDeclaration","scope":30028,"src":"50917:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30024,"name":"uint256","nodeType":"ElementaryTypeName","src":"50917:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50902:29:56"},"returnParameters":{"id":30027,"nodeType":"ParameterList","parameters":[],"src":"50945:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30038,"nodeType":"FunctionDefinition","src":"51015:83:56","nodes":[],"documentation":{"id":30029,"nodeType":"StructuredDocumentation","src":"50952:58:56","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51024:8:56","parameters":{"id":30036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30032,"mutability":"mutable","name":"left","nameLocation":"51052:4:56","nodeType":"VariableDeclaration","scope":30038,"src":"51033:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":30030,"name":"address","nodeType":"ElementaryTypeName","src":"51033:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30031,"nodeType":"ArrayTypeName","src":"51033:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":30035,"mutability":"mutable","name":"right","nameLocation":"51077:5:56","nodeType":"VariableDeclaration","scope":30038,"src":"51058:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":30033,"name":"address","nodeType":"ElementaryTypeName","src":"51058:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30034,"nodeType":"ArrayTypeName","src":"51058:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"51032:51:56"},"returnParameters":{"id":30037,"nodeType":"ParameterList","parameters":[],"src":"51097:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30050,"nodeType":"FunctionDefinition","src":"51224:106:56","nodes":[],"documentation":{"id":30039,"nodeType":"StructuredDocumentation","src":"51104:115:56","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51233:8:56","parameters":{"id":30048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30042,"mutability":"mutable","name":"left","nameLocation":"51261:4:56","nodeType":"VariableDeclaration","scope":30050,"src":"51242:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":30040,"name":"address","nodeType":"ElementaryTypeName","src":"51242:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30041,"nodeType":"ArrayTypeName","src":"51242:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":30045,"mutability":"mutable","name":"right","nameLocation":"51286:5:56","nodeType":"VariableDeclaration","scope":30050,"src":"51267:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":30043,"name":"address","nodeType":"ElementaryTypeName","src":"51267:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30044,"nodeType":"ArrayTypeName","src":"51267:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":30047,"mutability":"mutable","name":"error","nameLocation":"51309:5:56","nodeType":"VariableDeclaration","scope":30050,"src":"51293:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30046,"name":"string","nodeType":"ElementaryTypeName","src":"51293:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51241:74:56"},"returnParameters":{"id":30049,"nodeType":"ParameterList","parameters":[],"src":"51329:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30060,"nodeType":"FunctionDefinition","src":"51399:83:56","nodes":[],"documentation":{"id":30051,"nodeType":"StructuredDocumentation","src":"51336:58:56","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51408:8:56","parameters":{"id":30058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30054,"mutability":"mutable","name":"left","nameLocation":"51436:4:56","nodeType":"VariableDeclaration","scope":30060,"src":"51417:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":30052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51417:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":30053,"nodeType":"ArrayTypeName","src":"51417:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":30057,"mutability":"mutable","name":"right","nameLocation":"51461:5:56","nodeType":"VariableDeclaration","scope":30060,"src":"51442:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":30055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51442:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":30056,"nodeType":"ArrayTypeName","src":"51442:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"51416:51:56"},"returnParameters":{"id":30059,"nodeType":"ParameterList","parameters":[],"src":"51481:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30072,"nodeType":"FunctionDefinition","src":"51608:106:56","nodes":[],"documentation":{"id":30061,"nodeType":"StructuredDocumentation","src":"51488:115:56","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51617:8:56","parameters":{"id":30070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30064,"mutability":"mutable","name":"left","nameLocation":"51645:4:56","nodeType":"VariableDeclaration","scope":30072,"src":"51626:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":30062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51626:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":30063,"nodeType":"ArrayTypeName","src":"51626:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":30067,"mutability":"mutable","name":"right","nameLocation":"51670:5:56","nodeType":"VariableDeclaration","scope":30072,"src":"51651:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":30065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51651:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":30066,"nodeType":"ArrayTypeName","src":"51651:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":30069,"mutability":"mutable","name":"error","nameLocation":"51693:5:56","nodeType":"VariableDeclaration","scope":30072,"src":"51677:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30068,"name":"string","nodeType":"ElementaryTypeName","src":"51677:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51625:74:56"},"returnParameters":{"id":30071,"nodeType":"ParameterList","parameters":[],"src":"51713:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30082,"nodeType":"FunctionDefinition","src":"51782:81:56","nodes":[],"documentation":{"id":30073,"nodeType":"StructuredDocumentation","src":"51720:57:56","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51791:8:56","parameters":{"id":30080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30076,"mutability":"mutable","name":"left","nameLocation":"51818:4:56","nodeType":"VariableDeclaration","scope":30082,"src":"51800:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":30074,"name":"string","nodeType":"ElementaryTypeName","src":"51800:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":30075,"nodeType":"ArrayTypeName","src":"51800:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":30079,"mutability":"mutable","name":"right","nameLocation":"51842:5:56","nodeType":"VariableDeclaration","scope":30082,"src":"51824:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":30077,"name":"string","nodeType":"ElementaryTypeName","src":"51824:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":30078,"nodeType":"ArrayTypeName","src":"51824:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"51799:49:56"},"returnParameters":{"id":30081,"nodeType":"ParameterList","parameters":[],"src":"51862:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30094,"nodeType":"FunctionDefinition","src":"51988:104:56","nodes":[],"documentation":{"id":30083,"nodeType":"StructuredDocumentation","src":"51869:114:56","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51997:8:56","parameters":{"id":30092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30086,"mutability":"mutable","name":"left","nameLocation":"52024:4:56","nodeType":"VariableDeclaration","scope":30094,"src":"52006:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":30084,"name":"string","nodeType":"ElementaryTypeName","src":"52006:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":30085,"nodeType":"ArrayTypeName","src":"52006:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":30089,"mutability":"mutable","name":"right","nameLocation":"52048:5:56","nodeType":"VariableDeclaration","scope":30094,"src":"52030:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":30087,"name":"string","nodeType":"ElementaryTypeName","src":"52030:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":30088,"nodeType":"ArrayTypeName","src":"52030:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":30091,"mutability":"mutable","name":"error","nameLocation":"52071:5:56","nodeType":"VariableDeclaration","scope":30094,"src":"52055:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30090,"name":"string","nodeType":"ElementaryTypeName","src":"52055:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52005:72:56"},"returnParameters":{"id":30093,"nodeType":"ParameterList","parameters":[],"src":"52091:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30104,"nodeType":"FunctionDefinition","src":"52159:79:56","nodes":[],"documentation":{"id":30095,"nodeType":"StructuredDocumentation","src":"52098:56:56","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52168:8:56","parameters":{"id":30102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30098,"mutability":"mutable","name":"left","nameLocation":"52194:4:56","nodeType":"VariableDeclaration","scope":30104,"src":"52177:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":30096,"name":"bytes","nodeType":"ElementaryTypeName","src":"52177:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":30097,"nodeType":"ArrayTypeName","src":"52177:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":30101,"mutability":"mutable","name":"right","nameLocation":"52217:5:56","nodeType":"VariableDeclaration","scope":30104,"src":"52200:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":30099,"name":"bytes","nodeType":"ElementaryTypeName","src":"52200:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":30100,"nodeType":"ArrayTypeName","src":"52200:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"52176:47:56"},"returnParameters":{"id":30103,"nodeType":"ParameterList","parameters":[],"src":"52237:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30116,"nodeType":"FunctionDefinition","src":"52362:102:56","nodes":[],"documentation":{"id":30105,"nodeType":"StructuredDocumentation","src":"52244:113:56","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52371:8:56","parameters":{"id":30114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30108,"mutability":"mutable","name":"left","nameLocation":"52397:4:56","nodeType":"VariableDeclaration","scope":30116,"src":"52380:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":30106,"name":"bytes","nodeType":"ElementaryTypeName","src":"52380:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":30107,"nodeType":"ArrayTypeName","src":"52380:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":30111,"mutability":"mutable","name":"right","nameLocation":"52420:5:56","nodeType":"VariableDeclaration","scope":30116,"src":"52403:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":30109,"name":"bytes","nodeType":"ElementaryTypeName","src":"52403:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":30110,"nodeType":"ArrayTypeName","src":"52403:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":30113,"mutability":"mutable","name":"error","nameLocation":"52443:5:56","nodeType":"VariableDeclaration","scope":30116,"src":"52427:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30112,"name":"string","nodeType":"ElementaryTypeName","src":"52427:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52379:70:56"},"returnParameters":{"id":30115,"nodeType":"ParameterList","parameters":[],"src":"52463:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30126,"nodeType":"FunctionDefinition","src":"52580:84:56","nodes":[],"documentation":{"id":30117,"nodeType":"StructuredDocumentation","src":"52470:105:56","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52589:8:56","parameters":{"id":30124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30119,"mutability":"mutable","name":"left","nameLocation":"52606:4:56","nodeType":"VariableDeclaration","scope":30126,"src":"52598:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30118,"name":"uint256","nodeType":"ElementaryTypeName","src":"52598:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30121,"mutability":"mutable","name":"right","nameLocation":"52620:5:56","nodeType":"VariableDeclaration","scope":30126,"src":"52612:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30120,"name":"uint256","nodeType":"ElementaryTypeName","src":"52612:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30123,"mutability":"mutable","name":"error","nameLocation":"52643:5:56","nodeType":"VariableDeclaration","scope":30126,"src":"52627:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30122,"name":"string","nodeType":"ElementaryTypeName","src":"52627:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52597:52:56"},"returnParameters":{"id":30125,"nodeType":"ParameterList","parameters":[],"src":"52663:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30134,"nodeType":"FunctionDefinition","src":"52722:59:56","nodes":[],"documentation":{"id":30127,"nodeType":"StructuredDocumentation","src":"52670:47:56","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52731:8:56","parameters":{"id":30132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30129,"mutability":"mutable","name":"left","nameLocation":"52747:4:56","nodeType":"VariableDeclaration","scope":30134,"src":"52740:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30128,"name":"int256","nodeType":"ElementaryTypeName","src":"52740:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30131,"mutability":"mutable","name":"right","nameLocation":"52760:5:56","nodeType":"VariableDeclaration","scope":30134,"src":"52753:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30130,"name":"int256","nodeType":"ElementaryTypeName","src":"52753:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"52739:27:56"},"returnParameters":{"id":30133,"nodeType":"ParameterList","parameters":[],"src":"52780:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30144,"nodeType":"FunctionDefinition","src":"52896:82:56","nodes":[],"documentation":{"id":30135,"nodeType":"StructuredDocumentation","src":"52787:104:56","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52905:8:56","parameters":{"id":30142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30137,"mutability":"mutable","name":"left","nameLocation":"52921:4:56","nodeType":"VariableDeclaration","scope":30144,"src":"52914:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30136,"name":"int256","nodeType":"ElementaryTypeName","src":"52914:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30139,"mutability":"mutable","name":"right","nameLocation":"52934:5:56","nodeType":"VariableDeclaration","scope":30144,"src":"52927:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30138,"name":"int256","nodeType":"ElementaryTypeName","src":"52927:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30141,"mutability":"mutable","name":"error","nameLocation":"52957:5:56","nodeType":"VariableDeclaration","scope":30144,"src":"52941:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30140,"name":"string","nodeType":"ElementaryTypeName","src":"52941:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52913:50:56"},"returnParameters":{"id":30143,"nodeType":"ParameterList","parameters":[],"src":"52977:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30152,"nodeType":"FunctionDefinition","src":"53037:61:56","nodes":[],"documentation":{"id":30145,"nodeType":"StructuredDocumentation","src":"52984:48:56","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53046:8:56","parameters":{"id":30150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30147,"mutability":"mutable","name":"left","nameLocation":"53063:4:56","nodeType":"VariableDeclaration","scope":30152,"src":"53055:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30146,"name":"address","nodeType":"ElementaryTypeName","src":"53055:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30149,"mutability":"mutable","name":"right","nameLocation":"53077:5:56","nodeType":"VariableDeclaration","scope":30152,"src":"53069:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30148,"name":"address","nodeType":"ElementaryTypeName","src":"53069:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"53054:29:56"},"returnParameters":{"id":30151,"nodeType":"ParameterList","parameters":[],"src":"53097:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30162,"nodeType":"FunctionDefinition","src":"53214:84:56","nodes":[],"documentation":{"id":30153,"nodeType":"StructuredDocumentation","src":"53104:105:56","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53223:8:56","parameters":{"id":30160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30155,"mutability":"mutable","name":"left","nameLocation":"53240:4:56","nodeType":"VariableDeclaration","scope":30162,"src":"53232:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30154,"name":"address","nodeType":"ElementaryTypeName","src":"53232:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30157,"mutability":"mutable","name":"right","nameLocation":"53254:5:56","nodeType":"VariableDeclaration","scope":30162,"src":"53246:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30156,"name":"address","nodeType":"ElementaryTypeName","src":"53246:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30159,"mutability":"mutable","name":"error","nameLocation":"53277:5:56","nodeType":"VariableDeclaration","scope":30162,"src":"53261:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30158,"name":"string","nodeType":"ElementaryTypeName","src":"53261:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53231:52:56"},"returnParameters":{"id":30161,"nodeType":"ParameterList","parameters":[],"src":"53297:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30170,"nodeType":"FunctionDefinition","src":"53357:61:56","nodes":[],"documentation":{"id":30163,"nodeType":"StructuredDocumentation","src":"53304:48:56","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53366:8:56","parameters":{"id":30168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30165,"mutability":"mutable","name":"left","nameLocation":"53383:4:56","nodeType":"VariableDeclaration","scope":30170,"src":"53375:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53375:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":30167,"mutability":"mutable","name":"right","nameLocation":"53397:5:56","nodeType":"VariableDeclaration","scope":30170,"src":"53389:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53389:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"53374:29:56"},"returnParameters":{"id":30169,"nodeType":"ParameterList","parameters":[],"src":"53417:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30180,"nodeType":"FunctionDefinition","src":"53534:84:56","nodes":[],"documentation":{"id":30171,"nodeType":"StructuredDocumentation","src":"53424:105:56","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53543:8:56","parameters":{"id":30178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30173,"mutability":"mutable","name":"left","nameLocation":"53560:4:56","nodeType":"VariableDeclaration","scope":30180,"src":"53552:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53552:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":30175,"mutability":"mutable","name":"right","nameLocation":"53574:5:56","nodeType":"VariableDeclaration","scope":30180,"src":"53566:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53566:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":30177,"mutability":"mutable","name":"error","nameLocation":"53597:5:56","nodeType":"VariableDeclaration","scope":30180,"src":"53581:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30176,"name":"string","nodeType":"ElementaryTypeName","src":"53581:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53551:52:56"},"returnParameters":{"id":30179,"nodeType":"ParameterList","parameters":[],"src":"53617:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30186,"nodeType":"FunctionDefinition","src":"53675:51:56","nodes":[],"documentation":{"id":30181,"nodeType":"StructuredDocumentation","src":"53624:46:56","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"53684:11:56","parameters":{"id":30184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30183,"mutability":"mutable","name":"condition","nameLocation":"53701:9:56","nodeType":"VariableDeclaration","scope":30186,"src":"53696:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30182,"name":"bool","nodeType":"ElementaryTypeName","src":"53696:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"53695:16:56"},"returnParameters":{"id":30185,"nodeType":"ParameterList","parameters":[],"src":"53725:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30194,"nodeType":"FunctionDefinition","src":"53840:74:56","nodes":[],"documentation":{"id":30187,"nodeType":"StructuredDocumentation","src":"53732:103:56","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"53849:11:56","parameters":{"id":30192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30189,"mutability":"mutable","name":"condition","nameLocation":"53866:9:56","nodeType":"VariableDeclaration","scope":30194,"src":"53861:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30188,"name":"bool","nodeType":"ElementaryTypeName","src":"53861:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":30191,"mutability":"mutable","name":"error","nameLocation":"53893:5:56","nodeType":"VariableDeclaration","scope":30194,"src":"53877:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30190,"name":"string","nodeType":"ElementaryTypeName","src":"53877:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53860:39:56"},"returnParameters":{"id":30193,"nodeType":"ParameterList","parameters":[],"src":"53913:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30204,"nodeType":"FunctionDefinition","src":"54075:86:56","nodes":[],"documentation":{"id":30195,"nodeType":"StructuredDocumentation","src":"53920:150:56","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54084:15:56","parameters":{"id":30202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30197,"mutability":"mutable","name":"left","nameLocation":"54108:4:56","nodeType":"VariableDeclaration","scope":30204,"src":"54100:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30196,"name":"uint256","nodeType":"ElementaryTypeName","src":"54100:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30199,"mutability":"mutable","name":"right","nameLocation":"54122:5:56","nodeType":"VariableDeclaration","scope":30204,"src":"54114:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30198,"name":"uint256","nodeType":"ElementaryTypeName","src":"54114:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30201,"mutability":"mutable","name":"decimals","nameLocation":"54137:8:56","nodeType":"VariableDeclaration","scope":30204,"src":"54129:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30200,"name":"uint256","nodeType":"ElementaryTypeName","src":"54129:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54099:47:56"},"returnParameters":{"id":30203,"nodeType":"ParameterList","parameters":[],"src":"54160:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30216,"nodeType":"FunctionDefinition","src":"54376:109:56","nodes":[],"documentation":{"id":30205,"nodeType":"StructuredDocumentation","src":"54167:204:56","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54385:15:56","parameters":{"id":30214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30207,"mutability":"mutable","name":"left","nameLocation":"54409:4:56","nodeType":"VariableDeclaration","scope":30216,"src":"54401:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30206,"name":"uint256","nodeType":"ElementaryTypeName","src":"54401:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30209,"mutability":"mutable","name":"right","nameLocation":"54423:5:56","nodeType":"VariableDeclaration","scope":30216,"src":"54415:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30208,"name":"uint256","nodeType":"ElementaryTypeName","src":"54415:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30211,"mutability":"mutable","name":"decimals","nameLocation":"54438:8:56","nodeType":"VariableDeclaration","scope":30216,"src":"54430:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30210,"name":"uint256","nodeType":"ElementaryTypeName","src":"54430:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30213,"mutability":"mutable","name":"error","nameLocation":"54464:5:56","nodeType":"VariableDeclaration","scope":30216,"src":"54448:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30212,"name":"string","nodeType":"ElementaryTypeName","src":"54448:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54400:70:56"},"returnParameters":{"id":30215,"nodeType":"ParameterList","parameters":[],"src":"54484:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30226,"nodeType":"FunctionDefinition","src":"54645:84:56","nodes":[],"documentation":{"id":30217,"nodeType":"StructuredDocumentation","src":"54491:149:56","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54654:15:56","parameters":{"id":30224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30219,"mutability":"mutable","name":"left","nameLocation":"54677:4:56","nodeType":"VariableDeclaration","scope":30226,"src":"54670:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30218,"name":"int256","nodeType":"ElementaryTypeName","src":"54670:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30221,"mutability":"mutable","name":"right","nameLocation":"54690:5:56","nodeType":"VariableDeclaration","scope":30226,"src":"54683:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30220,"name":"int256","nodeType":"ElementaryTypeName","src":"54683:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30223,"mutability":"mutable","name":"decimals","nameLocation":"54705:8:56","nodeType":"VariableDeclaration","scope":30226,"src":"54697:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30222,"name":"uint256","nodeType":"ElementaryTypeName","src":"54697:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54669:45:56"},"returnParameters":{"id":30225,"nodeType":"ParameterList","parameters":[],"src":"54728:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30238,"nodeType":"FunctionDefinition","src":"54943:107:56","nodes":[],"documentation":{"id":30227,"nodeType":"StructuredDocumentation","src":"54735:203:56","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54952:15:56","parameters":{"id":30236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30229,"mutability":"mutable","name":"left","nameLocation":"54975:4:56","nodeType":"VariableDeclaration","scope":30238,"src":"54968:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30228,"name":"int256","nodeType":"ElementaryTypeName","src":"54968:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30231,"mutability":"mutable","name":"right","nameLocation":"54988:5:56","nodeType":"VariableDeclaration","scope":30238,"src":"54981:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30230,"name":"int256","nodeType":"ElementaryTypeName","src":"54981:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30233,"mutability":"mutable","name":"decimals","nameLocation":"55003:8:56","nodeType":"VariableDeclaration","scope":30238,"src":"54995:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30232,"name":"uint256","nodeType":"ElementaryTypeName","src":"54995:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30235,"mutability":"mutable","name":"error","nameLocation":"55029:5:56","nodeType":"VariableDeclaration","scope":30238,"src":"55013:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30234,"name":"string","nodeType":"ElementaryTypeName","src":"55013:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54967:68:56"},"returnParameters":{"id":30237,"nodeType":"ParameterList","parameters":[],"src":"55049:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30246,"nodeType":"FunctionDefinition","src":"55154:61:56","nodes":[],"documentation":{"id":30239,"nodeType":"StructuredDocumentation","src":"55056:93:56","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55163:8:56","parameters":{"id":30244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30241,"mutability":"mutable","name":"left","nameLocation":"55180:4:56","nodeType":"VariableDeclaration","scope":30246,"src":"55172:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30240,"name":"uint256","nodeType":"ElementaryTypeName","src":"55172:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30243,"mutability":"mutable","name":"right","nameLocation":"55194:5:56","nodeType":"VariableDeclaration","scope":30246,"src":"55186:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30242,"name":"uint256","nodeType":"ElementaryTypeName","src":"55186:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55171:29:56"},"returnParameters":{"id":30245,"nodeType":"ParameterList","parameters":[],"src":"55214:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30256,"nodeType":"FunctionDefinition","src":"55381:84:56","nodes":[],"documentation":{"id":30247,"nodeType":"StructuredDocumentation","src":"55221:155:56","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55390:8:56","parameters":{"id":30254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30249,"mutability":"mutable","name":"left","nameLocation":"55407:4:56","nodeType":"VariableDeclaration","scope":30256,"src":"55399:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30248,"name":"uint256","nodeType":"ElementaryTypeName","src":"55399:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30251,"mutability":"mutable","name":"right","nameLocation":"55421:5:56","nodeType":"VariableDeclaration","scope":30256,"src":"55413:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30250,"name":"uint256","nodeType":"ElementaryTypeName","src":"55413:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30253,"mutability":"mutable","name":"error","nameLocation":"55444:5:56","nodeType":"VariableDeclaration","scope":30256,"src":"55428:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30252,"name":"string","nodeType":"ElementaryTypeName","src":"55428:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55398:52:56"},"returnParameters":{"id":30255,"nodeType":"ParameterList","parameters":[],"src":"55464:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30264,"nodeType":"FunctionDefinition","src":"55568:59:56","nodes":[],"documentation":{"id":30257,"nodeType":"StructuredDocumentation","src":"55471:92:56","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55577:8:56","parameters":{"id":30262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30259,"mutability":"mutable","name":"left","nameLocation":"55593:4:56","nodeType":"VariableDeclaration","scope":30264,"src":"55586:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30258,"name":"int256","nodeType":"ElementaryTypeName","src":"55586:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30261,"mutability":"mutable","name":"right","nameLocation":"55606:5:56","nodeType":"VariableDeclaration","scope":30264,"src":"55599:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30260,"name":"int256","nodeType":"ElementaryTypeName","src":"55599:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55585:27:56"},"returnParameters":{"id":30263,"nodeType":"ParameterList","parameters":[],"src":"55626:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30274,"nodeType":"FunctionDefinition","src":"55792:82:56","nodes":[],"documentation":{"id":30265,"nodeType":"StructuredDocumentation","src":"55633:154:56","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55801:8:56","parameters":{"id":30272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30267,"mutability":"mutable","name":"left","nameLocation":"55817:4:56","nodeType":"VariableDeclaration","scope":30274,"src":"55810:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30266,"name":"int256","nodeType":"ElementaryTypeName","src":"55810:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30269,"mutability":"mutable","name":"right","nameLocation":"55830:5:56","nodeType":"VariableDeclaration","scope":30274,"src":"55823:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30268,"name":"int256","nodeType":"ElementaryTypeName","src":"55823:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30271,"mutability":"mutable","name":"error","nameLocation":"55853:5:56","nodeType":"VariableDeclaration","scope":30274,"src":"55837:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30270,"name":"string","nodeType":"ElementaryTypeName","src":"55837:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55809:50:56"},"returnParameters":{"id":30273,"nodeType":"ParameterList","parameters":[],"src":"55873:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30284,"nodeType":"FunctionDefinition","src":"56023:86:56","nodes":[],"documentation":{"id":30275,"nodeType":"StructuredDocumentation","src":"55880:138:56","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56032:15:56","parameters":{"id":30282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30277,"mutability":"mutable","name":"left","nameLocation":"56056:4:56","nodeType":"VariableDeclaration","scope":30284,"src":"56048:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30276,"name":"uint256","nodeType":"ElementaryTypeName","src":"56048:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30279,"mutability":"mutable","name":"right","nameLocation":"56070:5:56","nodeType":"VariableDeclaration","scope":30284,"src":"56062:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30278,"name":"uint256","nodeType":"ElementaryTypeName","src":"56062:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30281,"mutability":"mutable","name":"decimals","nameLocation":"56085:8:56","nodeType":"VariableDeclaration","scope":30284,"src":"56077:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30280,"name":"uint256","nodeType":"ElementaryTypeName","src":"56077:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56047:47:56"},"returnParameters":{"id":30283,"nodeType":"ParameterList","parameters":[],"src":"56108:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30296,"nodeType":"FunctionDefinition","src":"56312:109:56","nodes":[],"documentation":{"id":30285,"nodeType":"StructuredDocumentation","src":"56115:192:56","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56321:15:56","parameters":{"id":30294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30287,"mutability":"mutable","name":"left","nameLocation":"56345:4:56","nodeType":"VariableDeclaration","scope":30296,"src":"56337:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30286,"name":"uint256","nodeType":"ElementaryTypeName","src":"56337:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30289,"mutability":"mutable","name":"right","nameLocation":"56359:5:56","nodeType":"VariableDeclaration","scope":30296,"src":"56351:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30288,"name":"uint256","nodeType":"ElementaryTypeName","src":"56351:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30291,"mutability":"mutable","name":"decimals","nameLocation":"56374:8:56","nodeType":"VariableDeclaration","scope":30296,"src":"56366:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30290,"name":"uint256","nodeType":"ElementaryTypeName","src":"56366:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30293,"mutability":"mutable","name":"error","nameLocation":"56400:5:56","nodeType":"VariableDeclaration","scope":30296,"src":"56384:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30292,"name":"string","nodeType":"ElementaryTypeName","src":"56384:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56336:70:56"},"returnParameters":{"id":30295,"nodeType":"ParameterList","parameters":[],"src":"56420:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30306,"nodeType":"FunctionDefinition","src":"56569:84:56","nodes":[],"documentation":{"id":30297,"nodeType":"StructuredDocumentation","src":"56427:137:56","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56578:15:56","parameters":{"id":30304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30299,"mutability":"mutable","name":"left","nameLocation":"56601:4:56","nodeType":"VariableDeclaration","scope":30306,"src":"56594:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30298,"name":"int256","nodeType":"ElementaryTypeName","src":"56594:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30301,"mutability":"mutable","name":"right","nameLocation":"56614:5:56","nodeType":"VariableDeclaration","scope":30306,"src":"56607:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30300,"name":"int256","nodeType":"ElementaryTypeName","src":"56607:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30303,"mutability":"mutable","name":"decimals","nameLocation":"56629:8:56","nodeType":"VariableDeclaration","scope":30306,"src":"56621:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30302,"name":"uint256","nodeType":"ElementaryTypeName","src":"56621:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56593:45:56"},"returnParameters":{"id":30305,"nodeType":"ParameterList","parameters":[],"src":"56652:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30318,"nodeType":"FunctionDefinition","src":"56855:107:56","nodes":[],"documentation":{"id":30307,"nodeType":"StructuredDocumentation","src":"56659:191:56","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56864:15:56","parameters":{"id":30316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30309,"mutability":"mutable","name":"left","nameLocation":"56887:4:56","nodeType":"VariableDeclaration","scope":30318,"src":"56880:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30308,"name":"int256","nodeType":"ElementaryTypeName","src":"56880:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30311,"mutability":"mutable","name":"right","nameLocation":"56900:5:56","nodeType":"VariableDeclaration","scope":30318,"src":"56893:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30310,"name":"int256","nodeType":"ElementaryTypeName","src":"56893:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30313,"mutability":"mutable","name":"decimals","nameLocation":"56915:8:56","nodeType":"VariableDeclaration","scope":30318,"src":"56907:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30312,"name":"uint256","nodeType":"ElementaryTypeName","src":"56907:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30315,"mutability":"mutable","name":"error","nameLocation":"56941:5:56","nodeType":"VariableDeclaration","scope":30318,"src":"56925:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30314,"name":"string","nodeType":"ElementaryTypeName","src":"56925:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56879:68:56"},"returnParameters":{"id":30317,"nodeType":"ParameterList","parameters":[],"src":"56961:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30326,"nodeType":"FunctionDefinition","src":"57054:61:56","nodes":[],"documentation":{"id":30319,"nodeType":"StructuredDocumentation","src":"56968:81:56","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57063:8:56","parameters":{"id":30324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30321,"mutability":"mutable","name":"left","nameLocation":"57080:4:56","nodeType":"VariableDeclaration","scope":30326,"src":"57072:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30320,"name":"uint256","nodeType":"ElementaryTypeName","src":"57072:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30323,"mutability":"mutable","name":"right","nameLocation":"57094:5:56","nodeType":"VariableDeclaration","scope":30326,"src":"57086:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30322,"name":"uint256","nodeType":"ElementaryTypeName","src":"57086:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57071:29:56"},"returnParameters":{"id":30325,"nodeType":"ParameterList","parameters":[],"src":"57114:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30336,"nodeType":"FunctionDefinition","src":"57269:84:56","nodes":[],"documentation":{"id":30327,"nodeType":"StructuredDocumentation","src":"57121:143:56","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57278:8:56","parameters":{"id":30334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30329,"mutability":"mutable","name":"left","nameLocation":"57295:4:56","nodeType":"VariableDeclaration","scope":30336,"src":"57287:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30328,"name":"uint256","nodeType":"ElementaryTypeName","src":"57287:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30331,"mutability":"mutable","name":"right","nameLocation":"57309:5:56","nodeType":"VariableDeclaration","scope":30336,"src":"57301:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30330,"name":"uint256","nodeType":"ElementaryTypeName","src":"57301:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30333,"mutability":"mutable","name":"error","nameLocation":"57332:5:56","nodeType":"VariableDeclaration","scope":30336,"src":"57316:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30332,"name":"string","nodeType":"ElementaryTypeName","src":"57316:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57286:52:56"},"returnParameters":{"id":30335,"nodeType":"ParameterList","parameters":[],"src":"57352:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30344,"nodeType":"FunctionDefinition","src":"57444:59:56","nodes":[],"documentation":{"id":30337,"nodeType":"StructuredDocumentation","src":"57359:80:56","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57453:8:56","parameters":{"id":30342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30339,"mutability":"mutable","name":"left","nameLocation":"57469:4:56","nodeType":"VariableDeclaration","scope":30344,"src":"57462:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30338,"name":"int256","nodeType":"ElementaryTypeName","src":"57462:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30341,"mutability":"mutable","name":"right","nameLocation":"57482:5:56","nodeType":"VariableDeclaration","scope":30344,"src":"57475:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30340,"name":"int256","nodeType":"ElementaryTypeName","src":"57475:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57461:27:56"},"returnParameters":{"id":30343,"nodeType":"ParameterList","parameters":[],"src":"57502:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30354,"nodeType":"FunctionDefinition","src":"57656:82:56","nodes":[],"documentation":{"id":30345,"nodeType":"StructuredDocumentation","src":"57509:142:56","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57665:8:56","parameters":{"id":30352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30347,"mutability":"mutable","name":"left","nameLocation":"57681:4:56","nodeType":"VariableDeclaration","scope":30354,"src":"57674:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30346,"name":"int256","nodeType":"ElementaryTypeName","src":"57674:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30349,"mutability":"mutable","name":"right","nameLocation":"57694:5:56","nodeType":"VariableDeclaration","scope":30354,"src":"57687:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30348,"name":"int256","nodeType":"ElementaryTypeName","src":"57687:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30351,"mutability":"mutable","name":"error","nameLocation":"57717:5:56","nodeType":"VariableDeclaration","scope":30354,"src":"57701:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30350,"name":"string","nodeType":"ElementaryTypeName","src":"57701:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57673:50:56"},"returnParameters":{"id":30353,"nodeType":"ParameterList","parameters":[],"src":"57737:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30364,"nodeType":"FunctionDefinition","src":"57896:86:56","nodes":[],"documentation":{"id":30355,"nodeType":"StructuredDocumentation","src":"57744:147:56","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"57905:15:56","parameters":{"id":30362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30357,"mutability":"mutable","name":"left","nameLocation":"57929:4:56","nodeType":"VariableDeclaration","scope":30364,"src":"57921:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30356,"name":"uint256","nodeType":"ElementaryTypeName","src":"57921:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30359,"mutability":"mutable","name":"right","nameLocation":"57943:5:56","nodeType":"VariableDeclaration","scope":30364,"src":"57935:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30358,"name":"uint256","nodeType":"ElementaryTypeName","src":"57935:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30361,"mutability":"mutable","name":"decimals","nameLocation":"57958:8:56","nodeType":"VariableDeclaration","scope":30364,"src":"57950:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30360,"name":"uint256","nodeType":"ElementaryTypeName","src":"57950:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57920:47:56"},"returnParameters":{"id":30363,"nodeType":"ParameterList","parameters":[],"src":"57981:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30376,"nodeType":"FunctionDefinition","src":"58194:109:56","nodes":[],"documentation":{"id":30365,"nodeType":"StructuredDocumentation","src":"57988:201:56","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58203:15:56","parameters":{"id":30374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30367,"mutability":"mutable","name":"left","nameLocation":"58227:4:56","nodeType":"VariableDeclaration","scope":30376,"src":"58219:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30366,"name":"uint256","nodeType":"ElementaryTypeName","src":"58219:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30369,"mutability":"mutable","name":"right","nameLocation":"58241:5:56","nodeType":"VariableDeclaration","scope":30376,"src":"58233:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30368,"name":"uint256","nodeType":"ElementaryTypeName","src":"58233:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30371,"mutability":"mutable","name":"decimals","nameLocation":"58256:8:56","nodeType":"VariableDeclaration","scope":30376,"src":"58248:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30370,"name":"uint256","nodeType":"ElementaryTypeName","src":"58248:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30373,"mutability":"mutable","name":"error","nameLocation":"58282:5:56","nodeType":"VariableDeclaration","scope":30376,"src":"58266:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30372,"name":"string","nodeType":"ElementaryTypeName","src":"58266:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58218:70:56"},"returnParameters":{"id":30375,"nodeType":"ParameterList","parameters":[],"src":"58302:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30386,"nodeType":"FunctionDefinition","src":"58460:84:56","nodes":[],"documentation":{"id":30377,"nodeType":"StructuredDocumentation","src":"58309:146:56","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58469:15:56","parameters":{"id":30384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30379,"mutability":"mutable","name":"left","nameLocation":"58492:4:56","nodeType":"VariableDeclaration","scope":30386,"src":"58485:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30378,"name":"int256","nodeType":"ElementaryTypeName","src":"58485:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30381,"mutability":"mutable","name":"right","nameLocation":"58505:5:56","nodeType":"VariableDeclaration","scope":30386,"src":"58498:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30380,"name":"int256","nodeType":"ElementaryTypeName","src":"58498:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30383,"mutability":"mutable","name":"decimals","nameLocation":"58520:8:56","nodeType":"VariableDeclaration","scope":30386,"src":"58512:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30382,"name":"uint256","nodeType":"ElementaryTypeName","src":"58512:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58484:45:56"},"returnParameters":{"id":30385,"nodeType":"ParameterList","parameters":[],"src":"58543:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30398,"nodeType":"FunctionDefinition","src":"58755:107:56","nodes":[],"documentation":{"id":30387,"nodeType":"StructuredDocumentation","src":"58550:200:56","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58764:15:56","parameters":{"id":30396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30389,"mutability":"mutable","name":"left","nameLocation":"58787:4:56","nodeType":"VariableDeclaration","scope":30398,"src":"58780:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30388,"name":"int256","nodeType":"ElementaryTypeName","src":"58780:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30391,"mutability":"mutable","name":"right","nameLocation":"58800:5:56","nodeType":"VariableDeclaration","scope":30398,"src":"58793:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30390,"name":"int256","nodeType":"ElementaryTypeName","src":"58793:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30393,"mutability":"mutable","name":"decimals","nameLocation":"58815:8:56","nodeType":"VariableDeclaration","scope":30398,"src":"58807:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30392,"name":"uint256","nodeType":"ElementaryTypeName","src":"58807:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30395,"mutability":"mutable","name":"error","nameLocation":"58841:5:56","nodeType":"VariableDeclaration","scope":30398,"src":"58825:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30394,"name":"string","nodeType":"ElementaryTypeName","src":"58825:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58779:68:56"},"returnParameters":{"id":30397,"nodeType":"ParameterList","parameters":[],"src":"58861:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30406,"nodeType":"FunctionDefinition","src":"58963:61:56","nodes":[],"documentation":{"id":30399,"nodeType":"StructuredDocumentation","src":"58868:90:56","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"58972:8:56","parameters":{"id":30404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30401,"mutability":"mutable","name":"left","nameLocation":"58989:4:56","nodeType":"VariableDeclaration","scope":30406,"src":"58981:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30400,"name":"uint256","nodeType":"ElementaryTypeName","src":"58981:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30403,"mutability":"mutable","name":"right","nameLocation":"59003:5:56","nodeType":"VariableDeclaration","scope":30406,"src":"58995:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30402,"name":"uint256","nodeType":"ElementaryTypeName","src":"58995:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58980:29:56"},"returnParameters":{"id":30405,"nodeType":"ParameterList","parameters":[],"src":"59023:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30416,"nodeType":"FunctionDefinition","src":"59187:84:56","nodes":[],"documentation":{"id":30407,"nodeType":"StructuredDocumentation","src":"59030:152:56","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59196:8:56","parameters":{"id":30414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30409,"mutability":"mutable","name":"left","nameLocation":"59213:4:56","nodeType":"VariableDeclaration","scope":30416,"src":"59205:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30408,"name":"uint256","nodeType":"ElementaryTypeName","src":"59205:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30411,"mutability":"mutable","name":"right","nameLocation":"59227:5:56","nodeType":"VariableDeclaration","scope":30416,"src":"59219:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30410,"name":"uint256","nodeType":"ElementaryTypeName","src":"59219:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30413,"mutability":"mutable","name":"error","nameLocation":"59250:5:56","nodeType":"VariableDeclaration","scope":30416,"src":"59234:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30412,"name":"string","nodeType":"ElementaryTypeName","src":"59234:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59204:52:56"},"returnParameters":{"id":30415,"nodeType":"ParameterList","parameters":[],"src":"59270:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30424,"nodeType":"FunctionDefinition","src":"59371:59:56","nodes":[],"documentation":{"id":30417,"nodeType":"StructuredDocumentation","src":"59277:89:56","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59380:8:56","parameters":{"id":30422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30419,"mutability":"mutable","name":"left","nameLocation":"59396:4:56","nodeType":"VariableDeclaration","scope":30424,"src":"59389:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30418,"name":"int256","nodeType":"ElementaryTypeName","src":"59389:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30421,"mutability":"mutable","name":"right","nameLocation":"59409:5:56","nodeType":"VariableDeclaration","scope":30424,"src":"59402:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30420,"name":"int256","nodeType":"ElementaryTypeName","src":"59402:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59388:27:56"},"returnParameters":{"id":30423,"nodeType":"ParameterList","parameters":[],"src":"59429:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30434,"nodeType":"FunctionDefinition","src":"59592:82:56","nodes":[],"documentation":{"id":30425,"nodeType":"StructuredDocumentation","src":"59436:151:56","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59601:8:56","parameters":{"id":30432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30427,"mutability":"mutable","name":"left","nameLocation":"59617:4:56","nodeType":"VariableDeclaration","scope":30434,"src":"59610:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30426,"name":"int256","nodeType":"ElementaryTypeName","src":"59610:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30429,"mutability":"mutable","name":"right","nameLocation":"59630:5:56","nodeType":"VariableDeclaration","scope":30434,"src":"59623:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30428,"name":"int256","nodeType":"ElementaryTypeName","src":"59623:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30431,"mutability":"mutable","name":"error","nameLocation":"59653:5:56","nodeType":"VariableDeclaration","scope":30434,"src":"59637:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30430,"name":"string","nodeType":"ElementaryTypeName","src":"59637:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59609:50:56"},"returnParameters":{"id":30433,"nodeType":"ParameterList","parameters":[],"src":"59673:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30444,"nodeType":"FunctionDefinition","src":"59820:86:56","nodes":[],"documentation":{"id":30435,"nodeType":"StructuredDocumentation","src":"59680:135:56","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"59829:15:56","parameters":{"id":30442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30437,"mutability":"mutable","name":"left","nameLocation":"59853:4:56","nodeType":"VariableDeclaration","scope":30444,"src":"59845:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30436,"name":"uint256","nodeType":"ElementaryTypeName","src":"59845:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30439,"mutability":"mutable","name":"right","nameLocation":"59867:5:56","nodeType":"VariableDeclaration","scope":30444,"src":"59859:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30438,"name":"uint256","nodeType":"ElementaryTypeName","src":"59859:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30441,"mutability":"mutable","name":"decimals","nameLocation":"59882:8:56","nodeType":"VariableDeclaration","scope":30444,"src":"59874:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30440,"name":"uint256","nodeType":"ElementaryTypeName","src":"59874:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59844:47:56"},"returnParameters":{"id":30443,"nodeType":"ParameterList","parameters":[],"src":"59905:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30456,"nodeType":"FunctionDefinition","src":"60106:109:56","nodes":[],"documentation":{"id":30445,"nodeType":"StructuredDocumentation","src":"59912:189:56","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60115:15:56","parameters":{"id":30454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30447,"mutability":"mutable","name":"left","nameLocation":"60139:4:56","nodeType":"VariableDeclaration","scope":30456,"src":"60131:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30446,"name":"uint256","nodeType":"ElementaryTypeName","src":"60131:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30449,"mutability":"mutable","name":"right","nameLocation":"60153:5:56","nodeType":"VariableDeclaration","scope":30456,"src":"60145:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30448,"name":"uint256","nodeType":"ElementaryTypeName","src":"60145:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30451,"mutability":"mutable","name":"decimals","nameLocation":"60168:8:56","nodeType":"VariableDeclaration","scope":30456,"src":"60160:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30450,"name":"uint256","nodeType":"ElementaryTypeName","src":"60160:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30453,"mutability":"mutable","name":"error","nameLocation":"60194:5:56","nodeType":"VariableDeclaration","scope":30456,"src":"60178:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30452,"name":"string","nodeType":"ElementaryTypeName","src":"60178:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60130:70:56"},"returnParameters":{"id":30455,"nodeType":"ParameterList","parameters":[],"src":"60214:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30466,"nodeType":"FunctionDefinition","src":"60360:84:56","nodes":[],"documentation":{"id":30457,"nodeType":"StructuredDocumentation","src":"60221:134:56","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60369:15:56","parameters":{"id":30464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30459,"mutability":"mutable","name":"left","nameLocation":"60392:4:56","nodeType":"VariableDeclaration","scope":30466,"src":"60385:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30458,"name":"int256","nodeType":"ElementaryTypeName","src":"60385:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30461,"mutability":"mutable","name":"right","nameLocation":"60405:5:56","nodeType":"VariableDeclaration","scope":30466,"src":"60398:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30460,"name":"int256","nodeType":"ElementaryTypeName","src":"60398:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30463,"mutability":"mutable","name":"decimals","nameLocation":"60420:8:56","nodeType":"VariableDeclaration","scope":30466,"src":"60412:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30462,"name":"uint256","nodeType":"ElementaryTypeName","src":"60412:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60384:45:56"},"returnParameters":{"id":30465,"nodeType":"ParameterList","parameters":[],"src":"60443:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30478,"nodeType":"FunctionDefinition","src":"60643:107:56","nodes":[],"documentation":{"id":30467,"nodeType":"StructuredDocumentation","src":"60450:188:56","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60652:15:56","parameters":{"id":30476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30469,"mutability":"mutable","name":"left","nameLocation":"60675:4:56","nodeType":"VariableDeclaration","scope":30478,"src":"60668:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30468,"name":"int256","nodeType":"ElementaryTypeName","src":"60668:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30471,"mutability":"mutable","name":"right","nameLocation":"60688:5:56","nodeType":"VariableDeclaration","scope":30478,"src":"60681:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30470,"name":"int256","nodeType":"ElementaryTypeName","src":"60681:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30473,"mutability":"mutable","name":"decimals","nameLocation":"60703:8:56","nodeType":"VariableDeclaration","scope":30478,"src":"60695:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30472,"name":"uint256","nodeType":"ElementaryTypeName","src":"60695:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30475,"mutability":"mutable","name":"error","nameLocation":"60729:5:56","nodeType":"VariableDeclaration","scope":30478,"src":"60713:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30474,"name":"string","nodeType":"ElementaryTypeName","src":"60713:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60667:68:56"},"returnParameters":{"id":30477,"nodeType":"ParameterList","parameters":[],"src":"60749:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30486,"nodeType":"FunctionDefinition","src":"60839:61:56","nodes":[],"documentation":{"id":30479,"nodeType":"StructuredDocumentation","src":"60756:78:56","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60848:8:56","parameters":{"id":30484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30481,"mutability":"mutable","name":"left","nameLocation":"60865:4:56","nodeType":"VariableDeclaration","scope":30486,"src":"60857:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30480,"name":"uint256","nodeType":"ElementaryTypeName","src":"60857:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30483,"mutability":"mutable","name":"right","nameLocation":"60879:5:56","nodeType":"VariableDeclaration","scope":30486,"src":"60871:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30482,"name":"uint256","nodeType":"ElementaryTypeName","src":"60871:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60856:29:56"},"returnParameters":{"id":30485,"nodeType":"ParameterList","parameters":[],"src":"60899:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30496,"nodeType":"FunctionDefinition","src":"61051:84:56","nodes":[],"documentation":{"id":30487,"nodeType":"StructuredDocumentation","src":"60906:140:56","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"61060:8:56","parameters":{"id":30494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30489,"mutability":"mutable","name":"left","nameLocation":"61077:4:56","nodeType":"VariableDeclaration","scope":30496,"src":"61069:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30488,"name":"uint256","nodeType":"ElementaryTypeName","src":"61069:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30491,"mutability":"mutable","name":"right","nameLocation":"61091:5:56","nodeType":"VariableDeclaration","scope":30496,"src":"61083:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30490,"name":"uint256","nodeType":"ElementaryTypeName","src":"61083:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30493,"mutability":"mutable","name":"error","nameLocation":"61114:5:56","nodeType":"VariableDeclaration","scope":30496,"src":"61098:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30492,"name":"string","nodeType":"ElementaryTypeName","src":"61098:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61068:52:56"},"returnParameters":{"id":30495,"nodeType":"ParameterList","parameters":[],"src":"61134:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30504,"nodeType":"FunctionDefinition","src":"61223:59:56","nodes":[],"documentation":{"id":30497,"nodeType":"StructuredDocumentation","src":"61141:77:56","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"61232:8:56","parameters":{"id":30502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30499,"mutability":"mutable","name":"left","nameLocation":"61248:4:56","nodeType":"VariableDeclaration","scope":30504,"src":"61241:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30498,"name":"int256","nodeType":"ElementaryTypeName","src":"61241:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30501,"mutability":"mutable","name":"right","nameLocation":"61261:5:56","nodeType":"VariableDeclaration","scope":30504,"src":"61254:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30500,"name":"int256","nodeType":"ElementaryTypeName","src":"61254:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"61240:27:56"},"returnParameters":{"id":30503,"nodeType":"ParameterList","parameters":[],"src":"61281:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30514,"nodeType":"FunctionDefinition","src":"61432:82:56","nodes":[],"documentation":{"id":30505,"nodeType":"StructuredDocumentation","src":"61288:139:56","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"61441:8:56","parameters":{"id":30512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30507,"mutability":"mutable","name":"left","nameLocation":"61457:4:56","nodeType":"VariableDeclaration","scope":30514,"src":"61450:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30506,"name":"int256","nodeType":"ElementaryTypeName","src":"61450:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30509,"mutability":"mutable","name":"right","nameLocation":"61470:5:56","nodeType":"VariableDeclaration","scope":30514,"src":"61463:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30508,"name":"int256","nodeType":"ElementaryTypeName","src":"61463:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30511,"mutability":"mutable","name":"error","nameLocation":"61493:5:56","nodeType":"VariableDeclaration","scope":30514,"src":"61477:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30510,"name":"string","nodeType":"ElementaryTypeName","src":"61477:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61449:50:56"},"returnParameters":{"id":30513,"nodeType":"ParameterList","parameters":[],"src":"61513:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30524,"nodeType":"FunctionDefinition","src":"61627:89:56","nodes":[],"documentation":{"id":30515,"nodeType":"StructuredDocumentation","src":"61520:102:56","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61636:18:56","parameters":{"id":30522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30517,"mutability":"mutable","name":"left","nameLocation":"61663:4:56","nodeType":"VariableDeclaration","scope":30524,"src":"61655:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30516,"name":"uint256","nodeType":"ElementaryTypeName","src":"61655:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30519,"mutability":"mutable","name":"right","nameLocation":"61677:5:56","nodeType":"VariableDeclaration","scope":30524,"src":"61669:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30518,"name":"uint256","nodeType":"ElementaryTypeName","src":"61669:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30521,"mutability":"mutable","name":"decimals","nameLocation":"61692:8:56","nodeType":"VariableDeclaration","scope":30524,"src":"61684:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30520,"name":"uint256","nodeType":"ElementaryTypeName","src":"61684:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61654:47:56"},"returnParameters":{"id":30523,"nodeType":"ParameterList","parameters":[],"src":"61715:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30536,"nodeType":"FunctionDefinition","src":"61891:112:56","nodes":[],"documentation":{"id":30525,"nodeType":"StructuredDocumentation","src":"61722:164:56","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61900:18:56","parameters":{"id":30534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30527,"mutability":"mutable","name":"left","nameLocation":"61927:4:56","nodeType":"VariableDeclaration","scope":30536,"src":"61919:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30526,"name":"uint256","nodeType":"ElementaryTypeName","src":"61919:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30529,"mutability":"mutable","name":"right","nameLocation":"61941:5:56","nodeType":"VariableDeclaration","scope":30536,"src":"61933:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30528,"name":"uint256","nodeType":"ElementaryTypeName","src":"61933:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30531,"mutability":"mutable","name":"decimals","nameLocation":"61956:8:56","nodeType":"VariableDeclaration","scope":30536,"src":"61948:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30530,"name":"uint256","nodeType":"ElementaryTypeName","src":"61948:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30533,"mutability":"mutable","name":"error","nameLocation":"61982:5:56","nodeType":"VariableDeclaration","scope":30536,"src":"61966:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30532,"name":"string","nodeType":"ElementaryTypeName","src":"61966:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61918:70:56"},"returnParameters":{"id":30535,"nodeType":"ParameterList","parameters":[],"src":"62002:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30546,"nodeType":"FunctionDefinition","src":"62115:87:56","nodes":[],"documentation":{"id":30537,"nodeType":"StructuredDocumentation","src":"62009:101:56","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"62124:18:56","parameters":{"id":30544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30539,"mutability":"mutable","name":"left","nameLocation":"62150:4:56","nodeType":"VariableDeclaration","scope":30546,"src":"62143:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30538,"name":"int256","nodeType":"ElementaryTypeName","src":"62143:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30541,"mutability":"mutable","name":"right","nameLocation":"62163:5:56","nodeType":"VariableDeclaration","scope":30546,"src":"62156:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30540,"name":"int256","nodeType":"ElementaryTypeName","src":"62156:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30543,"mutability":"mutable","name":"decimals","nameLocation":"62178:8:56","nodeType":"VariableDeclaration","scope":30546,"src":"62170:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30542,"name":"uint256","nodeType":"ElementaryTypeName","src":"62170:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62142:45:56"},"returnParameters":{"id":30545,"nodeType":"ParameterList","parameters":[],"src":"62201:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30558,"nodeType":"FunctionDefinition","src":"62376:110:56","nodes":[],"documentation":{"id":30547,"nodeType":"StructuredDocumentation","src":"62208:163:56","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"62385:18:56","parameters":{"id":30556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30549,"mutability":"mutable","name":"left","nameLocation":"62411:4:56","nodeType":"VariableDeclaration","scope":30558,"src":"62404:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30548,"name":"int256","nodeType":"ElementaryTypeName","src":"62404:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30551,"mutability":"mutable","name":"right","nameLocation":"62424:5:56","nodeType":"VariableDeclaration","scope":30558,"src":"62417:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30550,"name":"int256","nodeType":"ElementaryTypeName","src":"62417:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30553,"mutability":"mutable","name":"decimals","nameLocation":"62439:8:56","nodeType":"VariableDeclaration","scope":30558,"src":"62431:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30552,"name":"uint256","nodeType":"ElementaryTypeName","src":"62431:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30555,"mutability":"mutable","name":"error","nameLocation":"62465:5:56","nodeType":"VariableDeclaration","scope":30558,"src":"62449:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30554,"name":"string","nodeType":"ElementaryTypeName","src":"62449:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62403:68:56"},"returnParameters":{"id":30557,"nodeType":"ParameterList","parameters":[],"src":"62485:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30566,"nodeType":"FunctionDefinition","src":"62546:58:56","nodes":[],"documentation":{"id":30559,"nodeType":"StructuredDocumentation","src":"62492:49:56","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62555:11:56","parameters":{"id":30564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30561,"mutability":"mutable","name":"left","nameLocation":"62572:4:56","nodeType":"VariableDeclaration","scope":30566,"src":"62567:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30560,"name":"bool","nodeType":"ElementaryTypeName","src":"62567:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":30563,"mutability":"mutable","name":"right","nameLocation":"62583:5:56","nodeType":"VariableDeclaration","scope":30566,"src":"62578:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30562,"name":"bool","nodeType":"ElementaryTypeName","src":"62578:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62566:23:56"},"returnParameters":{"id":30565,"nodeType":"ParameterList","parameters":[],"src":"62603:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30576,"nodeType":"FunctionDefinition","src":"62721:81:56","nodes":[],"documentation":{"id":30567,"nodeType":"StructuredDocumentation","src":"62610:106:56","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62730:11:56","parameters":{"id":30574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30569,"mutability":"mutable","name":"left","nameLocation":"62747:4:56","nodeType":"VariableDeclaration","scope":30576,"src":"62742:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30568,"name":"bool","nodeType":"ElementaryTypeName","src":"62742:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":30571,"mutability":"mutable","name":"right","nameLocation":"62758:5:56","nodeType":"VariableDeclaration","scope":30576,"src":"62753:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30570,"name":"bool","nodeType":"ElementaryTypeName","src":"62753:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":30573,"mutability":"mutable","name":"error","nameLocation":"62781:5:56","nodeType":"VariableDeclaration","scope":30576,"src":"62765:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30572,"name":"string","nodeType":"ElementaryTypeName","src":"62765:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62741:46:56"},"returnParameters":{"id":30575,"nodeType":"ParameterList","parameters":[],"src":"62801:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30584,"nodeType":"FunctionDefinition","src":"62864:80:56","nodes":[],"documentation":{"id":30577,"nodeType":"StructuredDocumentation","src":"62808:51:56","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62873:11:56","parameters":{"id":30582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30579,"mutability":"mutable","name":"left","nameLocation":"62901:4:56","nodeType":"VariableDeclaration","scope":30584,"src":"62885:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30578,"name":"string","nodeType":"ElementaryTypeName","src":"62885:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30581,"mutability":"mutable","name":"right","nameLocation":"62923:5:56","nodeType":"VariableDeclaration","scope":30584,"src":"62907:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30580,"name":"string","nodeType":"ElementaryTypeName","src":"62907:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62884:45:56"},"returnParameters":{"id":30583,"nodeType":"ParameterList","parameters":[],"src":"62943:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30594,"nodeType":"FunctionDefinition","src":"63063:103:56","nodes":[],"documentation":{"id":30585,"nodeType":"StructuredDocumentation","src":"62950:108:56","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63072:11:56","parameters":{"id":30592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30587,"mutability":"mutable","name":"left","nameLocation":"63100:4:56","nodeType":"VariableDeclaration","scope":30594,"src":"63084:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30586,"name":"string","nodeType":"ElementaryTypeName","src":"63084:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30589,"mutability":"mutable","name":"right","nameLocation":"63122:5:56","nodeType":"VariableDeclaration","scope":30594,"src":"63106:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30588,"name":"string","nodeType":"ElementaryTypeName","src":"63106:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30591,"mutability":"mutable","name":"error","nameLocation":"63145:5:56","nodeType":"VariableDeclaration","scope":30594,"src":"63129:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30590,"name":"string","nodeType":"ElementaryTypeName","src":"63129:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63083:68:56"},"returnParameters":{"id":30593,"nodeType":"ParameterList","parameters":[],"src":"63165:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30602,"nodeType":"FunctionDefinition","src":"63227:78:56","nodes":[],"documentation":{"id":30595,"nodeType":"StructuredDocumentation","src":"63172:50:56","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63236:11:56","parameters":{"id":30600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30597,"mutability":"mutable","name":"left","nameLocation":"63263:4:56","nodeType":"VariableDeclaration","scope":30602,"src":"63248:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":30596,"name":"bytes","nodeType":"ElementaryTypeName","src":"63248:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":30599,"mutability":"mutable","name":"right","nameLocation":"63284:5:56","nodeType":"VariableDeclaration","scope":30602,"src":"63269:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":30598,"name":"bytes","nodeType":"ElementaryTypeName","src":"63269:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"63247:43:56"},"returnParameters":{"id":30601,"nodeType":"ParameterList","parameters":[],"src":"63304:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30612,"nodeType":"FunctionDefinition","src":"63423:101:56","nodes":[],"documentation":{"id":30603,"nodeType":"StructuredDocumentation","src":"63311:107:56","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63432:11:56","parameters":{"id":30610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30605,"mutability":"mutable","name":"left","nameLocation":"63459:4:56","nodeType":"VariableDeclaration","scope":30612,"src":"63444:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":30604,"name":"bytes","nodeType":"ElementaryTypeName","src":"63444:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":30607,"mutability":"mutable","name":"right","nameLocation":"63480:5:56","nodeType":"VariableDeclaration","scope":30612,"src":"63465:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":30606,"name":"bytes","nodeType":"ElementaryTypeName","src":"63465:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":30609,"mutability":"mutable","name":"error","nameLocation":"63503:5:56","nodeType":"VariableDeclaration","scope":30612,"src":"63487:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30608,"name":"string","nodeType":"ElementaryTypeName","src":"63487:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63443:66:56"},"returnParameters":{"id":30611,"nodeType":"ParameterList","parameters":[],"src":"63523:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30622,"nodeType":"FunctionDefinition","src":"63594:80:56","nodes":[],"documentation":{"id":30613,"nodeType":"StructuredDocumentation","src":"63530:59:56","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63603:11:56","parameters":{"id":30620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30616,"mutability":"mutable","name":"left","nameLocation":"63631:4:56","nodeType":"VariableDeclaration","scope":30622,"src":"63615:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":30614,"name":"bool","nodeType":"ElementaryTypeName","src":"63615:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":30615,"nodeType":"ArrayTypeName","src":"63615:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":30619,"mutability":"mutable","name":"right","nameLocation":"63653:5:56","nodeType":"VariableDeclaration","scope":30622,"src":"63637:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":30617,"name":"bool","nodeType":"ElementaryTypeName","src":"63637:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":30618,"nodeType":"ArrayTypeName","src":"63637:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"63614:45:56"},"returnParameters":{"id":30621,"nodeType":"ParameterList","parameters":[],"src":"63673:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30634,"nodeType":"FunctionDefinition","src":"63801:103:56","nodes":[],"documentation":{"id":30623,"nodeType":"StructuredDocumentation","src":"63680:116:56","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63810:11:56","parameters":{"id":30632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30626,"mutability":"mutable","name":"left","nameLocation":"63838:4:56","nodeType":"VariableDeclaration","scope":30634,"src":"63822:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":30624,"name":"bool","nodeType":"ElementaryTypeName","src":"63822:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":30625,"nodeType":"ArrayTypeName","src":"63822:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":30629,"mutability":"mutable","name":"right","nameLocation":"63860:5:56","nodeType":"VariableDeclaration","scope":30634,"src":"63844:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":30627,"name":"bool","nodeType":"ElementaryTypeName","src":"63844:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":30628,"nodeType":"ArrayTypeName","src":"63844:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":30631,"mutability":"mutable","name":"error","nameLocation":"63883:5:56","nodeType":"VariableDeclaration","scope":30634,"src":"63867:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30630,"name":"string","nodeType":"ElementaryTypeName","src":"63867:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63821:68:56"},"returnParameters":{"id":30633,"nodeType":"ParameterList","parameters":[],"src":"63903:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30644,"nodeType":"FunctionDefinition","src":"63977:86:56","nodes":[],"documentation":{"id":30635,"nodeType":"StructuredDocumentation","src":"63910:62:56","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63986:11:56","parameters":{"id":30642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30638,"mutability":"mutable","name":"left","nameLocation":"64017:4:56","nodeType":"VariableDeclaration","scope":30644,"src":"63998:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":30636,"name":"uint256","nodeType":"ElementaryTypeName","src":"63998:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":30637,"nodeType":"ArrayTypeName","src":"63998:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":30641,"mutability":"mutable","name":"right","nameLocation":"64042:5:56","nodeType":"VariableDeclaration","scope":30644,"src":"64023:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":30639,"name":"uint256","nodeType":"ElementaryTypeName","src":"64023:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":30640,"nodeType":"ArrayTypeName","src":"64023:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"63997:51:56"},"returnParameters":{"id":30643,"nodeType":"ParameterList","parameters":[],"src":"64062:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30656,"nodeType":"FunctionDefinition","src":"64193:109:56","nodes":[],"documentation":{"id":30645,"nodeType":"StructuredDocumentation","src":"64069:119:56","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64202:11:56","parameters":{"id":30654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30648,"mutability":"mutable","name":"left","nameLocation":"64233:4:56","nodeType":"VariableDeclaration","scope":30656,"src":"64214:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":30646,"name":"uint256","nodeType":"ElementaryTypeName","src":"64214:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":30647,"nodeType":"ArrayTypeName","src":"64214:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":30651,"mutability":"mutable","name":"right","nameLocation":"64258:5:56","nodeType":"VariableDeclaration","scope":30656,"src":"64239:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":30649,"name":"uint256","nodeType":"ElementaryTypeName","src":"64239:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":30650,"nodeType":"ArrayTypeName","src":"64239:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":30653,"mutability":"mutable","name":"error","nameLocation":"64281:5:56","nodeType":"VariableDeclaration","scope":30656,"src":"64265:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30652,"name":"string","nodeType":"ElementaryTypeName","src":"64265:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64213:74:56"},"returnParameters":{"id":30655,"nodeType":"ParameterList","parameters":[],"src":"64301:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30666,"nodeType":"FunctionDefinition","src":"64374:84:56","nodes":[],"documentation":{"id":30657,"nodeType":"StructuredDocumentation","src":"64308:61:56","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64383:11:56","parameters":{"id":30664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30660,"mutability":"mutable","name":"left","nameLocation":"64413:4:56","nodeType":"VariableDeclaration","scope":30666,"src":"64395:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":30658,"name":"int256","nodeType":"ElementaryTypeName","src":"64395:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":30659,"nodeType":"ArrayTypeName","src":"64395:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":30663,"mutability":"mutable","name":"right","nameLocation":"64437:5:56","nodeType":"VariableDeclaration","scope":30666,"src":"64419:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":30661,"name":"int256","nodeType":"ElementaryTypeName","src":"64419:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":30662,"nodeType":"ArrayTypeName","src":"64419:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"64394:49:56"},"returnParameters":{"id":30665,"nodeType":"ParameterList","parameters":[],"src":"64457:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30678,"nodeType":"FunctionDefinition","src":"64587:107:56","nodes":[],"documentation":{"id":30667,"nodeType":"StructuredDocumentation","src":"64464:118:56","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64596:11:56","parameters":{"id":30676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30670,"mutability":"mutable","name":"left","nameLocation":"64626:4:56","nodeType":"VariableDeclaration","scope":30678,"src":"64608:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":30668,"name":"int256","nodeType":"ElementaryTypeName","src":"64608:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":30669,"nodeType":"ArrayTypeName","src":"64608:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":30673,"mutability":"mutable","name":"right","nameLocation":"64650:5:56","nodeType":"VariableDeclaration","scope":30678,"src":"64632:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":30671,"name":"int256","nodeType":"ElementaryTypeName","src":"64632:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":30672,"nodeType":"ArrayTypeName","src":"64632:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":30675,"mutability":"mutable","name":"error","nameLocation":"64673:5:56","nodeType":"VariableDeclaration","scope":30678,"src":"64657:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30674,"name":"string","nodeType":"ElementaryTypeName","src":"64657:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64607:72:56"},"returnParameters":{"id":30677,"nodeType":"ParameterList","parameters":[],"src":"64693:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30686,"nodeType":"FunctionDefinition","src":"64757:64:56","nodes":[],"documentation":{"id":30679,"nodeType":"StructuredDocumentation","src":"64700:52:56","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64766:11:56","parameters":{"id":30684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30681,"mutability":"mutable","name":"left","nameLocation":"64786:4:56","nodeType":"VariableDeclaration","scope":30686,"src":"64778:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30680,"name":"uint256","nodeType":"ElementaryTypeName","src":"64778:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30683,"mutability":"mutable","name":"right","nameLocation":"64800:5:56","nodeType":"VariableDeclaration","scope":30686,"src":"64792:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30682,"name":"uint256","nodeType":"ElementaryTypeName","src":"64792:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64777:29:56"},"returnParameters":{"id":30685,"nodeType":"ParameterList","parameters":[],"src":"64820:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30696,"nodeType":"FunctionDefinition","src":"64894:86:56","nodes":[],"documentation":{"id":30687,"nodeType":"StructuredDocumentation","src":"64827:62:56","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64903:11:56","parameters":{"id":30694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30690,"mutability":"mutable","name":"left","nameLocation":"64934:4:56","nodeType":"VariableDeclaration","scope":30696,"src":"64915:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":30688,"name":"address","nodeType":"ElementaryTypeName","src":"64915:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30689,"nodeType":"ArrayTypeName","src":"64915:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":30693,"mutability":"mutable","name":"right","nameLocation":"64959:5:56","nodeType":"VariableDeclaration","scope":30696,"src":"64940:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":30691,"name":"address","nodeType":"ElementaryTypeName","src":"64940:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30692,"nodeType":"ArrayTypeName","src":"64940:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"64914:51:56"},"returnParameters":{"id":30695,"nodeType":"ParameterList","parameters":[],"src":"64979:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30708,"nodeType":"FunctionDefinition","src":"65110:109:56","nodes":[],"documentation":{"id":30697,"nodeType":"StructuredDocumentation","src":"64986:119:56","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65119:11:56","parameters":{"id":30706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30700,"mutability":"mutable","name":"left","nameLocation":"65150:4:56","nodeType":"VariableDeclaration","scope":30708,"src":"65131:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":30698,"name":"address","nodeType":"ElementaryTypeName","src":"65131:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30699,"nodeType":"ArrayTypeName","src":"65131:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":30703,"mutability":"mutable","name":"right","nameLocation":"65175:5:56","nodeType":"VariableDeclaration","scope":30708,"src":"65156:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":30701,"name":"address","nodeType":"ElementaryTypeName","src":"65156:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30702,"nodeType":"ArrayTypeName","src":"65156:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":30705,"mutability":"mutable","name":"error","nameLocation":"65198:5:56","nodeType":"VariableDeclaration","scope":30708,"src":"65182:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30704,"name":"string","nodeType":"ElementaryTypeName","src":"65182:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65130:74:56"},"returnParameters":{"id":30707,"nodeType":"ParameterList","parameters":[],"src":"65218:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30718,"nodeType":"FunctionDefinition","src":"65292:86:56","nodes":[],"documentation":{"id":30709,"nodeType":"StructuredDocumentation","src":"65225:62:56","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65301:11:56","parameters":{"id":30716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30712,"mutability":"mutable","name":"left","nameLocation":"65332:4:56","nodeType":"VariableDeclaration","scope":30718,"src":"65313:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":30710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65313:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":30711,"nodeType":"ArrayTypeName","src":"65313:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":30715,"mutability":"mutable","name":"right","nameLocation":"65357:5:56","nodeType":"VariableDeclaration","scope":30718,"src":"65338:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":30713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65338:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":30714,"nodeType":"ArrayTypeName","src":"65338:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"65312:51:56"},"returnParameters":{"id":30717,"nodeType":"ParameterList","parameters":[],"src":"65377:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30730,"nodeType":"FunctionDefinition","src":"65508:109:56","nodes":[],"documentation":{"id":30719,"nodeType":"StructuredDocumentation","src":"65384:119:56","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65517:11:56","parameters":{"id":30728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30722,"mutability":"mutable","name":"left","nameLocation":"65548:4:56","nodeType":"VariableDeclaration","scope":30730,"src":"65529:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":30720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65529:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":30721,"nodeType":"ArrayTypeName","src":"65529:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":30725,"mutability":"mutable","name":"right","nameLocation":"65573:5:56","nodeType":"VariableDeclaration","scope":30730,"src":"65554:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":30723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65554:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":30724,"nodeType":"ArrayTypeName","src":"65554:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":30727,"mutability":"mutable","name":"error","nameLocation":"65596:5:56","nodeType":"VariableDeclaration","scope":30730,"src":"65580:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30726,"name":"string","nodeType":"ElementaryTypeName","src":"65580:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65528:74:56"},"returnParameters":{"id":30729,"nodeType":"ParameterList","parameters":[],"src":"65616:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30740,"nodeType":"FunctionDefinition","src":"65689:84:56","nodes":[],"documentation":{"id":30731,"nodeType":"StructuredDocumentation","src":"65623:61:56","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65698:11:56","parameters":{"id":30738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30734,"mutability":"mutable","name":"left","nameLocation":"65728:4:56","nodeType":"VariableDeclaration","scope":30740,"src":"65710:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":30732,"name":"string","nodeType":"ElementaryTypeName","src":"65710:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":30733,"nodeType":"ArrayTypeName","src":"65710:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":30737,"mutability":"mutable","name":"right","nameLocation":"65752:5:56","nodeType":"VariableDeclaration","scope":30740,"src":"65734:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":30735,"name":"string","nodeType":"ElementaryTypeName","src":"65734:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":30736,"nodeType":"ArrayTypeName","src":"65734:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"65709:49:56"},"returnParameters":{"id":30739,"nodeType":"ParameterList","parameters":[],"src":"65772:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30752,"nodeType":"FunctionDefinition","src":"65902:107:56","nodes":[],"documentation":{"id":30741,"nodeType":"StructuredDocumentation","src":"65779:118:56","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65911:11:56","parameters":{"id":30750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30744,"mutability":"mutable","name":"left","nameLocation":"65941:4:56","nodeType":"VariableDeclaration","scope":30752,"src":"65923:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":30742,"name":"string","nodeType":"ElementaryTypeName","src":"65923:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":30743,"nodeType":"ArrayTypeName","src":"65923:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":30747,"mutability":"mutable","name":"right","nameLocation":"65965:5:56","nodeType":"VariableDeclaration","scope":30752,"src":"65947:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":30745,"name":"string","nodeType":"ElementaryTypeName","src":"65947:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":30746,"nodeType":"ArrayTypeName","src":"65947:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":30749,"mutability":"mutable","name":"error","nameLocation":"65988:5:56","nodeType":"VariableDeclaration","scope":30752,"src":"65972:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30748,"name":"string","nodeType":"ElementaryTypeName","src":"65972:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65922:72:56"},"returnParameters":{"id":30751,"nodeType":"ParameterList","parameters":[],"src":"66008:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30762,"nodeType":"FunctionDefinition","src":"66080:82:56","nodes":[],"documentation":{"id":30753,"nodeType":"StructuredDocumentation","src":"66015:60:56","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66089:11:56","parameters":{"id":30760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30756,"mutability":"mutable","name":"left","nameLocation":"66118:4:56","nodeType":"VariableDeclaration","scope":30762,"src":"66101:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":30754,"name":"bytes","nodeType":"ElementaryTypeName","src":"66101:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":30755,"nodeType":"ArrayTypeName","src":"66101:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":30759,"mutability":"mutable","name":"right","nameLocation":"66141:5:56","nodeType":"VariableDeclaration","scope":30762,"src":"66124:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":30757,"name":"bytes","nodeType":"ElementaryTypeName","src":"66124:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":30758,"nodeType":"ArrayTypeName","src":"66124:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"66100:47:56"},"returnParameters":{"id":30761,"nodeType":"ParameterList","parameters":[],"src":"66161:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30774,"nodeType":"FunctionDefinition","src":"66290:105:56","nodes":[],"documentation":{"id":30763,"nodeType":"StructuredDocumentation","src":"66168:117:56","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66299:11:56","parameters":{"id":30772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30766,"mutability":"mutable","name":"left","nameLocation":"66328:4:56","nodeType":"VariableDeclaration","scope":30774,"src":"66311:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":30764,"name":"bytes","nodeType":"ElementaryTypeName","src":"66311:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":30765,"nodeType":"ArrayTypeName","src":"66311:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":30769,"mutability":"mutable","name":"right","nameLocation":"66351:5:56","nodeType":"VariableDeclaration","scope":30774,"src":"66334:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":30767,"name":"bytes","nodeType":"ElementaryTypeName","src":"66334:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":30768,"nodeType":"ArrayTypeName","src":"66334:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":30771,"mutability":"mutable","name":"error","nameLocation":"66374:5:56","nodeType":"VariableDeclaration","scope":30774,"src":"66358:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30770,"name":"string","nodeType":"ElementaryTypeName","src":"66358:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66310:70:56"},"returnParameters":{"id":30773,"nodeType":"ParameterList","parameters":[],"src":"66394:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30784,"nodeType":"FunctionDefinition","src":"66515:87:56","nodes":[],"documentation":{"id":30775,"nodeType":"StructuredDocumentation","src":"66401:109:56","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66524:11:56","parameters":{"id":30782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30777,"mutability":"mutable","name":"left","nameLocation":"66544:4:56","nodeType":"VariableDeclaration","scope":30784,"src":"66536:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30776,"name":"uint256","nodeType":"ElementaryTypeName","src":"66536:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30779,"mutability":"mutable","name":"right","nameLocation":"66558:5:56","nodeType":"VariableDeclaration","scope":30784,"src":"66550:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30778,"name":"uint256","nodeType":"ElementaryTypeName","src":"66550:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30781,"mutability":"mutable","name":"error","nameLocation":"66581:5:56","nodeType":"VariableDeclaration","scope":30784,"src":"66565:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30780,"name":"string","nodeType":"ElementaryTypeName","src":"66565:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66535:52:56"},"returnParameters":{"id":30783,"nodeType":"ParameterList","parameters":[],"src":"66601:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30792,"nodeType":"FunctionDefinition","src":"66664:62:56","nodes":[],"documentation":{"id":30785,"nodeType":"StructuredDocumentation","src":"66608:51:56","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66673:11:56","parameters":{"id":30790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30787,"mutability":"mutable","name":"left","nameLocation":"66692:4:56","nodeType":"VariableDeclaration","scope":30792,"src":"66685:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30786,"name":"int256","nodeType":"ElementaryTypeName","src":"66685:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30789,"mutability":"mutable","name":"right","nameLocation":"66705:5:56","nodeType":"VariableDeclaration","scope":30792,"src":"66698:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30788,"name":"int256","nodeType":"ElementaryTypeName","src":"66698:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66684:27:56"},"returnParameters":{"id":30791,"nodeType":"ParameterList","parameters":[],"src":"66725:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30802,"nodeType":"FunctionDefinition","src":"66845:85:56","nodes":[],"documentation":{"id":30793,"nodeType":"StructuredDocumentation","src":"66732:108:56","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66854:11:56","parameters":{"id":30800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30795,"mutability":"mutable","name":"left","nameLocation":"66873:4:56","nodeType":"VariableDeclaration","scope":30802,"src":"66866:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30794,"name":"int256","nodeType":"ElementaryTypeName","src":"66866:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30797,"mutability":"mutable","name":"right","nameLocation":"66886:5:56","nodeType":"VariableDeclaration","scope":30802,"src":"66879:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":30796,"name":"int256","nodeType":"ElementaryTypeName","src":"66879:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":30799,"mutability":"mutable","name":"error","nameLocation":"66909:5:56","nodeType":"VariableDeclaration","scope":30802,"src":"66893:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30798,"name":"string","nodeType":"ElementaryTypeName","src":"66893:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66865:50:56"},"returnParameters":{"id":30801,"nodeType":"ParameterList","parameters":[],"src":"66929:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30810,"nodeType":"FunctionDefinition","src":"66993:64:56","nodes":[],"documentation":{"id":30803,"nodeType":"StructuredDocumentation","src":"66936:52:56","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67002:11:56","parameters":{"id":30808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30805,"mutability":"mutable","name":"left","nameLocation":"67022:4:56","nodeType":"VariableDeclaration","scope":30810,"src":"67014:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30804,"name":"address","nodeType":"ElementaryTypeName","src":"67014:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30807,"mutability":"mutable","name":"right","nameLocation":"67036:5:56","nodeType":"VariableDeclaration","scope":30810,"src":"67028:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30806,"name":"address","nodeType":"ElementaryTypeName","src":"67028:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"67013:29:56"},"returnParameters":{"id":30809,"nodeType":"ParameterList","parameters":[],"src":"67056:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30820,"nodeType":"FunctionDefinition","src":"67177:87:56","nodes":[],"documentation":{"id":30811,"nodeType":"StructuredDocumentation","src":"67063:109:56","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67186:11:56","parameters":{"id":30818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30813,"mutability":"mutable","name":"left","nameLocation":"67206:4:56","nodeType":"VariableDeclaration","scope":30820,"src":"67198:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30812,"name":"address","nodeType":"ElementaryTypeName","src":"67198:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30815,"mutability":"mutable","name":"right","nameLocation":"67220:5:56","nodeType":"VariableDeclaration","scope":30820,"src":"67212:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30814,"name":"address","nodeType":"ElementaryTypeName","src":"67212:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30817,"mutability":"mutable","name":"error","nameLocation":"67243:5:56","nodeType":"VariableDeclaration","scope":30820,"src":"67227:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30816,"name":"string","nodeType":"ElementaryTypeName","src":"67227:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67197:52:56"},"returnParameters":{"id":30819,"nodeType":"ParameterList","parameters":[],"src":"67263:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30828,"nodeType":"FunctionDefinition","src":"67327:64:56","nodes":[],"documentation":{"id":30821,"nodeType":"StructuredDocumentation","src":"67270:52:56","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67336:11:56","parameters":{"id":30826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30823,"mutability":"mutable","name":"left","nameLocation":"67356:4:56","nodeType":"VariableDeclaration","scope":30828,"src":"67348:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67348:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":30825,"mutability":"mutable","name":"right","nameLocation":"67370:5:56","nodeType":"VariableDeclaration","scope":30828,"src":"67362:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67362:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"67347:29:56"},"returnParameters":{"id":30827,"nodeType":"ParameterList","parameters":[],"src":"67390:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30838,"nodeType":"FunctionDefinition","src":"67511:87:56","nodes":[],"documentation":{"id":30829,"nodeType":"StructuredDocumentation","src":"67397:109:56","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67520:11:56","parameters":{"id":30836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30831,"mutability":"mutable","name":"left","nameLocation":"67540:4:56","nodeType":"VariableDeclaration","scope":30838,"src":"67532:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67532:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":30833,"mutability":"mutable","name":"right","nameLocation":"67554:5:56","nodeType":"VariableDeclaration","scope":30838,"src":"67546:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67546:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":30835,"mutability":"mutable","name":"error","nameLocation":"67577:5:56","nodeType":"VariableDeclaration","scope":30838,"src":"67561:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30834,"name":"string","nodeType":"ElementaryTypeName","src":"67561:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67531:52:56"},"returnParameters":{"id":30837,"nodeType":"ParameterList","parameters":[],"src":"67597:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30844,"nodeType":"FunctionDefinition","src":"67654:50:56","nodes":[],"documentation":{"id":30839,"nodeType":"StructuredDocumentation","src":"67604:45:56","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"67663:10:56","parameters":{"id":30842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30841,"mutability":"mutable","name":"condition","nameLocation":"67679:9:56","nodeType":"VariableDeclaration","scope":30844,"src":"67674:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30840,"name":"bool","nodeType":"ElementaryTypeName","src":"67674:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67673:16:56"},"returnParameters":{"id":30843,"nodeType":"ParameterList","parameters":[],"src":"67703:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30852,"nodeType":"FunctionDefinition","src":"67817:73:56","nodes":[],"documentation":{"id":30845,"nodeType":"StructuredDocumentation","src":"67710:102:56","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"67826:10:56","parameters":{"id":30850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30847,"mutability":"mutable","name":"condition","nameLocation":"67842:9:56","nodeType":"VariableDeclaration","scope":30852,"src":"67837:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30846,"name":"bool","nodeType":"ElementaryTypeName","src":"67837:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":30849,"mutability":"mutable","name":"error","nameLocation":"67869:5:56","nodeType":"VariableDeclaration","scope":30852,"src":"67853:21:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30848,"name":"string","nodeType":"ElementaryTypeName","src":"67853:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67836:39:56"},"returnParameters":{"id":30851,"nodeType":"ParameterList","parameters":[],"src":"67889:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30858,"nodeType":"FunctionDefinition","src":"67985:46:56","nodes":[],"documentation":{"id":30853,"nodeType":"StructuredDocumentation","src":"67896:84:56","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"67994:6:56","parameters":{"id":30856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30855,"mutability":"mutable","name":"condition","nameLocation":"68006:9:56","nodeType":"VariableDeclaration","scope":30858,"src":"68001:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30854,"name":"bool","nodeType":"ElementaryTypeName","src":"68001:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68000:16:56"},"returnParameters":{"id":30857,"nodeType":"ParameterList","parameters":[],"src":"68030:0:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30864,"nodeType":"FunctionDefinition","src":"68093:51:56","nodes":[],"documentation":{"id":30859,"nodeType":"StructuredDocumentation","src":"68037:51:56","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"68102:10:56","parameters":{"id":30862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30861,"mutability":"mutable","name":"char","nameLocation":"68129:4:56","nodeType":"VariableDeclaration","scope":30864,"src":"68113:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30860,"name":"string","nodeType":"ElementaryTypeName","src":"68113:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68112:22:56"},"returnParameters":{"id":30863,"nodeType":"ParameterList","parameters":[],"src":"68143:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":30872,"nodeType":"FunctionDefinition","src":"68218:63:56","nodes":[],"documentation":{"id":30865,"nodeType":"StructuredDocumentation","src":"68150:63:56","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"68227:10:56","parameters":{"id":30870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30867,"mutability":"mutable","name":"char","nameLocation":"68254:4:56","nodeType":"VariableDeclaration","scope":30872,"src":"68238:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30866,"name":"string","nodeType":"ElementaryTypeName","src":"68238:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30869,"mutability":"mutable","name":"value","nameLocation":"68265:5:56","nodeType":"VariableDeclaration","scope":30872,"src":"68260:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30868,"name":"bool","nodeType":"ElementaryTypeName","src":"68260:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68237:34:56"},"returnParameters":{"id":30871,"nodeType":"ParameterList","parameters":[],"src":"68280:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":30880,"nodeType":"FunctionDefinition","src":"68336:85:56","nodes":[],"documentation":{"id":30873,"nodeType":"StructuredDocumentation","src":"68287:44:56","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"68345:6:56","parameters":{"id":30876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30875,"mutability":"mutable","name":"rpcAlias","nameLocation":"68368:8:56","nodeType":"VariableDeclaration","scope":30880,"src":"68352:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30874,"name":"string","nodeType":"ElementaryTypeName","src":"68352:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68351:26:56"},"returnParameters":{"id":30879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30878,"mutability":"mutable","name":"json","nameLocation":"68415:4:56","nodeType":"VariableDeclaration","scope":30880,"src":"68401:18:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":30877,"name":"string","nodeType":"ElementaryTypeName","src":"68401:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68400:20:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":30888,"nodeType":"FunctionDefinition","src":"68486:67:56","nodes":[],"documentation":{"id":30881,"nodeType":"StructuredDocumentation","src":"68427:54:56","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"68495:13:56","parameters":{"id":30882,"nodeType":"ParameterList","parameters":[],"src":"68508:2:56"},"returnParameters":{"id":30887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30886,"mutability":"mutable","name":"urls","nameLocation":"68547:4:56","nodeType":"VariableDeclaration","scope":30888,"src":"68534:17:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$28135_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":30884,"nodeType":"UserDefinedTypeName","pathNode":{"id":30883,"name":"Rpc","nameLocations":["68534:3:56"],"nodeType":"IdentifierPath","referencedDeclaration":28135,"src":"68534:3:56"},"referencedDeclaration":28135,"src":"68534:3:56","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$28135_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":30885,"nodeType":"ArrayTypeName","src":"68534:5:56","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$28135_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"68533:19:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":30897,"nodeType":"FunctionDefinition","src":"68624:67:56","nodes":[],"documentation":{"id":30889,"nodeType":"StructuredDocumentation","src":"68559:60:56","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"68633:7:56","parameters":{"id":30890,"nodeType":"ParameterList","parameters":[],"src":"68640:2:56"},"returnParameters":{"id":30896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30895,"mutability":"mutable","name":"urls","nameLocation":"68685:4:56","nodeType":"VariableDeclaration","scope":30897,"src":"68666:23:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":30891,"name":"string","nodeType":"ElementaryTypeName","src":"68666:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":30893,"length":{"hexValue":"32","id":30892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"68673:1:56","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"68666:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":30894,"nodeType":"ArrayTypeName","src":"68666:11:56","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"68665:25:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":30903,"nodeType":"FunctionDefinition","src":"68772:42:56","nodes":[],"documentation":{"id":30898,"nodeType":"StructuredDocumentation","src":"68697:70:56","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"68781:5:56","parameters":{"id":30901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30900,"mutability":"mutable","name":"duration","nameLocation":"68795:8:56","nodeType":"VariableDeclaration","scope":30903,"src":"68787:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30899,"name":"uint256","nodeType":"ElementaryTypeName","src":"68787:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68786:18:56"},"returnParameters":{"id":30902,"nodeType":"ParameterList","parameters":[],"src":"68813:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":30913,"nodeType":"FunctionDefinition","src":"68899:95:56","nodes":[],"documentation":{"id":30904,"nodeType":"StructuredDocumentation","src":"68851:43:56","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"68908:13:56","parameters":{"id":30909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30906,"mutability":"mutable","name":"toml","nameLocation":"68938:4:56","nodeType":"VariableDeclaration","scope":30913,"src":"68922:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30905,"name":"string","nodeType":"ElementaryTypeName","src":"68922:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30908,"mutability":"mutable","name":"key","nameLocation":"68960:3:56","nodeType":"VariableDeclaration","scope":30913,"src":"68944:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30907,"name":"string","nodeType":"ElementaryTypeName","src":"68944:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68921:43:56"},"returnParameters":{"id":30912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30913,"src":"68988:4:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30910,"name":"bool","nodeType":"ElementaryTypeName","src":"68988:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68987:6:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":30923,"nodeType":"FunctionDefinition","src":"69075:101:56","nodes":[],"documentation":{"id":30914,"nodeType":"StructuredDocumentation","src":"69000:70:56","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"69084:16:56","parameters":{"id":30919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30916,"mutability":"mutable","name":"toml","nameLocation":"69117:4:56","nodeType":"VariableDeclaration","scope":30923,"src":"69101:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30915,"name":"string","nodeType":"ElementaryTypeName","src":"69101:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30918,"mutability":"mutable","name":"key","nameLocation":"69139:3:56","nodeType":"VariableDeclaration","scope":30923,"src":"69123:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30917,"name":"string","nodeType":"ElementaryTypeName","src":"69123:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69100:43:56"},"returnParameters":{"id":30922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30923,"src":"69167:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30920,"name":"address","nodeType":"ElementaryTypeName","src":"69167:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"69166:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30934,"nodeType":"FunctionDefinition","src":"69259:139:56","nodes":[],"documentation":{"id":30924,"nodeType":"StructuredDocumentation","src":"69182:72:56","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"69268:21:56","parameters":{"id":30929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30926,"mutability":"mutable","name":"toml","nameLocation":"69306:4:56","nodeType":"VariableDeclaration","scope":30934,"src":"69290:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30925,"name":"string","nodeType":"ElementaryTypeName","src":"69290:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30928,"mutability":"mutable","name":"key","nameLocation":"69328:3:56","nodeType":"VariableDeclaration","scope":30934,"src":"69312:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30927,"name":"string","nodeType":"ElementaryTypeName","src":"69312:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69289:43:56"},"returnParameters":{"id":30933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30934,"src":"69380:16:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":30930,"name":"address","nodeType":"ElementaryTypeName","src":"69380:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":30931,"nodeType":"ArrayTypeName","src":"69380:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"69379:18:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30944,"nodeType":"FunctionDefinition","src":"69476:95:56","nodes":[],"documentation":{"id":30935,"nodeType":"StructuredDocumentation","src":"69404:67:56","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"69485:13:56","parameters":{"id":30940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30937,"mutability":"mutable","name":"toml","nameLocation":"69515:4:56","nodeType":"VariableDeclaration","scope":30944,"src":"69499:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30936,"name":"string","nodeType":"ElementaryTypeName","src":"69499:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30939,"mutability":"mutable","name":"key","nameLocation":"69537:3:56","nodeType":"VariableDeclaration","scope":30944,"src":"69521:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30938,"name":"string","nodeType":"ElementaryTypeName","src":"69521:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69498:43:56"},"returnParameters":{"id":30943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30944,"src":"69565:4:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":30941,"name":"bool","nodeType":"ElementaryTypeName","src":"69565:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69564:6:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30955,"nodeType":"FunctionDefinition","src":"69651:109:56","nodes":[],"documentation":{"id":30945,"nodeType":"StructuredDocumentation","src":"69577:69:56","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"69660:18:56","parameters":{"id":30950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30947,"mutability":"mutable","name":"toml","nameLocation":"69695:4:56","nodeType":"VariableDeclaration","scope":30955,"src":"69679:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30946,"name":"string","nodeType":"ElementaryTypeName","src":"69679:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30949,"mutability":"mutable","name":"key","nameLocation":"69717:3:56","nodeType":"VariableDeclaration","scope":30955,"src":"69701:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30948,"name":"string","nodeType":"ElementaryTypeName","src":"69701:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69678:43:56"},"returnParameters":{"id":30954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30955,"src":"69745:13:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":30951,"name":"bool","nodeType":"ElementaryTypeName","src":"69745:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":30952,"nodeType":"ArrayTypeName","src":"69745:6:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"69744:15:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30965,"nodeType":"FunctionDefinition","src":"69839:104:56","nodes":[],"documentation":{"id":30956,"nodeType":"StructuredDocumentation","src":"69766:68:56","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"69848:14:56","parameters":{"id":30961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30958,"mutability":"mutable","name":"toml","nameLocation":"69879:4:56","nodeType":"VariableDeclaration","scope":30965,"src":"69863:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30957,"name":"string","nodeType":"ElementaryTypeName","src":"69863:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30960,"mutability":"mutable","name":"key","nameLocation":"69901:3:56","nodeType":"VariableDeclaration","scope":30965,"src":"69885:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30959,"name":"string","nodeType":"ElementaryTypeName","src":"69885:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69862:43:56"},"returnParameters":{"id":30964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30965,"src":"69929:12:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":30962,"name":"bytes","nodeType":"ElementaryTypeName","src":"69929:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"69928:14:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30975,"nodeType":"FunctionDefinition","src":"70024:101:56","nodes":[],"documentation":{"id":30966,"nodeType":"StructuredDocumentation","src":"69949:70:56","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"70033:16:56","parameters":{"id":30971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30968,"mutability":"mutable","name":"toml","nameLocation":"70066:4:56","nodeType":"VariableDeclaration","scope":30975,"src":"70050:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30967,"name":"string","nodeType":"ElementaryTypeName","src":"70050:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30970,"mutability":"mutable","name":"key","nameLocation":"70088:3:56","nodeType":"VariableDeclaration","scope":30975,"src":"70072:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30969,"name":"string","nodeType":"ElementaryTypeName","src":"70072:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70049:43:56"},"returnParameters":{"id":30974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30975,"src":"70116:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70116:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"70115:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30986,"nodeType":"FunctionDefinition","src":"70208:139:56","nodes":[],"documentation":{"id":30976,"nodeType":"StructuredDocumentation","src":"70131:72:56","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"70217:21:56","parameters":{"id":30981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30978,"mutability":"mutable","name":"toml","nameLocation":"70255:4:56","nodeType":"VariableDeclaration","scope":30986,"src":"70239:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30977,"name":"string","nodeType":"ElementaryTypeName","src":"70239:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30980,"mutability":"mutable","name":"key","nameLocation":"70277:3:56","nodeType":"VariableDeclaration","scope":30986,"src":"70261:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30979,"name":"string","nodeType":"ElementaryTypeName","src":"70261:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70238:43:56"},"returnParameters":{"id":30985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30986,"src":"70329:16:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":30982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70329:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":30983,"nodeType":"ArrayTypeName","src":"70329:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"70328:18:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":30997,"nodeType":"FunctionDefinition","src":"70428:111:56","nodes":[],"documentation":{"id":30987,"nodeType":"StructuredDocumentation","src":"70353:70:56","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"70437:19:56","parameters":{"id":30992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30989,"mutability":"mutable","name":"toml","nameLocation":"70473:4:56","nodeType":"VariableDeclaration","scope":30997,"src":"70457:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30988,"name":"string","nodeType":"ElementaryTypeName","src":"70457:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":30991,"mutability":"mutable","name":"key","nameLocation":"70495:3:56","nodeType":"VariableDeclaration","scope":30997,"src":"70479:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30990,"name":"string","nodeType":"ElementaryTypeName","src":"70479:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70456:43:56"},"returnParameters":{"id":30996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":30997,"src":"70523:14:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":30993,"name":"bytes","nodeType":"ElementaryTypeName","src":"70523:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":30994,"nodeType":"ArrayTypeName","src":"70523:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"70522:16:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31007,"nodeType":"FunctionDefinition","src":"70619:96:56","nodes":[],"documentation":{"id":30998,"nodeType":"StructuredDocumentation","src":"70545:69:56","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"70628:12:56","parameters":{"id":31003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31000,"mutability":"mutable","name":"toml","nameLocation":"70657:4:56","nodeType":"VariableDeclaration","scope":31007,"src":"70641:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":30999,"name":"string","nodeType":"ElementaryTypeName","src":"70641:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31002,"mutability":"mutable","name":"key","nameLocation":"70679:3:56","nodeType":"VariableDeclaration","scope":31007,"src":"70663:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31001,"name":"string","nodeType":"ElementaryTypeName","src":"70663:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70640:43:56"},"returnParameters":{"id":31006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31007,"src":"70707:6:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":31004,"name":"int256","nodeType":"ElementaryTypeName","src":"70707:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70706:8:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31018,"nodeType":"FunctionDefinition","src":"70797:110:56","nodes":[],"documentation":{"id":31008,"nodeType":"StructuredDocumentation","src":"70721:71:56","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"70806:17:56","parameters":{"id":31013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31010,"mutability":"mutable","name":"toml","nameLocation":"70840:4:56","nodeType":"VariableDeclaration","scope":31018,"src":"70824:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31009,"name":"string","nodeType":"ElementaryTypeName","src":"70824:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31012,"mutability":"mutable","name":"key","nameLocation":"70862:3:56","nodeType":"VariableDeclaration","scope":31018,"src":"70846:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31011,"name":"string","nodeType":"ElementaryTypeName","src":"70846:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70823:43:56"},"returnParameters":{"id":31017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31018,"src":"70890:15:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":31014,"name":"int256","nodeType":"ElementaryTypeName","src":"70890:6:56","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":31015,"nodeType":"ArrayTypeName","src":"70890:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"70889:17:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31029,"nodeType":"FunctionDefinition","src":"70971:111:56","nodes":[],"documentation":{"id":31019,"nodeType":"StructuredDocumentation","src":"70913:53:56","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"70980:13:56","parameters":{"id":31024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31021,"mutability":"mutable","name":"toml","nameLocation":"71010:4:56","nodeType":"VariableDeclaration","scope":31029,"src":"70994:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31020,"name":"string","nodeType":"ElementaryTypeName","src":"70994:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31023,"mutability":"mutable","name":"key","nameLocation":"71032:3:56","nodeType":"VariableDeclaration","scope":31029,"src":"71016:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31022,"name":"string","nodeType":"ElementaryTypeName","src":"71016:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70993:43:56"},"returnParameters":{"id":31028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31027,"mutability":"mutable","name":"keys","nameLocation":"71076:4:56","nodeType":"VariableDeclaration","scope":31029,"src":"71060:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":31025,"name":"string","nodeType":"ElementaryTypeName","src":"71060:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":31026,"nodeType":"ArrayTypeName","src":"71060:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"71059:22:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31039,"nodeType":"FunctionDefinition","src":"71162:106:56","nodes":[],"documentation":{"id":31030,"nodeType":"StructuredDocumentation","src":"71088:69:56","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"71171:15:56","parameters":{"id":31035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31032,"mutability":"mutable","name":"toml","nameLocation":"71203:4:56","nodeType":"VariableDeclaration","scope":31039,"src":"71187:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31031,"name":"string","nodeType":"ElementaryTypeName","src":"71187:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31034,"mutability":"mutable","name":"key","nameLocation":"71225:3:56","nodeType":"VariableDeclaration","scope":31039,"src":"71209:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31033,"name":"string","nodeType":"ElementaryTypeName","src":"71209:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71186:43:56"},"returnParameters":{"id":31038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31039,"src":"71253:13:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31036,"name":"string","nodeType":"ElementaryTypeName","src":"71253:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71252:15:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31050,"nodeType":"FunctionDefinition","src":"71350:113:56","nodes":[],"documentation":{"id":31040,"nodeType":"StructuredDocumentation","src":"71274:71:56","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"71359:20:56","parameters":{"id":31045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31042,"mutability":"mutable","name":"toml","nameLocation":"71396:4:56","nodeType":"VariableDeclaration","scope":31050,"src":"71380:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31041,"name":"string","nodeType":"ElementaryTypeName","src":"71380:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31044,"mutability":"mutable","name":"key","nameLocation":"71418:3:56","nodeType":"VariableDeclaration","scope":31050,"src":"71402:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31043,"name":"string","nodeType":"ElementaryTypeName","src":"71402:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71379:43:56"},"returnParameters":{"id":31049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31050,"src":"71446:15:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":31046,"name":"string","nodeType":"ElementaryTypeName","src":"71446:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":31047,"nodeType":"ArrayTypeName","src":"71446:8:56","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"71445:17:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31060,"nodeType":"FunctionDefinition","src":"71544:98:56","nodes":[],"documentation":{"id":31051,"nodeType":"StructuredDocumentation","src":"71469:70:56","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"71553:13:56","parameters":{"id":31056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31053,"mutability":"mutable","name":"toml","nameLocation":"71583:4:56","nodeType":"VariableDeclaration","scope":31060,"src":"71567:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31052,"name":"string","nodeType":"ElementaryTypeName","src":"71567:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31055,"mutability":"mutable","name":"key","nameLocation":"71605:3:56","nodeType":"VariableDeclaration","scope":31060,"src":"71589:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31054,"name":"string","nodeType":"ElementaryTypeName","src":"71589:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71566:43:56"},"returnParameters":{"id":31059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31060,"src":"71633:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31057,"name":"uint256","nodeType":"ElementaryTypeName","src":"71633:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71632:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31071,"nodeType":"FunctionDefinition","src":"71725:112:56","nodes":[],"documentation":{"id":31061,"nodeType":"StructuredDocumentation","src":"71648:72:56","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"71734:18:56","parameters":{"id":31066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31063,"mutability":"mutable","name":"toml","nameLocation":"71769:4:56","nodeType":"VariableDeclaration","scope":31071,"src":"71753:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31062,"name":"string","nodeType":"ElementaryTypeName","src":"71753:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31065,"mutability":"mutable","name":"key","nameLocation":"71791:3:56","nodeType":"VariableDeclaration","scope":31071,"src":"71775:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31064,"name":"string","nodeType":"ElementaryTypeName","src":"71775:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71752:43:56"},"returnParameters":{"id":31070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31071,"src":"71819:16:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":31067,"name":"uint256","nodeType":"ElementaryTypeName","src":"71819:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":31068,"nodeType":"ArrayTypeName","src":"71819:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"71818:18:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31079,"nodeType":"FunctionDefinition","src":"71877:93:56","nodes":[],"documentation":{"id":31072,"nodeType":"StructuredDocumentation","src":"71843:29:56","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"71886:9:56","parameters":{"id":31075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31074,"mutability":"mutable","name":"toml","nameLocation":"71912:4:56","nodeType":"VariableDeclaration","scope":31079,"src":"71896:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31073,"name":"string","nodeType":"ElementaryTypeName","src":"71896:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71895:22:56"},"returnParameters":{"id":31078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31077,"mutability":"mutable","name":"abiEncodedData","nameLocation":"71954:14:56","nodeType":"VariableDeclaration","scope":31079,"src":"71941:27:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":31076,"name":"bytes","nodeType":"ElementaryTypeName","src":"71941:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71940:29:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31089,"nodeType":"FunctionDefinition","src":"72019:114:56","nodes":[],"documentation":{"id":31080,"nodeType":"StructuredDocumentation","src":"71976:38:56","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"72028:9:56","parameters":{"id":31085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31082,"mutability":"mutable","name":"toml","nameLocation":"72054:4:56","nodeType":"VariableDeclaration","scope":31089,"src":"72038:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31081,"name":"string","nodeType":"ElementaryTypeName","src":"72038:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31084,"mutability":"mutable","name":"key","nameLocation":"72076:3:56","nodeType":"VariableDeclaration","scope":31089,"src":"72060:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31083,"name":"string","nodeType":"ElementaryTypeName","src":"72060:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72037:43:56"},"returnParameters":{"id":31088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31087,"mutability":"mutable","name":"abiEncodedData","nameLocation":"72117:14:56","nodeType":"VariableDeclaration","scope":31089,"src":"72104:27:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":31086,"name":"bytes","nodeType":"ElementaryTypeName","src":"72104:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"72103:29:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31097,"nodeType":"FunctionDefinition","src":"72226:72:56","nodes":[],"documentation":{"id":31090,"nodeType":"StructuredDocumentation","src":"72139:82:56","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"72235:9:56","parameters":{"id":31095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31092,"mutability":"mutable","name":"json","nameLocation":"72261:4:56","nodeType":"VariableDeclaration","scope":31097,"src":"72245:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31091,"name":"string","nodeType":"ElementaryTypeName","src":"72245:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31094,"mutability":"mutable","name":"path","nameLocation":"72283:4:56","nodeType":"VariableDeclaration","scope":31097,"src":"72267:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31093,"name":"string","nodeType":"ElementaryTypeName","src":"72267:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72244:44:56"},"returnParameters":{"id":31096,"nodeType":"ParameterList","parameters":[],"src":"72297:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31107,"nodeType":"FunctionDefinition","src":"72567:98:56","nodes":[],"documentation":{"id":31098,"nodeType":"StructuredDocumentation","src":"72304:258:56","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"72576:9:56","parameters":{"id":31105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31100,"mutability":"mutable","name":"json","nameLocation":"72602:4:56","nodeType":"VariableDeclaration","scope":31107,"src":"72586:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31099,"name":"string","nodeType":"ElementaryTypeName","src":"72586:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31102,"mutability":"mutable","name":"path","nameLocation":"72624:4:56","nodeType":"VariableDeclaration","scope":31107,"src":"72608:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31101,"name":"string","nodeType":"ElementaryTypeName","src":"72608:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31104,"mutability":"mutable","name":"valueKey","nameLocation":"72646:8:56","nodeType":"VariableDeclaration","scope":31107,"src":"72630:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31103,"name":"string","nodeType":"ElementaryTypeName","src":"72630:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72585:70:56"},"returnParameters":{"id":31106,"nodeType":"ParameterList","parameters":[],"src":"72664:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31119,"nodeType":"FunctionDefinition","src":"72804:141:56","nodes":[],"documentation":{"id":31108,"nodeType":"StructuredDocumentation","src":"72707:92:56","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"72813:21:56","parameters":{"id":31115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31110,"mutability":"mutable","name":"salt","nameLocation":"72843:4:56","nodeType":"VariableDeclaration","scope":31119,"src":"72835:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72835:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":31112,"mutability":"mutable","name":"initCodeHash","nameLocation":"72857:12:56","nodeType":"VariableDeclaration","scope":31119,"src":"72849:20:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72849:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":31114,"mutability":"mutable","name":"deployer","nameLocation":"72879:8:56","nodeType":"VariableDeclaration","scope":31119,"src":"72871:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31113,"name":"address","nodeType":"ElementaryTypeName","src":"72871:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72834:54:56"},"returnParameters":{"id":31118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31119,"src":"72936:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31116,"name":"address","nodeType":"ElementaryTypeName","src":"72936:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72935:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31129,"nodeType":"FunctionDefinition","src":"73050:99:56","nodes":[],"documentation":{"id":31120,"nodeType":"StructuredDocumentation","src":"72951:94:56","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"73059:21:56","parameters":{"id":31125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31122,"mutability":"mutable","name":"salt","nameLocation":"73089:4:56","nodeType":"VariableDeclaration","scope":31129,"src":"73081:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73081:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":31124,"mutability":"mutable","name":"initCodeHash","nameLocation":"73103:12:56","nodeType":"VariableDeclaration","scope":31129,"src":"73095:20:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73095:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"73080:36:56"},"returnParameters":{"id":31128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31129,"src":"73140:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31126,"name":"address","nodeType":"ElementaryTypeName","src":"73140:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73139:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31139,"nodeType":"FunctionDefinition","src":"73254:95:56","nodes":[],"documentation":{"id":31130,"nodeType":"StructuredDocumentation","src":"73155:94:56","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"73263:20:56","parameters":{"id":31135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31132,"mutability":"mutable","name":"deployer","nameLocation":"73292:8:56","nodeType":"VariableDeclaration","scope":31139,"src":"73284:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31131,"name":"address","nodeType":"ElementaryTypeName","src":"73284:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31134,"mutability":"mutable","name":"nonce","nameLocation":"73310:5:56","nodeType":"VariableDeclaration","scope":31139,"src":"73302:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31133,"name":"uint256","nodeType":"ElementaryTypeName","src":"73302:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73283:33:56"},"returnParameters":{"id":31138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31139,"src":"73340:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31136,"name":"address","nodeType":"ElementaryTypeName","src":"73340:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73339:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31148,"nodeType":"FunctionDefinition","src":"73459:91:56","nodes":[],"documentation":{"id":31140,"nodeType":"StructuredDocumentation","src":"73355:99:56","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73468:12:56","parameters":{"id":31143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31142,"mutability":"mutable","name":"walletLabel","nameLocation":"73497:11:56","nodeType":"VariableDeclaration","scope":31148,"src":"73481:27:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31141,"name":"string","nodeType":"ElementaryTypeName","src":"73481:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73480:29:56"},"returnParameters":{"id":31147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31146,"mutability":"mutable","name":"wallet","nameLocation":"73542:6:56","nodeType":"VariableDeclaration","scope":31148,"src":"73528:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$28194_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":31145,"nodeType":"UserDefinedTypeName","pathNode":{"id":31144,"name":"Wallet","nameLocations":["73528:6:56"],"nodeType":"IdentifierPath","referencedDeclaration":28194,"src":"73528:6:56"},"referencedDeclaration":28194,"src":"73528:6:56","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$28194_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73527:22:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31157,"nodeType":"FunctionDefinition","src":"73628:82:56","nodes":[],"documentation":{"id":31149,"nodeType":"StructuredDocumentation","src":"73556:67:56","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73637:12:56","parameters":{"id":31152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31151,"mutability":"mutable","name":"privateKey","nameLocation":"73658:10:56","nodeType":"VariableDeclaration","scope":31157,"src":"73650:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31150,"name":"uint256","nodeType":"ElementaryTypeName","src":"73650:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73649:20:56"},"returnParameters":{"id":31156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31155,"mutability":"mutable","name":"wallet","nameLocation":"73702:6:56","nodeType":"VariableDeclaration","scope":31157,"src":"73688:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$28194_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":31154,"nodeType":"UserDefinedTypeName","pathNode":{"id":31153,"name":"Wallet","nameLocations":["73688:6:56"],"nodeType":"IdentifierPath","referencedDeclaration":28194,"src":"73688:6:56"},"referencedDeclaration":28194,"src":"73688:6:56","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$28194_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73687:22:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31168,"nodeType":"FunctionDefinition","src":"73824:111:56","nodes":[],"documentation":{"id":31158,"nodeType":"StructuredDocumentation","src":"73716:103:56","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73833:12:56","parameters":{"id":31163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31160,"mutability":"mutable","name":"privateKey","nameLocation":"73854:10:56","nodeType":"VariableDeclaration","scope":31168,"src":"73846:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31159,"name":"uint256","nodeType":"ElementaryTypeName","src":"73846:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31162,"mutability":"mutable","name":"walletLabel","nameLocation":"73882:11:56","nodeType":"VariableDeclaration","scope":31168,"src":"73866:27:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31161,"name":"string","nodeType":"ElementaryTypeName","src":"73866:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73845:49:56"},"returnParameters":{"id":31167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31166,"mutability":"mutable","name":"wallet","nameLocation":"73927:6:56","nodeType":"VariableDeclaration","scope":31168,"src":"73913:20:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$28194_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":31165,"nodeType":"UserDefinedTypeName","pathNode":{"id":31164,"name":"Wallet","nameLocations":["73913:6:56"],"nodeType":"IdentifierPath","referencedDeclaration":28194,"src":"73913:6:56"},"referencedDeclaration":28194,"src":"73913:6:56","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$28194_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73912:22:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31178,"nodeType":"FunctionDefinition","src":"74083:102:56","nodes":[],"documentation":{"id":31169,"nodeType":"StructuredDocumentation","src":"73941:137:56","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74092:9:56","parameters":{"id":31174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31171,"mutability":"mutable","name":"mnemonic","nameLocation":"74118:8:56","nodeType":"VariableDeclaration","scope":31178,"src":"74102:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31170,"name":"string","nodeType":"ElementaryTypeName","src":"74102:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31173,"mutability":"mutable","name":"index","nameLocation":"74135:5:56","nodeType":"VariableDeclaration","scope":31178,"src":"74128:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":31172,"name":"uint32","nodeType":"ElementaryTypeName","src":"74128:6:56","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"74101:40:56"},"returnParameters":{"id":31177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31176,"mutability":"mutable","name":"privateKey","nameLocation":"74173:10:56","nodeType":"VariableDeclaration","scope":31178,"src":"74165:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31175,"name":"uint256","nodeType":"ElementaryTypeName","src":"74165:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74164:20:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31190,"nodeType":"FunctionDefinition","src":"74314:158:56","nodes":[],"documentation":{"id":31179,"nodeType":"StructuredDocumentation","src":"74191:118:56","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74323:9:56","parameters":{"id":31186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31181,"mutability":"mutable","name":"mnemonic","nameLocation":"74349:8:56","nodeType":"VariableDeclaration","scope":31190,"src":"74333:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31180,"name":"string","nodeType":"ElementaryTypeName","src":"74333:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31183,"mutability":"mutable","name":"derivationPath","nameLocation":"74375:14:56","nodeType":"VariableDeclaration","scope":31190,"src":"74359:30:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31182,"name":"string","nodeType":"ElementaryTypeName","src":"74359:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31185,"mutability":"mutable","name":"index","nameLocation":"74398:5:56","nodeType":"VariableDeclaration","scope":31190,"src":"74391:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":31184,"name":"uint32","nodeType":"ElementaryTypeName","src":"74391:6:56","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"74332:72:56"},"returnParameters":{"id":31189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31188,"mutability":"mutable","name":"privateKey","nameLocation":"74460:10:56","nodeType":"VariableDeclaration","scope":31190,"src":"74452:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31187,"name":"uint256","nodeType":"ElementaryTypeName","src":"74452:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74451:20:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31202,"nodeType":"FunctionDefinition","src":"74646:152:56","nodes":[],"documentation":{"id":31191,"nodeType":"StructuredDocumentation","src":"74478:163:56","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74655:9:56","parameters":{"id":31198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31193,"mutability":"mutable","name":"mnemonic","nameLocation":"74681:8:56","nodeType":"VariableDeclaration","scope":31202,"src":"74665:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31192,"name":"string","nodeType":"ElementaryTypeName","src":"74665:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31195,"mutability":"mutable","name":"index","nameLocation":"74698:5:56","nodeType":"VariableDeclaration","scope":31202,"src":"74691:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":31194,"name":"uint32","nodeType":"ElementaryTypeName","src":"74691:6:56","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":31197,"mutability":"mutable","name":"language","nameLocation":"74721:8:56","nodeType":"VariableDeclaration","scope":31202,"src":"74705:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31196,"name":"string","nodeType":"ElementaryTypeName","src":"74705:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74664:66:56"},"returnParameters":{"id":31201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31200,"mutability":"mutable","name":"privateKey","nameLocation":"74786:10:56","nodeType":"VariableDeclaration","scope":31202,"src":"74778:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31199,"name":"uint256","nodeType":"ElementaryTypeName","src":"74778:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74777:20:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31216,"nodeType":"FunctionDefinition","src":"74953:184:56","nodes":[],"documentation":{"id":31203,"nodeType":"StructuredDocumentation","src":"74804:144:56","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74962:9:56","parameters":{"id":31212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31205,"mutability":"mutable","name":"mnemonic","nameLocation":"74988:8:56","nodeType":"VariableDeclaration","scope":31216,"src":"74972:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31204,"name":"string","nodeType":"ElementaryTypeName","src":"74972:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31207,"mutability":"mutable","name":"derivationPath","nameLocation":"75014:14:56","nodeType":"VariableDeclaration","scope":31216,"src":"74998:30:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31206,"name":"string","nodeType":"ElementaryTypeName","src":"74998:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31209,"mutability":"mutable","name":"index","nameLocation":"75037:5:56","nodeType":"VariableDeclaration","scope":31216,"src":"75030:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":31208,"name":"uint32","nodeType":"ElementaryTypeName","src":"75030:6:56","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":31211,"mutability":"mutable","name":"language","nameLocation":"75060:8:56","nodeType":"VariableDeclaration","scope":31216,"src":"75044:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31210,"name":"string","nodeType":"ElementaryTypeName","src":"75044:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74971:98:56"},"returnParameters":{"id":31215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31214,"mutability":"mutable","name":"privateKey","nameLocation":"75125:10:56","nodeType":"VariableDeclaration","scope":31216,"src":"75117:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31213,"name":"uint256","nodeType":"ElementaryTypeName","src":"75117:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75116:20:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31224,"nodeType":"FunctionDefinition","src":"75193:75:56","nodes":[],"documentation":{"id":31217,"nodeType":"StructuredDocumentation","src":"75143:45:56","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"75202:11:56","parameters":{"id":31220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31219,"mutability":"mutable","name":"name","nameLocation":"75230:4:56","nodeType":"VariableDeclaration","scope":31224,"src":"75214:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31218,"name":"string","nodeType":"ElementaryTypeName","src":"75214:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75213:22:56"},"returnParameters":{"id":31223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31224,"src":"75259:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75259:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75258:9:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31232,"nodeType":"FunctionDefinition","src":"75324:86:56","nodes":[],"documentation":{"id":31225,"nodeType":"StructuredDocumentation","src":"75274:45:56","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"75333:8:56","parameters":{"id":31228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31227,"mutability":"mutable","name":"account","nameLocation":"75350:7:56","nodeType":"VariableDeclaration","scope":31232,"src":"75342:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31226,"name":"address","nodeType":"ElementaryTypeName","src":"75342:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75341:17:56"},"returnParameters":{"id":31231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31230,"mutability":"mutable","name":"currentLabel","nameLocation":"75396:12:56","nodeType":"VariableDeclaration","scope":31232,"src":"75382:26:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31229,"name":"string","nodeType":"ElementaryTypeName","src":"75382:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75381:28:56"},"scope":31327,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":31241,"nodeType":"FunctionDefinition","src":"75448:74:56","nodes":[],"documentation":{"id":31233,"nodeType":"StructuredDocumentation","src":"75416:27:56","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"75457:8:56","parameters":{"id":31237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31236,"mutability":"mutable","name":"wallet","nameLocation":"75482:6:56","nodeType":"VariableDeclaration","scope":31241,"src":"75466:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$28194_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":31235,"nodeType":"UserDefinedTypeName","pathNode":{"id":31234,"name":"Wallet","nameLocations":["75466:6:56"],"nodeType":"IdentifierPath","referencedDeclaration":28194,"src":"75466:6:56"},"referencedDeclaration":28194,"src":"75466:6:56","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$28194_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75465:24:56"},"returnParameters":{"id":31240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31239,"mutability":"mutable","name":"nonce","nameLocation":"75515:5:56","nodeType":"VariableDeclaration","scope":31241,"src":"75508:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31238,"name":"uint64","nodeType":"ElementaryTypeName","src":"75508:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"75507:14:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31249,"nodeType":"FunctionDefinition","src":"75570:67:56","nodes":[],"documentation":{"id":31242,"nodeType":"StructuredDocumentation","src":"75528:37:56","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"75579:5:56","parameters":{"id":31247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31244,"mutability":"mutable","name":"account","nameLocation":"75593:7:56","nodeType":"VariableDeclaration","scope":31249,"src":"75585:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31243,"name":"address","nodeType":"ElementaryTypeName","src":"75585:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31246,"mutability":"mutable","name":"newLabel","nameLocation":"75618:8:56","nodeType":"VariableDeclaration","scope":31249,"src":"75602:24:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31245,"name":"string","nodeType":"ElementaryTypeName","src":"75602:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75584:43:56"},"returnParameters":{"id":31248,"nodeType":"ParameterList","parameters":[],"src":"75636:0:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31255,"nodeType":"FunctionDefinition","src":"75679:52:56","nodes":[],"documentation":{"id":31250,"nodeType":"StructuredDocumentation","src":"75643:31:56","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"75688:13:56","parameters":{"id":31251,"nodeType":"ParameterList","parameters":[],"src":"75701:2:56"},"returnParameters":{"id":31254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31255,"src":"75722:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31252,"name":"address","nodeType":"ElementaryTypeName","src":"75722:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75721:9:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31261,"nodeType":"FunctionDefinition","src":"75777:49:56","nodes":[],"documentation":{"id":31256,"nodeType":"StructuredDocumentation","src":"75737:35:56","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"75786:10:56","parameters":{"id":31257,"nodeType":"ParameterList","parameters":[],"src":"75796:2:56"},"returnParameters":{"id":31260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31261,"src":"75817:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31258,"name":"uint256","nodeType":"ElementaryTypeName","src":"75817:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75816:9:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31271,"nodeType":"FunctionDefinition","src":"75909:73:56","nodes":[],"documentation":{"id":31262,"nodeType":"StructuredDocumentation","src":"75832:72:56","text":"Returns random uin256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"75918:10:56","parameters":{"id":31267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31264,"mutability":"mutable","name":"min","nameLocation":"75937:3:56","nodeType":"VariableDeclaration","scope":31271,"src":"75929:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31263,"name":"uint256","nodeType":"ElementaryTypeName","src":"75929:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31266,"mutability":"mutable","name":"max","nameLocation":"75950:3:56","nodeType":"VariableDeclaration","scope":31271,"src":"75942:11:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31265,"name":"uint256","nodeType":"ElementaryTypeName","src":"75942:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75928:26:56"},"returnParameters":{"id":31270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31271,"src":"75973:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31268,"name":"uint256","nodeType":"ElementaryTypeName","src":"75973:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75972:9:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31279,"nodeType":"FunctionDefinition","src":"76066:76:56","nodes":[],"documentation":{"id":31272,"nodeType":"StructuredDocumentation","src":"75988:73:56","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"76075:11:56","parameters":{"id":31275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31274,"mutability":"mutable","name":"privateKey","nameLocation":"76095:10:56","nodeType":"VariableDeclaration","scope":31279,"src":"76087:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31273,"name":"uint256","nodeType":"ElementaryTypeName","src":"76087:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76086:20:56"},"returnParameters":{"id":31278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31277,"mutability":"mutable","name":"keyAddr","nameLocation":"76133:7:56","nodeType":"VariableDeclaration","scope":31279,"src":"76125:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31276,"name":"address","nodeType":"ElementaryTypeName","src":"76125:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76124:17:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31294,"nodeType":"FunctionDefinition","src":"76184:103:56","nodes":[],"documentation":{"id":31280,"nodeType":"StructuredDocumentation","src":"76148:31:56","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"76193:4:56","parameters":{"id":31286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31283,"mutability":"mutable","name":"wallet","nameLocation":"76214:6:56","nodeType":"VariableDeclaration","scope":31294,"src":"76198:22:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$28194_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":31282,"nodeType":"UserDefinedTypeName","pathNode":{"id":31281,"name":"Wallet","nameLocations":["76198:6:56"],"nodeType":"IdentifierPath","referencedDeclaration":28194,"src":"76198:6:56"},"referencedDeclaration":28194,"src":"76198:6:56","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$28194_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":31285,"mutability":"mutable","name":"digest","nameLocation":"76230:6:56","nodeType":"VariableDeclaration","scope":31294,"src":"76222:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"76222:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"76197:40:56"},"returnParameters":{"id":31293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31288,"mutability":"mutable","name":"v","nameLocation":"76262:1:56","nodeType":"VariableDeclaration","scope":31294,"src":"76256:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":31287,"name":"uint8","nodeType":"ElementaryTypeName","src":"76256:5:56","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":31290,"mutability":"mutable","name":"r","nameLocation":"76273:1:56","nodeType":"VariableDeclaration","scope":31294,"src":"76265:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"76265:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":31292,"mutability":"mutable","name":"s","nameLocation":"76284:1:56","nodeType":"VariableDeclaration","scope":31294,"src":"76276:9:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"76276:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"76255:31:56"},"scope":31327,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31302,"nodeType":"FunctionDefinition","src":"76348:80:56","nodes":[],"documentation":{"id":31295,"nodeType":"StructuredDocumentation","src":"76293:50:56","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"76357:11:56","parameters":{"id":31298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31297,"mutability":"mutable","name":"data","nameLocation":"76384:4:56","nodeType":"VariableDeclaration","scope":31302,"src":"76369:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31296,"name":"bytes","nodeType":"ElementaryTypeName","src":"76369:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"76368:21:56"},"returnParameters":{"id":31301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31302,"src":"76413:13:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31299,"name":"string","nodeType":"ElementaryTypeName","src":"76413:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76412:15:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31310,"nodeType":"FunctionDefinition","src":"76490:81:56","nodes":[],"documentation":{"id":31303,"nodeType":"StructuredDocumentation","src":"76434:51:56","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"76499:11:56","parameters":{"id":31306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31305,"mutability":"mutable","name":"data","nameLocation":"76527:4:56","nodeType":"VariableDeclaration","scope":31310,"src":"76511:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31304,"name":"string","nodeType":"ElementaryTypeName","src":"76511:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76510:22:56"},"returnParameters":{"id":31309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31310,"src":"76556:13:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31307,"name":"string","nodeType":"ElementaryTypeName","src":"76556:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76555:15:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31318,"nodeType":"FunctionDefinition","src":"76629:77:56","nodes":[],"documentation":{"id":31311,"nodeType":"StructuredDocumentation","src":"76577:47:56","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"76638:8:56","parameters":{"id":31314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31313,"mutability":"mutable","name":"data","nameLocation":"76662:4:56","nodeType":"VariableDeclaration","scope":31318,"src":"76647:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31312,"name":"bytes","nodeType":"ElementaryTypeName","src":"76647:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"76646:21:56"},"returnParameters":{"id":31317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31318,"src":"76691:13:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31315,"name":"string","nodeType":"ElementaryTypeName","src":"76691:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76690:15:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":31326,"nodeType":"FunctionDefinition","src":"76765:78:56","nodes":[],"documentation":{"id":31319,"nodeType":"StructuredDocumentation","src":"76712:48:56","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"76774:8:56","parameters":{"id":31322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31321,"mutability":"mutable","name":"data","nameLocation":"76799:4:56","nodeType":"VariableDeclaration","scope":31326,"src":"76783:20:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31320,"name":"string","nodeType":"ElementaryTypeName","src":"76783:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76782:22:56"},"returnParameters":{"id":31325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":31326,"src":"76828:13:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":31323,"name":"string","nodeType":"ElementaryTypeName","src":"76828:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76827:15:56"},"scope":31327,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":28089,"nodeType":"StructuredDocumentation","src":"184:225:56","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[31327],"name":"VmSafe","nameLocation":"419:6:56","scope":31929,"usedErrors":[],"usedEvents":[]},{"id":31928,"nodeType":"ContractDefinition","src":"77018:14386:56","nodes":[{"id":31336,"nodeType":"FunctionDefinition","src":"77178:61:56","nodes":[],"documentation":{"id":31331,"nodeType":"StructuredDocumentation","src":"77077:96:56","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"77187:10:56","parameters":{"id":31332,"nodeType":"ParameterList","parameters":[],"src":"77197:2:56"},"returnParameters":{"id":31335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31334,"mutability":"mutable","name":"forkId","nameLocation":"77231:6:56","nodeType":"VariableDeclaration","scope":31336,"src":"77223:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31333,"name":"uint256","nodeType":"ElementaryTypeName","src":"77223:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77222:16:56"},"scope":31928,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":31342,"nodeType":"FunctionDefinition","src":"77323:51:56","nodes":[],"documentation":{"id":31337,"nodeType":"StructuredDocumentation","src":"77245:73:56","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"77332:15:56","parameters":{"id":31340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31339,"mutability":"mutable","name":"account","nameLocation":"77356:7:56","nodeType":"VariableDeclaration","scope":31342,"src":"77348:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31338,"name":"address","nodeType":"ElementaryTypeName","src":"77348:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77347:17:56"},"returnParameters":{"id":31341,"nodeType":"ParameterList","parameters":[],"src":"77373:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31348,"nodeType":"FunctionDefinition","src":"77413:54:56","nodes":[],"documentation":{"id":31343,"nodeType":"StructuredDocumentation","src":"77380:28:56","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"77422:11:56","parameters":{"id":31346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31345,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"77442:14:56","nodeType":"VariableDeclaration","scope":31348,"src":"77434:22:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31344,"name":"uint256","nodeType":"ElementaryTypeName","src":"77434:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77433:24:56"},"returnParameters":{"id":31347,"nodeType":"ParameterList","parameters":[],"src":"77466:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31355,"nodeType":"FunctionDefinition","src":"77634:56:56","nodes":[],"documentation":{"id":31349,"nodeType":"StructuredDocumentation","src":"77473:156:56","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"77643:10:56","parameters":{"id":31353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31352,"mutability":"mutable","name":"hashes","nameLocation":"77673:6:56","nodeType":"VariableDeclaration","scope":31355,"src":"77654:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":31350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77654:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":31351,"nodeType":"ArrayTypeName","src":"77654:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"77653:27:56"},"returnParameters":{"id":31354,"nodeType":"ParameterList","parameters":[],"src":"77689:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31361,"nodeType":"FunctionDefinition","src":"77726:46:56","nodes":[],"documentation":{"id":31356,"nodeType":"StructuredDocumentation","src":"77696:25:56","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"77735:7:56","parameters":{"id":31359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31358,"mutability":"mutable","name":"newChainId","nameLocation":"77751:10:56","nodeType":"VariableDeclaration","scope":31361,"src":"77743:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31357,"name":"uint256","nodeType":"ElementaryTypeName","src":"77743:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77742:20:56"},"returnParameters":{"id":31360,"nodeType":"ParameterList","parameters":[],"src":"77771:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31365,"nodeType":"FunctionDefinition","src":"77811:37:56","nodes":[],"documentation":{"id":31362,"nodeType":"StructuredDocumentation","src":"77778:28:56","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"77820:16:56","parameters":{"id":31363,"nodeType":"ParameterList","parameters":[],"src":"77836:2:56"},"returnParameters":{"id":31364,"nodeType":"ParameterList","parameters":[],"src":"77847:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31371,"nodeType":"FunctionDefinition","src":"77885:48:56","nodes":[],"documentation":{"id":31366,"nodeType":"StructuredDocumentation","src":"77854:26:56","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"77894:8:56","parameters":{"id":31369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31368,"mutability":"mutable","name":"newCoinbase","nameLocation":"77911:11:56","nodeType":"VariableDeclaration","scope":31371,"src":"77903:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31367,"name":"address","nodeType":"ElementaryTypeName","src":"77903:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77902:21:56"},"returnParameters":{"id":31370,"nodeType":"ParameterList","parameters":[],"src":"77932:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31379,"nodeType":"FunctionDefinition","src":"78053:82:56","nodes":[],"documentation":{"id":31372,"nodeType":"StructuredDocumentation","src":"77939:109:56","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"78062:10:56","parameters":{"id":31375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31374,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78089:10:56","nodeType":"VariableDeclaration","scope":31379,"src":"78073:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31373,"name":"string","nodeType":"ElementaryTypeName","src":"78073:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78072:28:56"},"returnParameters":{"id":31378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31377,"mutability":"mutable","name":"forkId","nameLocation":"78127:6:56","nodeType":"VariableDeclaration","scope":31379,"src":"78119:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31376,"name":"uint256","nodeType":"ElementaryTypeName","src":"78119:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78118:16:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31389,"nodeType":"FunctionDefinition","src":"78242:103:56","nodes":[],"documentation":{"id":31380,"nodeType":"StructuredDocumentation","src":"78141:96:56","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"78251:10:56","parameters":{"id":31385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31382,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78278:10:56","nodeType":"VariableDeclaration","scope":31389,"src":"78262:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31381,"name":"string","nodeType":"ElementaryTypeName","src":"78262:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31384,"mutability":"mutable","name":"blockNumber","nameLocation":"78298:11:56","nodeType":"VariableDeclaration","scope":31389,"src":"78290:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31383,"name":"uint256","nodeType":"ElementaryTypeName","src":"78290:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78261:49:56"},"returnParameters":{"id":31388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31387,"mutability":"mutable","name":"forkId","nameLocation":"78337:6:56","nodeType":"VariableDeclaration","scope":31389,"src":"78329:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31386,"name":"uint256","nodeType":"ElementaryTypeName","src":"78329:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78328:16:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31399,"nodeType":"FunctionDefinition","src":"78570:98:56","nodes":[],"documentation":{"id":31390,"nodeType":"StructuredDocumentation","src":"78351:214:56","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"78579:10:56","parameters":{"id":31395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31392,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78606:10:56","nodeType":"VariableDeclaration","scope":31399,"src":"78590:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31391,"name":"string","nodeType":"ElementaryTypeName","src":"78590:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31394,"mutability":"mutable","name":"txHash","nameLocation":"78626:6:56","nodeType":"VariableDeclaration","scope":31399,"src":"78618:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78618:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78589:44:56"},"returnParameters":{"id":31398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31397,"mutability":"mutable","name":"forkId","nameLocation":"78660:6:56","nodeType":"VariableDeclaration","scope":31399,"src":"78652:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31396,"name":"uint256","nodeType":"ElementaryTypeName","src":"78652:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78651:16:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31407,"nodeType":"FunctionDefinition","src":"78803:88:56","nodes":[],"documentation":{"id":31400,"nodeType":"StructuredDocumentation","src":"78674:124:56","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78812:16:56","parameters":{"id":31403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31402,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78845:10:56","nodeType":"VariableDeclaration","scope":31407,"src":"78829:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31401,"name":"string","nodeType":"ElementaryTypeName","src":"78829:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78828:28:56"},"returnParameters":{"id":31406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31405,"mutability":"mutable","name":"forkId","nameLocation":"78883:6:56","nodeType":"VariableDeclaration","scope":31407,"src":"78875:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31404,"name":"uint256","nodeType":"ElementaryTypeName","src":"78875:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78874:16:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31417,"nodeType":"FunctionDefinition","src":"79015:109:56","nodes":[],"documentation":{"id":31408,"nodeType":"StructuredDocumentation","src":"78897:113:56","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"79024:16:56","parameters":{"id":31413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31410,"mutability":"mutable","name":"urlOrAlias","nameLocation":"79057:10:56","nodeType":"VariableDeclaration","scope":31417,"src":"79041:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31409,"name":"string","nodeType":"ElementaryTypeName","src":"79041:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31412,"mutability":"mutable","name":"blockNumber","nameLocation":"79077:11:56","nodeType":"VariableDeclaration","scope":31417,"src":"79069:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31411,"name":"uint256","nodeType":"ElementaryTypeName","src":"79069:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79040:49:56"},"returnParameters":{"id":31416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31415,"mutability":"mutable","name":"forkId","nameLocation":"79116:6:56","nodeType":"VariableDeclaration","scope":31417,"src":"79108:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31414,"name":"uint256","nodeType":"ElementaryTypeName","src":"79108:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79107:16:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31427,"nodeType":"FunctionDefinition","src":"79360:104:56","nodes":[],"documentation":{"id":31418,"nodeType":"StructuredDocumentation","src":"79130:225:56","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"79369:16:56","parameters":{"id":31423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31420,"mutability":"mutable","name":"urlOrAlias","nameLocation":"79402:10:56","nodeType":"VariableDeclaration","scope":31427,"src":"79386:26:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31419,"name":"string","nodeType":"ElementaryTypeName","src":"79386:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31422,"mutability":"mutable","name":"txHash","nameLocation":"79422:6:56","nodeType":"VariableDeclaration","scope":31427,"src":"79414:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79414:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"79385:44:56"},"returnParameters":{"id":31426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31425,"mutability":"mutable","name":"forkId","nameLocation":"79456:6:56","nodeType":"VariableDeclaration","scope":31427,"src":"79448:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31424,"name":"uint256","nodeType":"ElementaryTypeName","src":"79448:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79447:16:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31435,"nodeType":"FunctionDefinition","src":"79504:60:56","nodes":[],"documentation":{"id":31428,"nodeType":"StructuredDocumentation","src":"79470:29:56","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"79513:4:56","parameters":{"id":31433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31430,"mutability":"mutable","name":"account","nameLocation":"79526:7:56","nodeType":"VariableDeclaration","scope":31435,"src":"79518:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31429,"name":"address","nodeType":"ElementaryTypeName","src":"79518:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31432,"mutability":"mutable","name":"newBalance","nameLocation":"79543:10:56","nodeType":"VariableDeclaration","scope":31435,"src":"79535:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31431,"name":"uint256","nodeType":"ElementaryTypeName","src":"79535:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79517:37:56"},"returnParameters":{"id":31434,"nodeType":"ParameterList","parameters":[],"src":"79563:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31443,"nodeType":"FunctionDefinition","src":"79802:76:56","nodes":[],"documentation":{"id":31436,"nodeType":"StructuredDocumentation","src":"79570:227:56","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"79811:14:56","parameters":{"id":31439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31438,"mutability":"mutable","name":"snapshotId","nameLocation":"79834:10:56","nodeType":"VariableDeclaration","scope":31443,"src":"79826:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31437,"name":"uint256","nodeType":"ElementaryTypeName","src":"79826:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79825:20:56"},"returnParameters":{"id":31442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31441,"mutability":"mutable","name":"success","nameLocation":"79869:7:56","nodeType":"VariableDeclaration","scope":31443,"src":"79864:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31440,"name":"bool","nodeType":"ElementaryTypeName","src":"79864:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"79863:14:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31447,"nodeType":"FunctionDefinition","src":"79950:36:56","nodes":[],"documentation":{"id":31444,"nodeType":"StructuredDocumentation","src":"79884:61:56","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"79959:15:56","parameters":{"id":31445,"nodeType":"ParameterList","parameters":[],"src":"79974:2:56"},"returnParameters":{"id":31446,"nodeType":"ParameterList","parameters":[],"src":"79985:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31453,"nodeType":"FunctionDefinition","src":"80162:52:56","nodes":[],"documentation":{"id":31448,"nodeType":"StructuredDocumentation","src":"79992:165:56","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"80171:10:56","parameters":{"id":31451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31450,"mutability":"mutable","name":"newDifficulty","nameLocation":"80190:13:56","nodeType":"VariableDeclaration","scope":31453,"src":"80182:21:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31449,"name":"uint256","nodeType":"ElementaryTypeName","src":"80182:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80181:23:56"},"returnParameters":{"id":31452,"nodeType":"ParameterList","parameters":[],"src":"80213:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31459,"nodeType":"FunctionDefinition","src":"80273:61:56","nodes":[],"documentation":{"id":31454,"nodeType":"StructuredDocumentation","src":"80220:48:56","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"80282:9:56","parameters":{"id":31457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31456,"mutability":"mutable","name":"pathToStateJson","nameLocation":"80308:15:56","nodeType":"VariableDeclaration","scope":31459,"src":"80292:31:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31455,"name":"string","nodeType":"ElementaryTypeName","src":"80292:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80291:33:56"},"returnParameters":{"id":31458,"nodeType":"ParameterList","parameters":[],"src":"80333:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31467,"nodeType":"FunctionDefinition","src":"80371:74:56","nodes":[],"documentation":{"id":31460,"nodeType":"StructuredDocumentation","src":"80340:26:56","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"80380:4:56","parameters":{"id":31465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31462,"mutability":"mutable","name":"target","nameLocation":"80393:6:56","nodeType":"VariableDeclaration","scope":31467,"src":"80385:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31461,"name":"address","nodeType":"ElementaryTypeName","src":"80385:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31464,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"80416:18:56","nodeType":"VariableDeclaration","scope":31467,"src":"80401:33:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31463,"name":"bytes","nodeType":"ElementaryTypeName","src":"80401:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"80384:51:56"},"returnParameters":{"id":31466,"nodeType":"ParameterList","parameters":[],"src":"80444:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31473,"nodeType":"FunctionDefinition","src":"80481:42:56","nodes":[],"documentation":{"id":31468,"nodeType":"StructuredDocumentation","src":"80451:25:56","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"80490:3:56","parameters":{"id":31471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31470,"mutability":"mutable","name":"newBasefee","nameLocation":"80502:10:56","nodeType":"VariableDeclaration","scope":31473,"src":"80494:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31469,"name":"uint256","nodeType":"ElementaryTypeName","src":"80494:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80493:20:56"},"returnParameters":{"id":31472,"nodeType":"ParameterList","parameters":[],"src":"80522:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31480,"nodeType":"FunctionDefinition","src":"80701:73:56","nodes":[],"documentation":{"id":31474,"nodeType":"StructuredDocumentation","src":"80529:167:56","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"80710:13:56","parameters":{"id":31475,"nodeType":"ParameterList","parameters":[],"src":"80723:2:56"},"returnParameters":{"id":31479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31478,"mutability":"mutable","name":"hashes","nameLocation":"80766:6:56","nodeType":"VariableDeclaration","scope":31480,"src":"80749:23:56","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":31476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80749:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":31477,"nodeType":"ArrayTypeName","src":"80749:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"80748:25:56"},"scope":31928,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":31488,"nodeType":"FunctionDefinition","src":"80841:79:56","nodes":[],"documentation":{"id":31481,"nodeType":"StructuredDocumentation","src":"80780:56:56","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"80850:12:56","parameters":{"id":31484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31483,"mutability":"mutable","name":"account","nameLocation":"80871:7:56","nodeType":"VariableDeclaration","scope":31488,"src":"80863:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31482,"name":"address","nodeType":"ElementaryTypeName","src":"80863:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80862:17:56"},"returnParameters":{"id":31487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31486,"mutability":"mutable","name":"persistent","nameLocation":"80908:10:56","nodeType":"VariableDeclaration","scope":31488,"src":"80903:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31485,"name":"bool","nodeType":"ElementaryTypeName","src":"80903:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"80902:17:56"},"scope":31928,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":31494,"nodeType":"FunctionDefinition","src":"81001:63:56","nodes":[],"documentation":{"id":31489,"nodeType":"StructuredDocumentation","src":"80926:70:56","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"81010:10:56","parameters":{"id":31492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31491,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"81037:16:56","nodeType":"VariableDeclaration","scope":31494,"src":"81021:32:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":31490,"name":"string","nodeType":"ElementaryTypeName","src":"81021:6:56","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81020:34:56"},"returnParameters":{"id":31493,"nodeType":"ParameterList","parameters":[],"src":"81063:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31500,"nodeType":"FunctionDefinition","src":"81267:50:56","nodes":[],"documentation":{"id":31495,"nodeType":"StructuredDocumentation","src":"81070:192:56","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"81276:14:56","parameters":{"id":31498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31497,"mutability":"mutable","name":"account","nameLocation":"81299:7:56","nodeType":"VariableDeclaration","scope":31500,"src":"81291:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31496,"name":"address","nodeType":"ElementaryTypeName","src":"81291:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81290:17:56"},"returnParameters":{"id":31499,"nodeType":"ParameterList","parameters":[],"src":"81316:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31508,"nodeType":"FunctionDefinition","src":"81362:69:56","nodes":[],"documentation":{"id":31501,"nodeType":"StructuredDocumentation","src":"81323:34:56","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"81371:14:56","parameters":{"id":31506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31503,"mutability":"mutable","name":"account0","nameLocation":"81394:8:56","nodeType":"VariableDeclaration","scope":31508,"src":"81386:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31502,"name":"address","nodeType":"ElementaryTypeName","src":"81386:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31505,"mutability":"mutable","name":"account1","nameLocation":"81412:8:56","nodeType":"VariableDeclaration","scope":31508,"src":"81404:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31504,"name":"address","nodeType":"ElementaryTypeName","src":"81404:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81385:36:56"},"returnParameters":{"id":31507,"nodeType":"ParameterList","parameters":[],"src":"81430:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31518,"nodeType":"FunctionDefinition","src":"81476:87:56","nodes":[],"documentation":{"id":31509,"nodeType":"StructuredDocumentation","src":"81437:34:56","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"81485:14:56","parameters":{"id":31516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31511,"mutability":"mutable","name":"account0","nameLocation":"81508:8:56","nodeType":"VariableDeclaration","scope":31518,"src":"81500:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31510,"name":"address","nodeType":"ElementaryTypeName","src":"81500:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31513,"mutability":"mutable","name":"account1","nameLocation":"81526:8:56","nodeType":"VariableDeclaration","scope":31518,"src":"81518:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31512,"name":"address","nodeType":"ElementaryTypeName","src":"81518:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31515,"mutability":"mutable","name":"account2","nameLocation":"81544:8:56","nodeType":"VariableDeclaration","scope":31518,"src":"81536:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31514,"name":"address","nodeType":"ElementaryTypeName","src":"81536:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"81499:54:56"},"returnParameters":{"id":31517,"nodeType":"ParameterList","parameters":[],"src":"81562:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31525,"nodeType":"FunctionDefinition","src":"81608:62:56","nodes":[],"documentation":{"id":31519,"nodeType":"StructuredDocumentation","src":"81569:34:56","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"81617:14:56","parameters":{"id":31523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31522,"mutability":"mutable","name":"accounts","nameLocation":"81651:8:56","nodeType":"VariableDeclaration","scope":31525,"src":"81632:27:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":31520,"name":"address","nodeType":"ElementaryTypeName","src":"81632:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":31521,"nodeType":"ArrayTypeName","src":"81632:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"81631:29:56"},"returnParameters":{"id":31524,"nodeType":"ParameterList","parameters":[],"src":"81669:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31535,"nodeType":"FunctionDefinition","src":"81741:97:56","nodes":[],"documentation":{"id":31526,"nodeType":"StructuredDocumentation","src":"81676:60:56","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"81750:14:56","parameters":{"id":31533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31528,"mutability":"mutable","name":"callee","nameLocation":"81773:6:56","nodeType":"VariableDeclaration","scope":31535,"src":"81765:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31527,"name":"address","nodeType":"ElementaryTypeName","src":"81765:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31530,"mutability":"mutable","name":"data","nameLocation":"81796:4:56","nodeType":"VariableDeclaration","scope":31535,"src":"81781:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31529,"name":"bytes","nodeType":"ElementaryTypeName","src":"81781:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":31532,"mutability":"mutable","name":"revertData","nameLocation":"81817:10:56","nodeType":"VariableDeclaration","scope":31535,"src":"81802:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31531,"name":"bytes","nodeType":"ElementaryTypeName","src":"81802:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81764:64:56"},"returnParameters":{"id":31534,"nodeType":"ParameterList","parameters":[],"src":"81837:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31547,"nodeType":"FunctionDefinition","src":"81938:123:56","nodes":[],"documentation":{"id":31536,"nodeType":"StructuredDocumentation","src":"81844:89:56","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"81947:14:56","parameters":{"id":31545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31538,"mutability":"mutable","name":"callee","nameLocation":"81970:6:56","nodeType":"VariableDeclaration","scope":31547,"src":"81962:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31537,"name":"address","nodeType":"ElementaryTypeName","src":"81962:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31540,"mutability":"mutable","name":"msgValue","nameLocation":"81986:8:56","nodeType":"VariableDeclaration","scope":31547,"src":"81978:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31539,"name":"uint256","nodeType":"ElementaryTypeName","src":"81978:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31542,"mutability":"mutable","name":"data","nameLocation":"82011:4:56","nodeType":"VariableDeclaration","scope":31547,"src":"81996:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31541,"name":"bytes","nodeType":"ElementaryTypeName","src":"81996:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":31544,"mutability":"mutable","name":"revertData","nameLocation":"82032:10:56","nodeType":"VariableDeclaration","scope":31547,"src":"82017:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31543,"name":"bytes","nodeType":"ElementaryTypeName","src":"82017:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81961:82:56"},"returnParameters":{"id":31546,"nodeType":"ParameterList","parameters":[],"src":"82060:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31557,"nodeType":"FunctionDefinition","src":"82321:91:56","nodes":[],"documentation":{"id":31548,"nodeType":"StructuredDocumentation","src":"82067:249:56","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"82330:8:56","parameters":{"id":31555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31550,"mutability":"mutable","name":"callee","nameLocation":"82347:6:56","nodeType":"VariableDeclaration","scope":31557,"src":"82339:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31549,"name":"address","nodeType":"ElementaryTypeName","src":"82339:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31552,"mutability":"mutable","name":"data","nameLocation":"82370:4:56","nodeType":"VariableDeclaration","scope":31557,"src":"82355:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31551,"name":"bytes","nodeType":"ElementaryTypeName","src":"82355:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":31554,"mutability":"mutable","name":"returnData","nameLocation":"82391:10:56","nodeType":"VariableDeclaration","scope":31557,"src":"82376:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31553,"name":"bytes","nodeType":"ElementaryTypeName","src":"82376:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82338:64:56"},"returnParameters":{"id":31556,"nodeType":"ParameterList","parameters":[],"src":"82411:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31569,"nodeType":"FunctionDefinition","src":"82587:109:56","nodes":[],"documentation":{"id":31558,"nodeType":"StructuredDocumentation","src":"82418:164:56","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"82596:8:56","parameters":{"id":31567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31560,"mutability":"mutable","name":"callee","nameLocation":"82613:6:56","nodeType":"VariableDeclaration","scope":31569,"src":"82605:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31559,"name":"address","nodeType":"ElementaryTypeName","src":"82605:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31562,"mutability":"mutable","name":"msgValue","nameLocation":"82629:8:56","nodeType":"VariableDeclaration","scope":31569,"src":"82621:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31561,"name":"uint256","nodeType":"ElementaryTypeName","src":"82621:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31564,"mutability":"mutable","name":"data","nameLocation":"82654:4:56","nodeType":"VariableDeclaration","scope":31569,"src":"82639:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31563,"name":"bytes","nodeType":"ElementaryTypeName","src":"82639:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":31566,"mutability":"mutable","name":"returnData","nameLocation":"82675:10:56","nodeType":"VariableDeclaration","scope":31569,"src":"82660:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31565,"name":"bytes","nodeType":"ElementaryTypeName","src":"82660:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82604:82:56"},"returnParameters":{"id":31568,"nodeType":"ParameterList","parameters":[],"src":"82695:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31575,"nodeType":"FunctionDefinition","src":"82771:43:56","nodes":[],"documentation":{"id":31570,"nodeType":"StructuredDocumentation","src":"82702:64:56","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"82780:5:56","parameters":{"id":31573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31572,"mutability":"mutable","name":"msgSender","nameLocation":"82794:9:56","nodeType":"VariableDeclaration","scope":31575,"src":"82786:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31571,"name":"address","nodeType":"ElementaryTypeName","src":"82786:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82785:19:56"},"returnParameters":{"id":31574,"nodeType":"ParameterList","parameters":[],"src":"82813:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31583,"nodeType":"FunctionDefinition","src":"82933:61:56","nodes":[],"documentation":{"id":31576,"nodeType":"StructuredDocumentation","src":"82820:108:56","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"82942:5:56","parameters":{"id":31581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31578,"mutability":"mutable","name":"msgSender","nameLocation":"82956:9:56","nodeType":"VariableDeclaration","scope":31583,"src":"82948:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31577,"name":"address","nodeType":"ElementaryTypeName","src":"82948:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31580,"mutability":"mutable","name":"txOrigin","nameLocation":"82975:8:56","nodeType":"VariableDeclaration","scope":31583,"src":"82967:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31579,"name":"address","nodeType":"ElementaryTypeName","src":"82967:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82947:37:56"},"returnParameters":{"id":31582,"nodeType":"ParameterList","parameters":[],"src":"82993:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31589,"nodeType":"FunctionDefinition","src":"83171:52:56","nodes":[],"documentation":{"id":31584,"nodeType":"StructuredDocumentation","src":"83000:166:56","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"83180:10:56","parameters":{"id":31587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31586,"mutability":"mutable","name":"newPrevrandao","nameLocation":"83199:13:56","nodeType":"VariableDeclaration","scope":31589,"src":"83191:21:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"83191:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"83190:23:56"},"returnParameters":{"id":31588,"nodeType":"ParameterList","parameters":[],"src":"83222:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31595,"nodeType":"FunctionDefinition","src":"83400:52:56","nodes":[],"documentation":{"id":31590,"nodeType":"StructuredDocumentation","src":"83229:166:56","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"83409:10:56","parameters":{"id":31593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31592,"mutability":"mutable","name":"newPrevrandao","nameLocation":"83428:13:56","nodeType":"VariableDeclaration","scope":31595,"src":"83420:21:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31591,"name":"uint256","nodeType":"ElementaryTypeName","src":"83420:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83419:23:56"},"returnParameters":{"id":31594,"nodeType":"ParameterList","parameters":[],"src":"83451:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31606,"nodeType":"FunctionDefinition","src":"83580:101:56","nodes":[],"documentation":{"id":31596,"nodeType":"StructuredDocumentation","src":"83458:117:56","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"83589:11:56","parameters":{"id":31597,"nodeType":"ParameterList","parameters":[],"src":"83600:2:56"},"returnParameters":{"id":31605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31600,"mutability":"mutable","name":"callerMode","nameLocation":"83632:10:56","nodeType":"VariableDeclaration","scope":31606,"src":"83621:21:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$28096","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":31599,"nodeType":"UserDefinedTypeName","pathNode":{"id":31598,"name":"CallerMode","nameLocations":["83621:10:56"],"nodeType":"IdentifierPath","referencedDeclaration":28096,"src":"83621:10:56"},"referencedDeclaration":28096,"src":"83621:10:56","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$28096","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":31602,"mutability":"mutable","name":"msgSender","nameLocation":"83652:9:56","nodeType":"VariableDeclaration","scope":31606,"src":"83644:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31601,"name":"address","nodeType":"ElementaryTypeName","src":"83644:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31604,"mutability":"mutable","name":"txOrigin","nameLocation":"83671:8:56","nodeType":"VariableDeclaration","scope":31606,"src":"83663:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31603,"name":"address","nodeType":"ElementaryTypeName","src":"83663:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83620:60:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31612,"nodeType":"FunctionDefinition","src":"83769:46:56","nodes":[],"documentation":{"id":31607,"nodeType":"StructuredDocumentation","src":"83687:77:56","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"83778:10:56","parameters":{"id":31610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31609,"mutability":"mutable","name":"account","nameLocation":"83797:7:56","nodeType":"VariableDeclaration","scope":31612,"src":"83789:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31608,"name":"address","nodeType":"ElementaryTypeName","src":"83789:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83788:17:56"},"returnParameters":{"id":31611,"nodeType":"ParameterList","parameters":[],"src":"83814:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31620,"nodeType":"FunctionDefinition","src":"84158:70:56","nodes":[],"documentation":{"id":31613,"nodeType":"StructuredDocumentation","src":"83821:332:56","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"84167:8:56","parameters":{"id":31616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31615,"mutability":"mutable","name":"snapshotId","nameLocation":"84184:10:56","nodeType":"VariableDeclaration","scope":31620,"src":"84176:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31614,"name":"uint256","nodeType":"ElementaryTypeName","src":"84176:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84175:20:56"},"returnParameters":{"id":31619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31618,"mutability":"mutable","name":"success","nameLocation":"84219:7:56","nodeType":"VariableDeclaration","scope":31620,"src":"84214:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31617,"name":"bool","nodeType":"ElementaryTypeName","src":"84214:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"84213:14:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31628,"nodeType":"FunctionDefinition","src":"84511:79:56","nodes":[],"documentation":{"id":31621,"nodeType":"StructuredDocumentation","src":"84234:272:56","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"84520:17:56","parameters":{"id":31624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31623,"mutability":"mutable","name":"snapshotId","nameLocation":"84546:10:56","nodeType":"VariableDeclaration","scope":31628,"src":"84538:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31622,"name":"uint256","nodeType":"ElementaryTypeName","src":"84538:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84537:20:56"},"returnParameters":{"id":31627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31626,"mutability":"mutable","name":"success","nameLocation":"84581:7:56","nodeType":"VariableDeclaration","scope":31628,"src":"84576:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31625,"name":"bool","nodeType":"ElementaryTypeName","src":"84576:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"84575:14:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31634,"nodeType":"FunctionDefinition","src":"84687:52:56","nodes":[],"documentation":{"id":31629,"nodeType":"StructuredDocumentation","src":"84596:86:56","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"84696:16:56","parameters":{"id":31632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31631,"mutability":"mutable","name":"account","nameLocation":"84721:7:56","nodeType":"VariableDeclaration","scope":31634,"src":"84713:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31630,"name":"address","nodeType":"ElementaryTypeName","src":"84713:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84712:17:56"},"returnParameters":{"id":31633,"nodeType":"ParameterList","parameters":[],"src":"84738:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31641,"nodeType":"FunctionDefinition","src":"84786:64:56","nodes":[],"documentation":{"id":31635,"nodeType":"StructuredDocumentation","src":"84745:36:56","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"84795:16:56","parameters":{"id":31639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31638,"mutability":"mutable","name":"accounts","nameLocation":"84831:8:56","nodeType":"VariableDeclaration","scope":31641,"src":"84812:27:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":31636,"name":"address","nodeType":"ElementaryTypeName","src":"84812:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":31637,"nodeType":"ArrayTypeName","src":"84812:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"84811:29:56"},"returnParameters":{"id":31640,"nodeType":"ParameterList","parameters":[],"src":"84849:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31647,"nodeType":"FunctionDefinition","src":"84885:42:56","nodes":[],"documentation":{"id":31642,"nodeType":"StructuredDocumentation","src":"84856:24:56","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"84894:4:56","parameters":{"id":31645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31644,"mutability":"mutable","name":"newHeight","nameLocation":"84907:9:56","nodeType":"VariableDeclaration","scope":31647,"src":"84899:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31643,"name":"uint256","nodeType":"ElementaryTypeName","src":"84899:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84898:19:56"},"returnParameters":{"id":31646,"nodeType":"ParameterList","parameters":[],"src":"84926:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31653,"nodeType":"FunctionDefinition","src":"85066:48:56","nodes":[],"documentation":{"id":31648,"nodeType":"StructuredDocumentation","src":"84933:128:56","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"85075:8:56","parameters":{"id":31651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31650,"mutability":"mutable","name":"blockNumber","nameLocation":"85092:11:56","nodeType":"VariableDeclaration","scope":31653,"src":"85084:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31649,"name":"uint256","nodeType":"ElementaryTypeName","src":"85084:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85083:21:56"},"returnParameters":{"id":31652,"nodeType":"ParameterList","parameters":[],"src":"85113:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31659,"nodeType":"FunctionDefinition","src":"85329:43:56","nodes":[],"documentation":{"id":31654,"nodeType":"StructuredDocumentation","src":"85120:204:56","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"85338:8:56","parameters":{"id":31657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31656,"mutability":"mutable","name":"txHash","nameLocation":"85355:6:56","nodeType":"VariableDeclaration","scope":31659,"src":"85347:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85347:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"85346:16:56"},"returnParameters":{"id":31658,"nodeType":"ParameterList","parameters":[],"src":"85371:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31667,"nodeType":"FunctionDefinition","src":"85432:64:56","nodes":[],"documentation":{"id":31660,"nodeType":"StructuredDocumentation","src":"85378:49:56","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"85441:8:56","parameters":{"id":31665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31662,"mutability":"mutable","name":"forkId","nameLocation":"85458:6:56","nodeType":"VariableDeclaration","scope":31667,"src":"85450:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31661,"name":"uint256","nodeType":"ElementaryTypeName","src":"85450:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31664,"mutability":"mutable","name":"blockNumber","nameLocation":"85474:11:56","nodeType":"VariableDeclaration","scope":31667,"src":"85466:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31663,"name":"uint256","nodeType":"ElementaryTypeName","src":"85466:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85449:37:56"},"returnParameters":{"id":31666,"nodeType":"ParameterList","parameters":[],"src":"85495:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31675,"nodeType":"FunctionDefinition","src":"85632:59:56","nodes":[],"documentation":{"id":31668,"nodeType":"StructuredDocumentation","src":"85502:125:56","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"85641:8:56","parameters":{"id":31673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31670,"mutability":"mutable","name":"forkId","nameLocation":"85658:6:56","nodeType":"VariableDeclaration","scope":31675,"src":"85650:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31669,"name":"uint256","nodeType":"ElementaryTypeName","src":"85650:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31672,"mutability":"mutable","name":"txHash","nameLocation":"85674:6:56","nodeType":"VariableDeclaration","scope":31675,"src":"85666:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85666:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"85649:32:56"},"returnParameters":{"id":31674,"nodeType":"ParameterList","parameters":[],"src":"85690:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31681,"nodeType":"FunctionDefinition","src":"85804:45:56","nodes":[],"documentation":{"id":31676,"nodeType":"StructuredDocumentation","src":"85697:102:56","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"85813:10:56","parameters":{"id":31679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31678,"mutability":"mutable","name":"forkId","nameLocation":"85832:6:56","nodeType":"VariableDeclaration","scope":31681,"src":"85824:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31677,"name":"uint256","nodeType":"ElementaryTypeName","src":"85824:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85823:16:56"},"returnParameters":{"id":31680,"nodeType":"ParameterList","parameters":[],"src":"85848:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31689,"nodeType":"FunctionDefinition","src":"85947:61:56","nodes":[],"documentation":{"id":31682,"nodeType":"StructuredDocumentation","src":"85855:87:56","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"85956:8:56","parameters":{"id":31687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31684,"mutability":"mutable","name":"account","nameLocation":"85973:7:56","nodeType":"VariableDeclaration","scope":31689,"src":"85965:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31683,"name":"address","nodeType":"ElementaryTypeName","src":"85965:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31686,"mutability":"mutable","name":"newNonce","nameLocation":"85989:8:56","nodeType":"VariableDeclaration","scope":31689,"src":"85982:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31685,"name":"uint64","nodeType":"ElementaryTypeName","src":"85982:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85964:34:56"},"returnParameters":{"id":31688,"nodeType":"ParameterList","parameters":[],"src":"86007:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31697,"nodeType":"FunctionDefinition","src":"86074:67:56","nodes":[],"documentation":{"id":31690,"nodeType":"StructuredDocumentation","src":"86014:55:56","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"86083:14:56","parameters":{"id":31695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31692,"mutability":"mutable","name":"account","nameLocation":"86106:7:56","nodeType":"VariableDeclaration","scope":31697,"src":"86098:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31691,"name":"address","nodeType":"ElementaryTypeName","src":"86098:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31694,"mutability":"mutable","name":"newNonce","nameLocation":"86122:8:56","nodeType":"VariableDeclaration","scope":31697,"src":"86115:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31693,"name":"uint64","nodeType":"ElementaryTypeName","src":"86115:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"86097:34:56"},"returnParameters":{"id":31696,"nodeType":"ParameterList","parameters":[],"src":"86140:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31703,"nodeType":"FunctionDefinition","src":"86296:58:56","nodes":[],"documentation":{"id":31698,"nodeType":"StructuredDocumentation","src":"86147:144:56","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"86305:8:56","parameters":{"id":31699,"nodeType":"ParameterList","parameters":[],"src":"86313:2:56"},"returnParameters":{"id":31702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31701,"mutability":"mutable","name":"snapshotId","nameLocation":"86342:10:56","nodeType":"VariableDeclaration","scope":31703,"src":"86334:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31700,"name":"uint256","nodeType":"ElementaryTypeName","src":"86334:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86333:20:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31709,"nodeType":"FunctionDefinition","src":"86461:48:56","nodes":[],"documentation":{"id":31704,"nodeType":"StructuredDocumentation","src":"86360:96:56","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"86470:10:56","parameters":{"id":31707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31706,"mutability":"mutable","name":"msgSender","nameLocation":"86489:9:56","nodeType":"VariableDeclaration","scope":31709,"src":"86481:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31705,"name":"address","nodeType":"ElementaryTypeName","src":"86481:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86480:19:56"},"returnParameters":{"id":31708,"nodeType":"ParameterList","parameters":[],"src":"86508:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31717,"nodeType":"FunctionDefinition","src":"86660:66:56","nodes":[],"documentation":{"id":31710,"nodeType":"StructuredDocumentation","src":"86515:140:56","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"86669:10:56","parameters":{"id":31715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31712,"mutability":"mutable","name":"msgSender","nameLocation":"86688:9:56","nodeType":"VariableDeclaration","scope":31717,"src":"86680:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31711,"name":"address","nodeType":"ElementaryTypeName","src":"86680:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31714,"mutability":"mutable","name":"txOrigin","nameLocation":"86707:8:56","nodeType":"VariableDeclaration","scope":31717,"src":"86699:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31713,"name":"address","nodeType":"ElementaryTypeName","src":"86699:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86679:37:56"},"returnParameters":{"id":31716,"nodeType":"ParameterList","parameters":[],"src":"86725:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31721,"nodeType":"FunctionDefinition","src":"86801:30:56","nodes":[],"documentation":{"id":31718,"nodeType":"StructuredDocumentation","src":"86732:64:56","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"86810:9:56","parameters":{"id":31719,"nodeType":"ParameterList","parameters":[],"src":"86819:2:56"},"returnParameters":{"id":31720,"nodeType":"ParameterList","parameters":[],"src":"86830:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31731,"nodeType":"FunctionDefinition","src":"86889:69:56","nodes":[],"documentation":{"id":31722,"nodeType":"StructuredDocumentation","src":"86837:47:56","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"86898:5:56","parameters":{"id":31729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31724,"mutability":"mutable","name":"target","nameLocation":"86912:6:56","nodeType":"VariableDeclaration","scope":31731,"src":"86904:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31723,"name":"address","nodeType":"ElementaryTypeName","src":"86904:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31726,"mutability":"mutable","name":"slot","nameLocation":"86928:4:56","nodeType":"VariableDeclaration","scope":31731,"src":"86920:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86920:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":31728,"mutability":"mutable","name":"value","nameLocation":"86942:5:56","nodeType":"VariableDeclaration","scope":31731,"src":"86934:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86934:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86903:45:56"},"returnParameters":{"id":31730,"nodeType":"ParameterList","parameters":[],"src":"86957:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31737,"nodeType":"FunctionDefinition","src":"87061:43:56","nodes":[],"documentation":{"id":31732,"nodeType":"StructuredDocumentation","src":"86964:92:56","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"87070:8:56","parameters":{"id":31735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31734,"mutability":"mutable","name":"txHash","nameLocation":"87087:6:56","nodeType":"VariableDeclaration","scope":31737,"src":"87079:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87079:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87078:16:56"},"returnParameters":{"id":31736,"nodeType":"ParameterList","parameters":[],"src":"87103:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31745,"nodeType":"FunctionDefinition","src":"87206:59:56","nodes":[],"documentation":{"id":31738,"nodeType":"StructuredDocumentation","src":"87110:91:56","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"87215:8:56","parameters":{"id":31743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31740,"mutability":"mutable","name":"forkId","nameLocation":"87232:6:56","nodeType":"VariableDeclaration","scope":31745,"src":"87224:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31739,"name":"uint256","nodeType":"ElementaryTypeName","src":"87224:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31742,"mutability":"mutable","name":"txHash","nameLocation":"87248:6:56","nodeType":"VariableDeclaration","scope":31745,"src":"87240:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87240:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87223:32:56"},"returnParameters":{"id":31744,"nodeType":"ParameterList","parameters":[],"src":"87264:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31751,"nodeType":"FunctionDefinition","src":"87299:50:56","nodes":[],"documentation":{"id":31746,"nodeType":"StructuredDocumentation","src":"87271:23:56","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"87308:10:56","parameters":{"id":31749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31748,"mutability":"mutable","name":"newGasPrice","nameLocation":"87327:11:56","nodeType":"VariableDeclaration","scope":31751,"src":"87319:19:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31747,"name":"uint256","nodeType":"ElementaryTypeName","src":"87319:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87318:21:56"},"returnParameters":{"id":31750,"nodeType":"ParameterList","parameters":[],"src":"87348:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31757,"nodeType":"FunctionDefinition","src":"87387:45:56","nodes":[],"documentation":{"id":31752,"nodeType":"StructuredDocumentation","src":"87355:27:56","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"87396:4:56","parameters":{"id":31755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31754,"mutability":"mutable","name":"newTimestamp","nameLocation":"87409:12:56","nodeType":"VariableDeclaration","scope":31757,"src":"87401:20:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31753,"name":"uint256","nodeType":"ElementaryTypeName","src":"87401:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87400:22:56"},"returnParameters":{"id":31756,"nodeType":"ParameterList","parameters":[],"src":"87431:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31769,"nodeType":"FunctionDefinition","src":"87584:105:56","nodes":[],"documentation":{"id":31758,"nodeType":"StructuredDocumentation","src":"87472:107:56","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"87593:16:56","parameters":{"id":31767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31760,"mutability":"mutable","name":"callee","nameLocation":"87618:6:56","nodeType":"VariableDeclaration","scope":31769,"src":"87610:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31759,"name":"address","nodeType":"ElementaryTypeName","src":"87610:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31762,"mutability":"mutable","name":"msgValue","nameLocation":"87634:8:56","nodeType":"VariableDeclaration","scope":31769,"src":"87626:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31761,"name":"uint256","nodeType":"ElementaryTypeName","src":"87626:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31764,"mutability":"mutable","name":"minGas","nameLocation":"87651:6:56","nodeType":"VariableDeclaration","scope":31769,"src":"87644:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31763,"name":"uint64","nodeType":"ElementaryTypeName","src":"87644:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":31766,"mutability":"mutable","name":"data","nameLocation":"87674:4:56","nodeType":"VariableDeclaration","scope":31769,"src":"87659:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31765,"name":"bytes","nodeType":"ElementaryTypeName","src":"87659:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87609:70:56"},"returnParameters":{"id":31768,"nodeType":"ParameterList","parameters":[],"src":"87688:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31783,"nodeType":"FunctionDefinition","src":"87822:127:56","nodes":[],"documentation":{"id":31770,"nodeType":"StructuredDocumentation","src":"87695:122:56","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"87831:16:56","parameters":{"id":31781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31772,"mutability":"mutable","name":"callee","nameLocation":"87856:6:56","nodeType":"VariableDeclaration","scope":31783,"src":"87848:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31771,"name":"address","nodeType":"ElementaryTypeName","src":"87848:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31774,"mutability":"mutable","name":"msgValue","nameLocation":"87872:8:56","nodeType":"VariableDeclaration","scope":31783,"src":"87864:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31773,"name":"uint256","nodeType":"ElementaryTypeName","src":"87864:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31776,"mutability":"mutable","name":"minGas","nameLocation":"87889:6:56","nodeType":"VariableDeclaration","scope":31783,"src":"87882:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31775,"name":"uint64","nodeType":"ElementaryTypeName","src":"87882:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":31778,"mutability":"mutable","name":"data","nameLocation":"87912:4:56","nodeType":"VariableDeclaration","scope":31783,"src":"87897:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31777,"name":"bytes","nodeType":"ElementaryTypeName","src":"87897:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":31780,"mutability":"mutable","name":"count","nameLocation":"87925:5:56","nodeType":"VariableDeclaration","scope":31783,"src":"87918:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31779,"name":"uint64","nodeType":"ElementaryTypeName","src":"87918:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87847:84:56"},"returnParameters":{"id":31782,"nodeType":"ParameterList","parameters":[],"src":"87948:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31791,"nodeType":"FunctionDefinition","src":"88081:66:56","nodes":[],"documentation":{"id":31784,"nodeType":"StructuredDocumentation","src":"87955:121:56","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88090:10:56","parameters":{"id":31789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31786,"mutability":"mutable","name":"callee","nameLocation":"88109:6:56","nodeType":"VariableDeclaration","scope":31791,"src":"88101:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31785,"name":"address","nodeType":"ElementaryTypeName","src":"88101:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31788,"mutability":"mutable","name":"data","nameLocation":"88132:4:56","nodeType":"VariableDeclaration","scope":31791,"src":"88117:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31787,"name":"bytes","nodeType":"ElementaryTypeName","src":"88117:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88100:37:56"},"returnParameters":{"id":31790,"nodeType":"ParameterList","parameters":[],"src":"88146:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31801,"nodeType":"FunctionDefinition","src":"88234:80:56","nodes":[],"documentation":{"id":31792,"nodeType":"StructuredDocumentation","src":"88153:76:56","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88243:10:56","parameters":{"id":31799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31794,"mutability":"mutable","name":"callee","nameLocation":"88262:6:56","nodeType":"VariableDeclaration","scope":31801,"src":"88254:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31793,"name":"address","nodeType":"ElementaryTypeName","src":"88254:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31796,"mutability":"mutable","name":"data","nameLocation":"88285:4:56","nodeType":"VariableDeclaration","scope":31801,"src":"88270:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31795,"name":"bytes","nodeType":"ElementaryTypeName","src":"88270:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":31798,"mutability":"mutable","name":"count","nameLocation":"88298:5:56","nodeType":"VariableDeclaration","scope":31801,"src":"88291:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31797,"name":"uint64","nodeType":"ElementaryTypeName","src":"88291:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88253:51:56"},"returnParameters":{"id":31800,"nodeType":"ParameterList","parameters":[],"src":"88313:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31811,"nodeType":"FunctionDefinition","src":"88402:84:56","nodes":[],"documentation":{"id":31802,"nodeType":"StructuredDocumentation","src":"88320:77:56","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88411:10:56","parameters":{"id":31809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31804,"mutability":"mutable","name":"callee","nameLocation":"88430:6:56","nodeType":"VariableDeclaration","scope":31811,"src":"88422:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31803,"name":"address","nodeType":"ElementaryTypeName","src":"88422:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31806,"mutability":"mutable","name":"msgValue","nameLocation":"88446:8:56","nodeType":"VariableDeclaration","scope":31811,"src":"88438:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31805,"name":"uint256","nodeType":"ElementaryTypeName","src":"88438:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31808,"mutability":"mutable","name":"data","nameLocation":"88471:4:56","nodeType":"VariableDeclaration","scope":31811,"src":"88456:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31807,"name":"bytes","nodeType":"ElementaryTypeName","src":"88456:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88421:55:56"},"returnParameters":{"id":31810,"nodeType":"ParameterList","parameters":[],"src":"88485:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31823,"nodeType":"FunctionDefinition","src":"88589:98:56","nodes":[],"documentation":{"id":31812,"nodeType":"StructuredDocumentation","src":"88492:92:56","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88598:10:56","parameters":{"id":31821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31814,"mutability":"mutable","name":"callee","nameLocation":"88617:6:56","nodeType":"VariableDeclaration","scope":31823,"src":"88609:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31813,"name":"address","nodeType":"ElementaryTypeName","src":"88609:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31816,"mutability":"mutable","name":"msgValue","nameLocation":"88633:8:56","nodeType":"VariableDeclaration","scope":31823,"src":"88625:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31815,"name":"uint256","nodeType":"ElementaryTypeName","src":"88625:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31818,"mutability":"mutable","name":"data","nameLocation":"88658:4:56","nodeType":"VariableDeclaration","scope":31823,"src":"88643:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31817,"name":"bytes","nodeType":"ElementaryTypeName","src":"88643:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":31820,"mutability":"mutable","name":"count","nameLocation":"88671:5:56","nodeType":"VariableDeclaration","scope":31823,"src":"88664:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31819,"name":"uint64","nodeType":"ElementaryTypeName","src":"88664:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88608:69:56"},"returnParameters":{"id":31822,"nodeType":"ParameterList","parameters":[],"src":"88686:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31835,"nodeType":"FunctionDefinition","src":"88780:96:56","nodes":[],"documentation":{"id":31824,"nodeType":"StructuredDocumentation","src":"88693:82:56","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88789:10:56","parameters":{"id":31833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31826,"mutability":"mutable","name":"callee","nameLocation":"88808:6:56","nodeType":"VariableDeclaration","scope":31835,"src":"88800:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31825,"name":"address","nodeType":"ElementaryTypeName","src":"88800:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31828,"mutability":"mutable","name":"msgValue","nameLocation":"88824:8:56","nodeType":"VariableDeclaration","scope":31835,"src":"88816:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31827,"name":"uint256","nodeType":"ElementaryTypeName","src":"88816:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31830,"mutability":"mutable","name":"gas","nameLocation":"88841:3:56","nodeType":"VariableDeclaration","scope":31835,"src":"88834:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31829,"name":"uint64","nodeType":"ElementaryTypeName","src":"88834:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":31832,"mutability":"mutable","name":"data","nameLocation":"88861:4:56","nodeType":"VariableDeclaration","scope":31835,"src":"88846:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31831,"name":"bytes","nodeType":"ElementaryTypeName","src":"88846:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88799:67:56"},"returnParameters":{"id":31834,"nodeType":"ParameterList","parameters":[],"src":"88875:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31849,"nodeType":"FunctionDefinition","src":"88985:110:56","nodes":[],"documentation":{"id":31836,"nodeType":"StructuredDocumentation","src":"88882:98:56","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88994:10:56","parameters":{"id":31847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31838,"mutability":"mutable","name":"callee","nameLocation":"89013:6:56","nodeType":"VariableDeclaration","scope":31849,"src":"89005:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31837,"name":"address","nodeType":"ElementaryTypeName","src":"89005:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31840,"mutability":"mutable","name":"msgValue","nameLocation":"89029:8:56","nodeType":"VariableDeclaration","scope":31849,"src":"89021:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31839,"name":"uint256","nodeType":"ElementaryTypeName","src":"89021:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31842,"mutability":"mutable","name":"gas","nameLocation":"89046:3:56","nodeType":"VariableDeclaration","scope":31849,"src":"89039:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31841,"name":"uint64","nodeType":"ElementaryTypeName","src":"89039:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":31844,"mutability":"mutable","name":"data","nameLocation":"89066:4:56","nodeType":"VariableDeclaration","scope":31849,"src":"89051:19:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31843,"name":"bytes","nodeType":"ElementaryTypeName","src":"89051:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":31846,"mutability":"mutable","name":"count","nameLocation":"89079:5:56","nodeType":"VariableDeclaration","scope":31849,"src":"89072:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31845,"name":"uint64","nodeType":"ElementaryTypeName","src":"89072:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"89004:81:56"},"returnParameters":{"id":31848,"nodeType":"ParameterList","parameters":[],"src":"89094:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31861,"nodeType":"FunctionDefinition","src":"89434:99:56","nodes":[],"documentation":{"id":31850,"nodeType":"StructuredDocumentation","src":"89101:328:56","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89443:10:56","parameters":{"id":31859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31852,"mutability":"mutable","name":"checkTopic1","nameLocation":"89459:11:56","nodeType":"VariableDeclaration","scope":31861,"src":"89454:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31851,"name":"bool","nodeType":"ElementaryTypeName","src":"89454:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":31854,"mutability":"mutable","name":"checkTopic2","nameLocation":"89477:11:56","nodeType":"VariableDeclaration","scope":31861,"src":"89472:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31853,"name":"bool","nodeType":"ElementaryTypeName","src":"89472:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":31856,"mutability":"mutable","name":"checkTopic3","nameLocation":"89495:11:56","nodeType":"VariableDeclaration","scope":31861,"src":"89490:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31855,"name":"bool","nodeType":"ElementaryTypeName","src":"89490:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":31858,"mutability":"mutable","name":"checkData","nameLocation":"89513:9:56","nodeType":"VariableDeclaration","scope":31861,"src":"89508:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31857,"name":"bool","nodeType":"ElementaryTypeName","src":"89508:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"89453:70:56"},"returnParameters":{"id":31860,"nodeType":"ParameterList","parameters":[],"src":"89532:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31875,"nodeType":"FunctionDefinition","src":"89636:124:56","nodes":[],"documentation":{"id":31862,"nodeType":"StructuredDocumentation","src":"89539:92:56","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89645:10:56","parameters":{"id":31873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31864,"mutability":"mutable","name":"checkTopic1","nameLocation":"89661:11:56","nodeType":"VariableDeclaration","scope":31875,"src":"89656:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31863,"name":"bool","nodeType":"ElementaryTypeName","src":"89656:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":31866,"mutability":"mutable","name":"checkTopic2","nameLocation":"89679:11:56","nodeType":"VariableDeclaration","scope":31875,"src":"89674:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31865,"name":"bool","nodeType":"ElementaryTypeName","src":"89674:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":31868,"mutability":"mutable","name":"checkTopic3","nameLocation":"89697:11:56","nodeType":"VariableDeclaration","scope":31875,"src":"89692:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31867,"name":"bool","nodeType":"ElementaryTypeName","src":"89692:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":31870,"mutability":"mutable","name":"checkData","nameLocation":"89715:9:56","nodeType":"VariableDeclaration","scope":31875,"src":"89710:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31869,"name":"bool","nodeType":"ElementaryTypeName","src":"89710:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":31872,"mutability":"mutable","name":"emitter","nameLocation":"89734:7:56","nodeType":"VariableDeclaration","scope":31875,"src":"89726:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31871,"name":"address","nodeType":"ElementaryTypeName","src":"89726:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89655:87:56"},"returnParameters":{"id":31874,"nodeType":"ParameterList","parameters":[],"src":"89759:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31879,"nodeType":"FunctionDefinition","src":"90030:31:56","nodes":[],"documentation":{"id":31876,"nodeType":"StructuredDocumentation","src":"89766:259:56","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"90039:10:56","parameters":{"id":31877,"nodeType":"ParameterList","parameters":[],"src":"90049:2:56"},"returnParameters":{"id":31878,"nodeType":"ParameterList","parameters":[],"src":"90060:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31885,"nodeType":"FunctionDefinition","src":"90164:46:56","nodes":[],"documentation":{"id":31880,"nodeType":"StructuredDocumentation","src":"90067:92:56","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"90173:10:56","parameters":{"id":31883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31882,"mutability":"mutable","name":"emitter","nameLocation":"90192:7:56","nodeType":"VariableDeclaration","scope":31885,"src":"90184:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31881,"name":"address","nodeType":"ElementaryTypeName","src":"90184:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"90183:17:56"},"returnParameters":{"id":31884,"nodeType":"ParameterList","parameters":[],"src":"90209:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31889,"nodeType":"FunctionDefinition","src":"90276:33:56","nodes":[],"documentation":{"id":31886,"nodeType":"StructuredDocumentation","src":"90216:55:56","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"90285:12:56","parameters":{"id":31887,"nodeType":"ParameterList","parameters":[],"src":"90297:2:56"},"returnParameters":{"id":31888,"nodeType":"ParameterList","parameters":[],"src":"90308:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31895,"nodeType":"FunctionDefinition","src":"90387:50:56","nodes":[],"documentation":{"id":31890,"nodeType":"StructuredDocumentation","src":"90315:67:56","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"90396:12:56","parameters":{"id":31893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31892,"mutability":"mutable","name":"revertData","nameLocation":"90416:10:56","nodeType":"VariableDeclaration","scope":31895,"src":"90409:17:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":31891,"name":"bytes4","nodeType":"ElementaryTypeName","src":"90409:6:56","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"90408:19:56"},"returnParameters":{"id":31894,"nodeType":"ParameterList","parameters":[],"src":"90436:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31901,"nodeType":"FunctionDefinition","src":"90519:58:56","nodes":[],"documentation":{"id":31896,"nodeType":"StructuredDocumentation","src":"90443:71:56","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"90528:12:56","parameters":{"id":31899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31898,"mutability":"mutable","name":"revertData","nameLocation":"90556:10:56","nodeType":"VariableDeclaration","scope":31901,"src":"90541:25:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":31897,"name":"bytes","nodeType":"ElementaryTypeName","src":"90541:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90540:27:56"},"returnParameters":{"id":31900,"nodeType":"ParameterList","parameters":[],"src":"90576:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31909,"nodeType":"FunctionDefinition","src":"90806:59:56","nodes":[],"documentation":{"id":31902,"nodeType":"StructuredDocumentation","src":"90583:218:56","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"90815:16:56","parameters":{"id":31907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31904,"mutability":"mutable","name":"min","nameLocation":"90839:3:56","nodeType":"VariableDeclaration","scope":31909,"src":"90832:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31903,"name":"uint64","nodeType":"ElementaryTypeName","src":"90832:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":31906,"mutability":"mutable","name":"max","nameLocation":"90851:3:56","nodeType":"VariableDeclaration","scope":31909,"src":"90844:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31905,"name":"uint64","nodeType":"ElementaryTypeName","src":"90844:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90831:24:56"},"returnParameters":{"id":31908,"nodeType":"ParameterList","parameters":[],"src":"90864:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31917,"nodeType":"FunctionDefinition","src":"91107:63:56","nodes":[],"documentation":{"id":31910,"nodeType":"StructuredDocumentation","src":"90871:231:56","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"91116:20:56","parameters":{"id":31915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31912,"mutability":"mutable","name":"min","nameLocation":"91144:3:56","nodeType":"VariableDeclaration","scope":31917,"src":"91137:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31911,"name":"uint64","nodeType":"ElementaryTypeName","src":"91137:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":31914,"mutability":"mutable","name":"max","nameLocation":"91156:3:56","nodeType":"VariableDeclaration","scope":31917,"src":"91149:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31913,"name":"uint64","nodeType":"ElementaryTypeName","src":"91149:6:56","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91136:24:56"},"returnParameters":{"id":31916,"nodeType":"ParameterList","parameters":[],"src":"91169:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31923,"nodeType":"FunctionDefinition","src":"91248:38:56","nodes":[],"documentation":{"id":31918,"nodeType":"StructuredDocumentation","src":"91176:67:56","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"91257:4:56","parameters":{"id":31921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31920,"mutability":"mutable","name":"skipTest","nameLocation":"91267:8:56","nodeType":"VariableDeclaration","scope":31923,"src":"91262:13:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31919,"name":"bool","nodeType":"ElementaryTypeName","src":"91262:4:56","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"91261:15:56"},"returnParameters":{"id":31922,"nodeType":"ParameterList","parameters":[],"src":"91285:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":31927,"nodeType":"FunctionDefinition","src":"91361:41:56","nodes":[],"documentation":{"id":31924,"nodeType":"StructuredDocumentation","src":"91292:64:56","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"91370:20:56","parameters":{"id":31925,"nodeType":"ParameterList","parameters":[],"src":"91390:2:56"},"returnParameters":{"id":31926,"nodeType":"ParameterList","parameters":[],"src":"91401:0:56"},"scope":31928,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":31329,"name":"VmSafe","nameLocations":["77034:6:56"],"nodeType":"IdentifierPath","referencedDeclaration":31327,"src":"77034:6:56"},"id":31330,"nodeType":"InheritanceSpecifier","src":"77034:6:56"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":31328,"nodeType":"StructuredDocumentation","src":"76847:171:56","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[31928,31327],"name":"Vm","nameLocation":"77028:2:56","scope":31929,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":56}