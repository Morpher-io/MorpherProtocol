{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":@uniswap/v3-periphery/=lib/uniswap-v3-periphery/\",\":account-abstraction-v7/=lib/account-abstraction-v7/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts-5/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-5/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/\",\":openzeppelin-contracts-5/=lib/openzeppelin-contracts-5/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","@uniswap/v3-periphery/=lib/uniswap-v3-periphery/","account-abstraction-v7/=lib/account-abstraction-v7/contracts/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/openzeppelin-contracts-5/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-5/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/murky/","openzeppelin-contracts-5/=lib/openzeppelin-contracts-5/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":"ContextUpgradeable"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445","urls":["bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6","dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1"],"license":"MIT"},"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d","urls":["bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f","dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4"],"license":"MIT"},"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":15717,"contract":"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_bool"},{"astId":15720,"contract":"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":16955,"contract":"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"ast":{"absolutePath":"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":16957,"exportedSymbols":{"AddressUpgradeable":[16914],"ContextUpgradeable":[16956],"Initializable":[15784]},"nodeType":"SourceUnit","src":"86:1259:31","nodes":[{"id":16916,"nodeType":"PragmaDirective","src":"86:23:31","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":16917,"nodeType":"ImportDirective","src":"110:42:31","nodes":[],"absolutePath":"contracts/prev/contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":16957,"sourceUnit":15785,"symbolAliases":[],"unitAlias":""},{"id":16956,"nodeType":"ContractDefinition","src":"651:693:31","nodes":[{"id":16926,"nodeType":"FunctionDefinition","src":"711:59:31","nodes":[],"body":{"id":16925,"nodeType":"Block","src":"763:7:31","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":16923,"kind":"modifierInvocation","modifierName":{"id":16922,"name":"onlyInitializing","nameLocations":["746:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":15768,"src":"746:16:31"},"nodeType":"ModifierInvocation","src":"746:16:31"}],"name":"__Context_init","nameLocation":"720:14:31","parameters":{"id":16921,"nodeType":"ParameterList","parameters":[],"src":"734:2:31"},"returnParameters":{"id":16924,"nodeType":"ParameterList","parameters":[],"src":"763:0:31"},"scope":16956,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":16932,"nodeType":"FunctionDefinition","src":"776:69:31","nodes":[],"body":{"id":16931,"nodeType":"Block","src":"838:7:31","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":16929,"kind":"modifierInvocation","modifierName":{"id":16928,"name":"onlyInitializing","nameLocations":["821:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":15768,"src":"821:16:31"},"nodeType":"ModifierInvocation","src":"821:16:31"}],"name":"__Context_init_unchained","nameLocation":"785:24:31","parameters":{"id":16927,"nodeType":"ParameterList","parameters":[],"src":"809:2:31"},"returnParameters":{"id":16930,"nodeType":"ParameterList","parameters":[],"src":"838:0:31"},"scope":16956,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":16941,"nodeType":"FunctionDefinition","src":"850:96:31","nodes":[],"body":{"id":16940,"nodeType":"Block","src":"912:34:31","nodes":[],"statements":[{"expression":{"expression":{"id":16937,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":16938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:31","memberName":"sender","nodeType":"MemberAccess","src":"929:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":16936,"id":16939,"nodeType":"Return","src":"922:17:31"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:31","parameters":{"id":16933,"nodeType":"ParameterList","parameters":[],"src":"869:2:31"},"returnParameters":{"id":16936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16941,"src":"903:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16934,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:31"},"scope":16956,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":16950,"nodeType":"FunctionDefinition","src":"952:99:31","nodes":[],"body":{"id":16949,"nodeType":"Block","src":"1019:32:31","nodes":[],"statements":[{"expression":{"expression":{"id":16946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":16947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:31","memberName":"data","nodeType":"MemberAccess","src":"1036:8:31","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":16945,"id":16948,"nodeType":"Return","src":"1029:15:31"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:31","parameters":{"id":16942,"nodeType":"ParameterList","parameters":[],"src":"969:2:31"},"returnParameters":{"id":16945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16950,"src":"1003:14:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16943,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:31"},"scope":16956,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":16955,"nodeType":"VariableDeclaration","src":"1316:25:31","nodes":[],"constant":false,"documentation":{"id":16951,"nodeType":"StructuredDocumentation","src":"1057:254:31","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"1336:5:31","scope":16956,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":16952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16954,"length":{"hexValue":"3530","id":16953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:31","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":16919,"name":"Initializable","nameLocations":["691:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":15784,"src":"691:13:31"},"id":16920,"nodeType":"InheritanceSpecifier","src":"691:13:31"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":16918,"nodeType":"StructuredDocumentation","src":"154:496:31","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[16956,15784],"name":"ContextUpgradeable","nameLocation":"669:18:31","scope":16957,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":31}