{"abi":[{"type":"function","name":"addStake","inputs":[{"name":"unstakeDelaySec","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"deposit","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"entryPoint","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEntryPoint"}],"stateMutability":"view"},{"type":"function","name":"getDeposit","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"postOp","inputs":[{"name":"mode","type":"uint8","internalType":"enum IPaymaster.PostOpMode"},{"name":"context","type":"bytes","internalType":"bytes"},{"name":"actualGasCost","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unlockStake","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validatePaymasterUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct UserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"callGasLimit","type":"uint256","internalType":"uint256"},{"name":"verificationGasLimit","type":"uint256","internalType":"uint256"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"maxFeePerGas","type":"uint256","internalType":"uint256"},{"name":"maxPriorityFeePerGas","type":"uint256","internalType":"uint256"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"maxCost","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"context","type":"bytes","internalType":"bytes"},{"name":"validationData","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawStake","inputs":[{"name":"withdrawAddress","type":"address","internalType":"address payable"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawTo","inputs":[{"name":"withdrawAddress","type":"address","internalType":"address payable"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. validates that the postOp is called only by the entryPoint\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":@uniswap/v3-periphery/=lib/uniswap-v3-periphery/\",\":account-abstraction-v7/=lib/account-abstraction-v7/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts-5/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-5/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/\",\":openzeppelin-contracts-5/=lib/openzeppelin-contracts-5/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":uniswap-v3-core/=lib/uniswap-v3-core/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0\",\"dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"stateMutability":"payable","type":"function","name":"addStake"},{"inputs":[],"stateMutability":"payable","type":"function","name":"deposit"},{"inputs":[],"stateMutability":"view","type":"function","name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"postOp"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unlockStake"},{"inputs":[{"internalType":"struct UserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}]},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawStake"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawTo"}],"devdoc":{"kind":"dev","methods":{"addStake(uint32)":{"params":{"unstakeDelaySec":"- the unstake delay for this paymaster. Can only be increased."}},"owner()":{"details":"Returns the address of the current owner."},"postOp(uint8,bytes,uint256)":{"params":{"actualGasCost":"- actual gas used so far (without this postOp call).","context":"- the context value returned by validatePaymasterUserOp","mode":"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"params":{"maxCost":"the maximum cost of this transaction (based on maximum gas and gas price from userOp)","userOp":"the user operation","userOpHash":"hash of the user's request data."},"returns":{"context":"value to send to a postOp      zero length to signify postOp is not required.","validationData":"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."}},"withdrawStake(address)":{"params":{"withdrawAddress":"the address to send withdrawn value."}},"withdrawTo(address,uint256)":{"params":{"amount":"to withdraw","withdrawAddress":"target to send to"}}},"version":1},"userdoc":{"kind":"user","methods":{"addStake(uint32)":{"notice":"add stake for this paymaster. This method can also carry eth value to add to the current stake."},"deposit()":{"notice":"add a deposit for this paymaster, used for paying for transaction fees"},"getDeposit()":{"notice":"return current paymaster's deposit on the entryPoint."},"postOp(uint8,bytes,uint256)":{"notice":"post-operation handler. Must verify sender is the entryPoint"},"unlockStake()":{"notice":"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"},"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"notice":"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."},"withdrawStake(address)":{"notice":"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"},"withdrawTo(address,uint256)":{"notice":"withdraw value from the deposit"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v3-core/=lib/uniswap-v3-core/","@uniswap/v3-periphery/=lib/uniswap-v3-periphery/","account-abstraction-v7/=lib/account-abstraction-v7/contracts/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/openzeppelin-contracts-5/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-5/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/murky/","openzeppelin-contracts-5/=lib/openzeppelin-contracts-5/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","uniswap-v3-core/=lib/uniswap-v3-core/","uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/account-abstraction/contracts/core/BasePaymaster.sol":"BasePaymaster"},"evmVersion":"paris","libraries":{}},"sources":{"lib/account-abstraction/contracts/core/BasePaymaster.sol":{"keccak256":"0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443","urls":["bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0","dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/core/Helpers.sol":{"keccak256":"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a","urls":["bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746","dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IAggregator.sol":{"keccak256":"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a","urls":["bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b","dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol":{"keccak256":"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8","urls":["bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf","dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/INonceManager.sol":{"keccak256":"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12","urls":["bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2","dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IPaymaster.sol":{"keccak256":"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456","urls":["bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8","dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IStakeManager.sol":{"keccak256":"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f","urls":["bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3","dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"],"license":"GPL-3.0-only"},"lib/account-abstraction/contracts/interfaces/UserOperation.sol":{"keccak256":"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c","urls":["bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c","dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"],"license":"GPL-3.0"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218","urls":["bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32","dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439","urls":["bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c","dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":62442,"contract":"lib/account-abstraction/contracts/core/BasePaymaster.sol:BasePaymaster","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"ast":{"absolutePath":"lib/account-abstraction/contracts/core/BasePaymaster.sol","id":18727,"exportedSymbols":{"BasePaymaster":[18726],"Context":[64315],"IAggregator":[18999],"IEntryPoint":[19205],"INonceManager":[19224],"IPaymaster":[19259],"IStakeManager":[19365],"Ownable":[62547],"UserOperation":[19393],"UserOperationLib":[19563],"ValidationData":[18736],"_intersectTimeRange":[18880],"_packValidationData":[18917,18955],"_parseValidationData":[18795],"calldataKeccak":[18965]},"nodeType":"SourceUnit","src":"36:4189:39","nodes":[{"id":18508,"nodeType":"PragmaDirective","src":"36:24:39","nodes":[],"literals":["solidity","^","0.8",".12"]},{"id":18509,"nodeType":"ImportDirective","src":"100:52:39","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","nameLocation":"-1:-1:-1","scope":18727,"sourceUnit":62548,"symbolAliases":[],"unitAlias":""},{"id":18510,"nodeType":"ImportDirective","src":"153:38:39","nodes":[],"absolutePath":"lib/account-abstraction/contracts/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","nameLocation":"-1:-1:-1","scope":18727,"sourceUnit":19260,"symbolAliases":[],"unitAlias":""},{"id":18511,"nodeType":"ImportDirective","src":"192:39:39","nodes":[],"absolutePath":"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","nameLocation":"-1:-1:-1","scope":18727,"sourceUnit":19206,"symbolAliases":[],"unitAlias":""},{"id":18512,"nodeType":"ImportDirective","src":"232:23:39","nodes":[],"absolutePath":"lib/account-abstraction/contracts/core/Helpers.sol","file":"./Helpers.sol","nameLocation":"-1:-1:-1","scope":18727,"sourceUnit":18966,"symbolAliases":[],"unitAlias":""},{"id":18726,"nodeType":"ContractDefinition","src":"409:3815:39","nodes":[{"id":18520,"nodeType":"VariableDeclaration","src":"471:39:39","nodes":[],"constant":false,"functionSelector":"b0d691fe","mutability":"immutable","name":"entryPoint","nameLocation":"500:10:39","scope":18726,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"},"typeName":{"id":18519,"nodeType":"UserDefinedTypeName","pathNode":{"id":18518,"name":"IEntryPoint","nameLocations":["471:11:39"],"nodeType":"IdentifierPath","referencedDeclaration":19205,"src":"471:11:39"},"referencedDeclaration":19205,"src":"471:11:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"visibility":"public"},{"id":18531,"nodeType":"FunctionDefinition","src":"517:78:39","nodes":[],"body":{"id":18530,"nodeType":"Block","src":"554:41:39","nodes":[],"statements":[{"expression":{"id":18528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":18526,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18520,"src":"564:10:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":18527,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18523,"src":"577:11:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"src":"564:24:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"id":18529,"nodeType":"ExpressionStatement","src":"564:24:39"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":18524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18523,"mutability":"mutable","name":"_entryPoint","nameLocation":"541:11:39","nodeType":"VariableDeclaration","scope":18531,"src":"529:23:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"},"typeName":{"id":18522,"nodeType":"UserDefinedTypeName","pathNode":{"id":18521,"name":"IEntryPoint","nameLocations":["529:11:39"],"nodeType":"IdentifierPath","referencedDeclaration":19205,"src":"529:11:39"},"referencedDeclaration":19205,"src":"529:11:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"528:25:39"},"returnParameters":{"id":18525,"nodeType":"ParameterList","parameters":[],"src":"554:0:39"},"scope":18726,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":18557,"nodeType":"FunctionDefinition","src":"632:290:39","nodes":[],"body":{"id":18556,"nodeType":"Block","src":"810:112:39","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":18547,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18725,"src":"821:22:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":18548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"821:24:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18549,"nodeType":"ExpressionStatement","src":"821:24:39"},{"expression":{"arguments":[{"id":18551,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18535,"src":"887:6:39","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$19393_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":18552,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18537,"src":"895:10:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":18553,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18539,"src":"907:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$19393_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":18550,"name":"_validatePaymasterUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18571,"src":"862:24:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$19393_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"}},"id":18554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"862:53:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":18546,"id":18555,"nodeType":"Return","src":"855:60:39"}]},"baseFunctions":[19247],"documentation":{"id":18532,"nodeType":"StructuredDocumentation","src":"601:26:39","text":"@inheritdoc IPaymaster"},"functionSelector":"f465c77e","implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"641:23:39","overrides":{"id":18541,"nodeType":"OverrideSpecifier","overrides":[],"src":"746:8:39"},"parameters":{"id":18540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18535,"mutability":"mutable","name":"userOp","nameLocation":"688:6:39","nodeType":"VariableDeclaration","scope":18557,"src":"665:29:39","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$19393_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":18534,"nodeType":"UserDefinedTypeName","pathNode":{"id":18533,"name":"UserOperation","nameLocations":["665:13:39"],"nodeType":"IdentifierPath","referencedDeclaration":19393,"src":"665:13:39"},"referencedDeclaration":19393,"src":"665:13:39","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$19393_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":18537,"mutability":"mutable","name":"userOpHash","nameLocation":"704:10:39","nodeType":"VariableDeclaration","scope":18557,"src":"696:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"696:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18539,"mutability":"mutable","name":"maxCost","nameLocation":"724:7:39","nodeType":"VariableDeclaration","scope":18557,"src":"716:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18538,"name":"uint256","nodeType":"ElementaryTypeName","src":"716:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"664:68:39"},"returnParameters":{"id":18546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18543,"mutability":"mutable","name":"context","nameLocation":"777:7:39","nodeType":"VariableDeclaration","scope":18557,"src":"764:20:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18542,"name":"bytes","nodeType":"ElementaryTypeName","src":"764:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18545,"mutability":"mutable","name":"validationData","nameLocation":"794:14:39","nodeType":"VariableDeclaration","scope":18557,"src":"786:22:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18544,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"763:46:39"},"scope":18726,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18571,"nodeType":"FunctionDefinition","src":"928:178:39","nodes":[],"implemented":false,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"937:24:39","parameters":{"id":18565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18560,"mutability":"mutable","name":"userOp","nameLocation":"985:6:39","nodeType":"VariableDeclaration","scope":18571,"src":"962:29:39","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$19393_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":18559,"nodeType":"UserDefinedTypeName","pathNode":{"id":18558,"name":"UserOperation","nameLocations":["962:13:39"],"nodeType":"IdentifierPath","referencedDeclaration":19393,"src":"962:13:39"},"referencedDeclaration":19393,"src":"962:13:39","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$19393_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":18562,"mutability":"mutable","name":"userOpHash","nameLocation":"1001:10:39","nodeType":"VariableDeclaration","scope":18571,"src":"993:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"993:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18564,"mutability":"mutable","name":"maxCost","nameLocation":"1021:7:39","nodeType":"VariableDeclaration","scope":18571,"src":"1013:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1013:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"961:68:39"},"returnParameters":{"id":18570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18567,"mutability":"mutable","name":"context","nameLocation":"1073:7:39","nodeType":"VariableDeclaration","scope":18571,"src":"1060:20:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18566,"name":"bytes","nodeType":"ElementaryTypeName","src":"1060:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18569,"mutability":"mutable","name":"validationData","nameLocation":"1090:14:39","nodeType":"VariableDeclaration","scope":18571,"src":"1082:22:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1059:46:39"},"scope":18726,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":18593,"nodeType":"FunctionDefinition","src":"1143:186:39","nodes":[],"body":{"id":18592,"nodeType":"Block","src":"1241:88:39","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":18583,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18725,"src":"1251:22:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":18584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1251:24:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18585,"nodeType":"ExpressionStatement","src":"1251:24:39"},{"expression":{"arguments":[{"id":18587,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18575,"src":"1293:4:39","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$19232","typeString":"enum IPaymaster.PostOpMode"}},{"id":18588,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18577,"src":"1299:7:39","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":18589,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18579,"src":"1308:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$19232","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":18586,"name":"_postOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18614,"src":"1285:7:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_PostOpMode_$19232_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":18590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1285:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18591,"nodeType":"ExpressionStatement","src":"1285:37:39"}]},"baseFunctions":[19258],"documentation":{"id":18572,"nodeType":"StructuredDocumentation","src":"1112:26:39","text":"@inheritdoc IPaymaster"},"functionSelector":"a9a23409","implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"1152:6:39","overrides":{"id":18581,"nodeType":"OverrideSpecifier","overrides":[],"src":"1232:8:39"},"parameters":{"id":18580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18575,"mutability":"mutable","name":"mode","nameLocation":"1170:4:39","nodeType":"VariableDeclaration","scope":18593,"src":"1159:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$19232","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":18574,"nodeType":"UserDefinedTypeName","pathNode":{"id":18573,"name":"PostOpMode","nameLocations":["1159:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":19232,"src":"1159:10:39"},"referencedDeclaration":19232,"src":"1159:10:39","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$19232","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":18577,"mutability":"mutable","name":"context","nameLocation":"1191:7:39","nodeType":"VariableDeclaration","scope":18593,"src":"1176:22:39","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18576,"name":"bytes","nodeType":"ElementaryTypeName","src":"1176:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18579,"mutability":"mutable","name":"actualGasCost","nameLocation":"1208:13:39","nodeType":"VariableDeclaration","scope":18593,"src":"1200:21:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1200:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1158:64:39"},"returnParameters":{"id":18582,"nodeType":"ParameterList","parameters":[],"src":"1241:0:39"},"scope":18726,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18614,"nodeType":"FunctionDefinition","src":"2089:285:39","nodes":[],"body":{"id":18613,"nodeType":"Block","src":"2187:187:39","nodes":[],"statements":[{"expression":{"components":[{"id":18604,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18597,"src":"2199:4:39","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$19232","typeString":"enum IPaymaster.PostOpMode"}},{"id":18605,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18599,"src":"2204:7:39","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":18606,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18601,"src":"2212:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":18607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2198:28:39","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_PostOpMode_$19232_$_t_bytes_calldata_ptr_$_t_uint256_$","typeString":"tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256)"}},"id":18608,"nodeType":"ExpressionStatement","src":"2198:28:39"},{"expression":{"arguments":[{"hexValue":"6d757374206f76657272696465","id":18610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2351:15:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""},"value":"must override"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""}],"id":18609,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2344:6:39","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":18611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2344:23:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18612,"nodeType":"ExpressionStatement","src":"2344:23:39"}]},"documentation":{"id":18594,"nodeType":"StructuredDocumentation","src":"1335:749:39","text":" post-operation handler.\n (verified to be called only through the entryPoint)\n @dev if subclass returns a non-empty context from validatePaymasterUserOp, it must also implement this method.\n @param mode enum with the following options:\n      opSucceeded - user operation succeeded.\n      opReverted  - user op reverted. still has to pay for gas.\n      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                       Now this is the 2nd call, after user's op was deliberately reverted.\n @param context - the context value returned by validatePaymasterUserOp\n @param actualGasCost - actual gas used so far (without this postOp call)."},"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"2098:7:39","parameters":{"id":18602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18597,"mutability":"mutable","name":"mode","nameLocation":"2117:4:39","nodeType":"VariableDeclaration","scope":18614,"src":"2106:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$19232","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":18596,"nodeType":"UserDefinedTypeName","pathNode":{"id":18595,"name":"PostOpMode","nameLocations":["2106:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":19232,"src":"2106:10:39"},"referencedDeclaration":19232,"src":"2106:10:39","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$19232","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":18599,"mutability":"mutable","name":"context","nameLocation":"2138:7:39","nodeType":"VariableDeclaration","scope":18614,"src":"2123:22:39","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18598,"name":"bytes","nodeType":"ElementaryTypeName","src":"2123:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18601,"mutability":"mutable","name":"actualGasCost","nameLocation":"2155:13:39","nodeType":"VariableDeclaration","scope":18614,"src":"2147:21:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18600,"name":"uint256","nodeType":"ElementaryTypeName","src":"2147:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2105:64:39"},"returnParameters":{"id":18603,"nodeType":"ParameterList","parameters":[],"src":"2187:0:39"},"scope":18726,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":18631,"nodeType":"FunctionDefinition","src":"2474:105:39","nodes":[],"body":{"id":18630,"nodeType":"Block","src":"2508:71:39","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":18626,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2566:4:39","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$18726","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$18726","typeString":"contract BasePaymaster"}],"id":18625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2558:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":18624,"name":"address","nodeType":"ElementaryTypeName","src":"2558:7:39","typeDescriptions":{}}},"id":18627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":18618,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18520,"src":"2518:10:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"id":18620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:9:39","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":19340,"src":"2518:20:39","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":18623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":18621,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2547:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":18622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2551:5:39","memberName":"value","nodeType":"MemberAccess","src":"2547:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2518:39:39","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":18628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:54:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18629,"nodeType":"ExpressionStatement","src":"2518:54:39"}]},"documentation":{"id":18615,"nodeType":"StructuredDocumentation","src":"2380:89:39","text":" add a deposit for this paymaster, used for paying for transaction fees"},"functionSelector":"d0e30db0","implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"2483:7:39","parameters":{"id":18616,"nodeType":"ParameterList","parameters":[],"src":"2490:2:39"},"returnParameters":{"id":18617,"nodeType":"ParameterList","parameters":[],"src":"2508:0:39"},"scope":18726,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":18649,"nodeType":"FunctionDefinition","src":"2721:149:39","nodes":[],"body":{"id":18648,"nodeType":"Block","src":"2807:63:39","nodes":[],"statements":[{"expression":{"arguments":[{"id":18644,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18634,"src":"2839:15:39","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":18645,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18636,"src":"2856:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":18641,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18520,"src":"2817:10:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"id":18643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2828:10:39","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":19364,"src":"2817:21:39","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":18646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:46:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18647,"nodeType":"ExpressionStatement","src":"2817:46:39"}]},"documentation":{"id":18632,"nodeType":"StructuredDocumentation","src":"2585:131:39","text":" withdraw value from the deposit\n @param withdrawAddress target to send to\n @param amount to withdraw"},"functionSelector":"205c2878","implemented":true,"kind":"function","modifiers":[{"id":18639,"kind":"modifierInvocation","modifierName":{"id":18638,"name":"onlyOwner","nameLocations":["2797:9:39"],"nodeType":"IdentifierPath","referencedDeclaration":62466,"src":"2797:9:39"},"nodeType":"ModifierInvocation","src":"2797:9:39"}],"name":"withdrawTo","nameLocation":"2730:10:39","parameters":{"id":18637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18634,"mutability":"mutable","name":"withdrawAddress","nameLocation":"2757:15:39","nodeType":"VariableDeclaration","scope":18649,"src":"2741:31:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":18633,"name":"address","nodeType":"ElementaryTypeName","src":"2741:15:39","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":18636,"mutability":"mutable","name":"amount","nameLocation":"2782:6:39","nodeType":"VariableDeclaration","scope":18649,"src":"2774:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18635,"name":"uint256","nodeType":"ElementaryTypeName","src":"2774:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2740:49:39"},"returnParameters":{"id":18640,"nodeType":"ParameterList","parameters":[],"src":"2807:0:39"},"scope":18726,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":18667,"nodeType":"FunctionDefinition","src":"3094:141:39","nodes":[],"body":{"id":18666,"nodeType":"Block","src":"3163:72:39","nodes":[],"statements":[{"expression":{"arguments":[{"id":18663,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18652,"src":"3212:15:39","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":18657,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18520,"src":"3173:10:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"id":18659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3184:8:39","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":19346,"src":"3173:19:39","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":18662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":18660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3201:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":18661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3205:5:39","memberName":"value","nodeType":"MemberAccess","src":"3201:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3173:38:39","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":18664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3173:55:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18665,"nodeType":"ExpressionStatement","src":"3173:55:39"}]},"documentation":{"id":18650,"nodeType":"StructuredDocumentation","src":"2875:214:39","text":" add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - the unstake delay for this paymaster. Can only be increased."},"functionSelector":"0396cb60","implemented":true,"kind":"function","modifiers":[{"id":18655,"kind":"modifierInvocation","modifierName":{"id":18654,"name":"onlyOwner","nameLocations":["3153:9:39"],"nodeType":"IdentifierPath","referencedDeclaration":62466,"src":"3153:9:39"},"nodeType":"ModifierInvocation","src":"3153:9:39"}],"name":"addStake","nameLocation":"3103:8:39","parameters":{"id":18653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18652,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"3119:15:39","nodeType":"VariableDeclaration","scope":18667,"src":"3112:22:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":18651,"name":"uint32","nodeType":"ElementaryTypeName","src":"3112:6:39","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3111:24:39"},"returnParameters":{"id":18656,"nodeType":"ParameterList","parameters":[],"src":"3163:0:39"},"scope":18726,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":18682,"nodeType":"FunctionDefinition","src":"3318:111:39","nodes":[],"body":{"id":18681,"nodeType":"Block","src":"3370:59:39","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":18677,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3416:4:39","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$18726","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$18726","typeString":"contract BasePaymaster"}],"id":18676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3408:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":18675,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:39","typeDescriptions":{}}},"id":18678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3408:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":18673,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18520,"src":"3387:10:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"id":18674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3398:9:39","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":19334,"src":"3387:20:39","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":18679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3387:35:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":18672,"id":18680,"nodeType":"Return","src":"3380:42:39"}]},"documentation":{"id":18668,"nodeType":"StructuredDocumentation","src":"3241:72:39","text":" return current paymaster's deposit on the entryPoint."},"functionSelector":"c399ec88","implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"3327:10:39","parameters":{"id":18669,"nodeType":"ParameterList","parameters":[],"src":"3337:2:39"},"returnParameters":{"id":18672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":18682,"src":"3361:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18670,"name":"uint256","nodeType":"ElementaryTypeName","src":"3361:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3360:9:39"},"scope":18726,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":18694,"nodeType":"FunctionDefinition","src":"3588:83:39","nodes":[],"body":{"id":18693,"nodeType":"Block","src":"3630:41:39","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":18688,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18520,"src":"3640:10:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"id":18690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3651:11:39","memberName":"unlockStake","nodeType":"MemberAccess","referencedDeclaration":19350,"src":"3640:22:39","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":18691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3640:24:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18692,"nodeType":"ExpressionStatement","src":"3640:24:39"}]},"documentation":{"id":18683,"nodeType":"StructuredDocumentation","src":"3435:148:39","text":" unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"},"functionSelector":"bb9fe6bf","implemented":true,"kind":"function","modifiers":[{"id":18686,"kind":"modifierInvocation","modifierName":{"id":18685,"name":"onlyOwner","nameLocations":["3620:9:39"],"nodeType":"IdentifierPath","referencedDeclaration":62466,"src":"3620:9:39"},"nodeType":"ModifierInvocation","src":"3620:9:39"}],"name":"unlockStake","nameLocation":"3597:11:39","parameters":{"id":18684,"nodeType":"ParameterList","parameters":[],"src":"3608:2:39"},"returnParameters":{"id":18687,"nodeType":"ParameterList","parameters":[],"src":"3630:0:39"},"scope":18726,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18709,"nodeType":"FunctionDefinition","src":"3890:133:39","nodes":[],"body":{"id":18708,"nodeType":"Block","src":"3965:58:39","nodes":[],"statements":[{"expression":{"arguments":[{"id":18705,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18697,"src":"4000:15:39","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":18702,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18520,"src":"3975:10:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}},"id":18704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3986:13:39","memberName":"withdrawStake","nodeType":"MemberAccess","referencedDeclaration":19356,"src":"3975:24:39","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable) external"}},"id":18706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:41:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18707,"nodeType":"ExpressionStatement","src":"3975:41:39"}]},"documentation":{"id":18695,"nodeType":"StructuredDocumentation","src":"3677:208:39","text":" withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress the address to send withdrawn value."},"functionSelector":"c23a5cea","implemented":true,"kind":"function","modifiers":[{"id":18700,"kind":"modifierInvocation","modifierName":{"id":18699,"name":"onlyOwner","nameLocations":["3955:9:39"],"nodeType":"IdentifierPath","referencedDeclaration":62466,"src":"3955:9:39"},"nodeType":"ModifierInvocation","src":"3955:9:39"}],"name":"withdrawStake","nameLocation":"3899:13:39","parameters":{"id":18698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18697,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3929:15:39","nodeType":"VariableDeclaration","scope":18709,"src":"3913:31:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":18696,"name":"address","nodeType":"ElementaryTypeName","src":"3913:15:39","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3912:33:39"},"returnParameters":{"id":18701,"nodeType":"ParameterList","parameters":[],"src":"3965:0:39"},"scope":18726,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18725,"nodeType":"FunctionDefinition","src":"4087:135:39","nodes":[],"body":{"id":18724,"nodeType":"Block","src":"4138:84:39","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":18720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":18714,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4156:3:39","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":18715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:6:39","memberName":"sender","nodeType":"MemberAccess","src":"4156:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":18718,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18520,"src":"4178:10:39","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$19205","typeString":"contract IEntryPoint"}],"id":18717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4170:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":18716,"name":"address","nodeType":"ElementaryTypeName","src":"4170:7:39","typeDescriptions":{}}},"id":18719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4170:19:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4156:33:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","id":18721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4191:23:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""},"value":"Sender not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""}],"id":18713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4148:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":18722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4148:67:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":18723,"nodeType":"ExpressionStatement","src":"4148:67:39"}]},"documentation":{"id":18710,"nodeType":"StructuredDocumentation","src":"4029:53:39","text":"validate the call is made from a valid entrypoint"},"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"4096:22:39","parameters":{"id":18711,"nodeType":"ParameterList","parameters":[],"src":"4118:2:39"},"returnParameters":{"id":18712,"nodeType":"ParameterList","parameters":[],"src":"4138:0:39"},"scope":18726,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":18514,"name":"IPaymaster","nameLocations":["444:10:39"],"nodeType":"IdentifierPath","referencedDeclaration":19259,"src":"444:10:39"},"id":18515,"nodeType":"InheritanceSpecifier","src":"444:10:39"},{"baseName":{"id":18516,"name":"Ownable","nameLocations":["456:7:39"],"nodeType":"IdentifierPath","referencedDeclaration":62547,"src":"456:7:39"},"id":18517,"nodeType":"InheritanceSpecifier","src":"456:7:39"}],"canonicalName":"BasePaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":18513,"nodeType":"StructuredDocumentation","src":"257:151:39","text":" Helper class for creating a paymaster.\n provides helper methods for staking.\n validates that the postOp is called only by the entryPoint"},"fullyImplemented":false,"linearizedBaseContracts":[18726,62547,64315,19259],"name":"BasePaymaster","nameLocation":"427:13:39","scope":18727,"usedErrors":[],"usedEvents":[62448]}],"license":"GPL-3.0"},"id":39}