{
  "contractName": "BasePaymaster",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. validates that the postOp is called only by the entryPoint\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/installed_contracts/eth-infinitism/contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"project:/installed_contracts/eth-infinitism/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0\",\"dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq\"]},\"project:/installed_contracts/eth-infinitism/contracts/core/Helpers.sol\":{\"keccak256\":\"0x4bad395ba0b408c87d0a30a76f8fd5a9915e3a531daeee23ccea0671574597a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c737b70ddf5a0e25633dc2e4db8f377943898d5f143d48b9c2aeffbe00e5b303\",\"dweb:/ipfs/QmWEVD6a372RDKyXQUXNWAohA7BGqNehBJnGi56HAmNFpm\"]},\"project:/installed_contracts/eth-infinitism/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"project:/installed_contracts/eth-infinitism/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xd0c4a53a5b0d7faa81baba9fee2233c8a6c0d2a2661238e1a02062335316a0cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c5ed2b96415dc1a0c37adc71644aed6f07bb0e8b6216a2412ba580d9e485c28b\",\"dweb:/ipfs/QmUkGMFRXWA8TZxVjH9EmdaSE8mw7ZigYURZ9k1EXKe9Bk\"]},\"project:/installed_contracts/eth-infinitism/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"project:/installed_contracts/eth-infinitism/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"project:/installed_contracts/eth-infinitism/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xf67381bb53c148ce587a74acdf576cc05d641a952180d801ac982898de30810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95a3d90bcacb354a4d00e7294954248f0b85dd957b5a1e85d665095e88956c06\",\"dweb:/ipfs/QmUeLoiGPi4RqCJ1pZRGThiEhPvtkbquzHvLuyXtQU2wZg\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n\n/* solhint-disable reason-string */\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/IPaymaster.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"./Helpers.sol\";\n\n/**\n * Helper class for creating a paymaster.\n * provides helper methods for staking.\n * validates that the postOp is called only by the entryPoint\n */\nabstract contract BasePaymaster is IPaymaster, Ownable {\n\n    IEntryPoint immutable public entryPoint;\n\n    constructor(IEntryPoint _entryPoint) {\n        entryPoint = _entryPoint;\n    }\n\n    /// @inheritdoc IPaymaster\n    function validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost)\n    external override returns (bytes memory context, uint256 validationData) {\n         _requireFromEntryPoint();\n        return _validatePaymasterUserOp(userOp, userOpHash, maxCost);\n    }\n\n    function _validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost)\n    internal virtual returns (bytes memory context, uint256 validationData);\n\n    /// @inheritdoc IPaymaster\n    function postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) external override {\n        _requireFromEntryPoint();\n        _postOp(mode, context, actualGasCost);\n    }\n\n    /**\n     * post-operation handler.\n     * (verified to be called only through the entryPoint)\n     * @dev if subclass returns a non-empty context from validatePaymasterUserOp, it must also implement this method.\n     * @param mode enum with the following options:\n     *      opSucceeded - user operation succeeded.\n     *      opReverted  - user op reverted. still has to pay for gas.\n     *      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n     *                       Now this is the 2nd call, after user's op was deliberately reverted.\n     * @param context - the context value returned by validatePaymasterUserOp\n     * @param actualGasCost - actual gas used so far (without this postOp call).\n     */\n    function _postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) internal virtual {\n\n        (mode,context,actualGasCost); // unused params\n        // subclass must override this method if validatePaymasterUserOp returns a context\n        revert(\"must override\");\n    }\n\n    /**\n     * add a deposit for this paymaster, used for paying for transaction fees\n     */\n    function deposit() public payable {\n        entryPoint.depositTo{value : msg.value}(address(this));\n    }\n\n    /**\n     * withdraw value from the deposit\n     * @param withdrawAddress target to send to\n     * @param amount to withdraw\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 amount) public onlyOwner {\n        entryPoint.withdrawTo(withdrawAddress, amount);\n    }\n    /**\n     * add stake for this paymaster.\n     * This method can also carry eth value to add to the current stake.\n     * @param unstakeDelaySec - the unstake delay for this paymaster. Can only be increased.\n     */\n    function addStake(uint32 unstakeDelaySec) external payable onlyOwner {\n        entryPoint.addStake{value : msg.value}(unstakeDelaySec);\n    }\n\n    /**\n     * return current paymaster's deposit on the entryPoint.\n     */\n    function getDeposit() public view returns (uint256) {\n        return entryPoint.balanceOf(address(this));\n    }\n\n    /**\n     * unlock the stake, in order to withdraw it.\n     * The paymaster can't serve requests once unlocked, until it calls addStake again\n     */\n    function unlockStake() external onlyOwner {\n        entryPoint.unlockStake();\n    }\n\n    /**\n     * withdraw the entire paymaster's stake.\n     * stake must be unlocked first (and then wait for the unstakeDelay to be over)\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external onlyOwner {\n        entryPoint.withdrawStake(withdrawAddress);\n    }\n\n    /// validate the call is made from a valid entrypoint\n    function _requireFromEntryPoint() internal virtual {\n        require(msg.sender == address(entryPoint), \"Sender not EntryPoint\");\n    }\n}\n",
  "sourcePath": "/Users/thomas/Projects/Morpher/MorpherProtocol/installed_contracts/eth-infinitism/contracts/core/BasePaymaster.sol",
  "ast": {
    "absolutePath": "project:/installed_contracts/eth-infinitism/contracts/core/BasePaymaster.sol",
    "exportedSymbols": {
      "BasePaymaster": [
        19086
      ],
      "Context": [
        4464
      ],
      "IAggregator": [
        19349
      ],
      "IEntryPoint": [
        19549
      ],
      "IPaymaster": [
        19584
      ],
      "IStakeManager": [
        19690
      ],
      "Ownable": [
        3589
      ],
      "UserOperation": [
        19716
      ],
      "UserOperationLib": [
        19821
      ],
      "ValidationData": [
        19096
      ],
      "_intersectTimeRange": [
        19240
      ],
      "_packValidationData": [
        19277,
        19315
      ],
      "_parseValidationData": [
        19155
      ]
    },
    "id": 19087,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18868,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:24:56"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 18869,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19087,
        "sourceUnit": 3590,
        "src": "100:52:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/installed_contracts/eth-infinitism/contracts/interfaces/IPaymaster.sol",
        "file": "../interfaces/IPaymaster.sol",
        "id": 18870,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19087,
        "sourceUnit": 19585,
        "src": "153:38:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/installed_contracts/eth-infinitism/contracts/interfaces/IEntryPoint.sol",
        "file": "../interfaces/IEntryPoint.sol",
        "id": 18871,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19087,
        "sourceUnit": 19550,
        "src": "192:39:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/installed_contracts/eth-infinitism/contracts/core/Helpers.sol",
        "file": "./Helpers.sol",
        "id": 18872,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19087,
        "sourceUnit": 19316,
        "src": "232:23:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 18874,
              "name": "IPaymaster",
              "nameLocations": [
                "444:10:56"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19584,
              "src": "444:10:56"
            },
            "id": 18875,
            "nodeType": "InheritanceSpecifier",
            "src": "444:10:56"
          },
          {
            "baseName": {
              "id": 18876,
              "name": "Ownable",
              "nameLocations": [
                "456:7:56"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3589,
              "src": "456:7:56"
            },
            "id": 18877,
            "nodeType": "InheritanceSpecifier",
            "src": "456:7:56"
          }
        ],
        "canonicalName": "BasePaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 18873,
          "nodeType": "StructuredDocumentation",
          "src": "257:151:56",
          "text": " Helper class for creating a paymaster.\n provides helper methods for staking.\n validates that the postOp is called only by the entryPoint"
        },
        "fullyImplemented": false,
        "id": 19086,
        "linearizedBaseContracts": [
          19086,
          3589,
          4464,
          19584
        ],
        "name": "BasePaymaster",
        "nameLocation": "427:13:56",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b0d691fe",
            "id": 18880,
            "mutability": "immutable",
            "name": "entryPoint",
            "nameLocation": "500:10:56",
            "nodeType": "VariableDeclaration",
            "scope": 19086,
            "src": "471:39:56",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEntryPoint_$19549",
              "typeString": "contract IEntryPoint"
            },
            "typeName": {
              "id": 18879,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18878,
                "name": "IEntryPoint",
                "nameLocations": [
                  "471:11:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 19549,
                "src": "471:11:56"
              },
              "referencedDeclaration": 19549,
              "src": "471:11:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                "typeString": "contract IEntryPoint"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 18890,
              "nodeType": "Block",
              "src": "554:41:56",
              "statements": [
                {
                  "expression": {
                    "id": 18888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18886,
                      "name": "entryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18880,
                      "src": "564:10:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                        "typeString": "contract IEntryPoint"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18887,
                      "name": "_entryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18883,
                      "src": "577:11:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                        "typeString": "contract IEntryPoint"
                      }
                    },
                    "src": "564:24:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "id": 18889,
                  "nodeType": "ExpressionStatement",
                  "src": "564:24:56"
                }
              ]
            },
            "id": 18891,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18883,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "541:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18891,
                  "src": "529:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 18882,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18881,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "529:11:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19549,
                      "src": "529:11:56"
                    },
                    "referencedDeclaration": 19549,
                    "src": "529:11:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "528:25:56"
            },
            "returnParameters": {
              "id": 18885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "554:0:56"
            },
            "scope": 19086,
            "src": "517:78:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              19572
            ],
            "body": {
              "id": 18916,
              "nodeType": "Block",
              "src": "810:112:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 18907,
                      "name": "_requireFromEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19085,
                      "src": "821:22:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 18908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "821:24:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18909,
                  "nodeType": "ExpressionStatement",
                  "src": "821:24:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18911,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18895,
                        "src": "887:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$19716_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      },
                      {
                        "id": 18912,
                        "name": "userOpHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18897,
                        "src": "895:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 18913,
                        "name": "maxCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18899,
                        "src": "907:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserOperation_$19716_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18910,
                      "name": "_validatePaymasterUserOp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18931,
                      "src": "862:24:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserOperation_$19716_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$",
                        "typeString": "function (struct UserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"
                      }
                    },
                    "id": 18914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:53:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(bytes memory,uint256)"
                    }
                  },
                  "functionReturnParameters": 18906,
                  "id": 18915,
                  "nodeType": "Return",
                  "src": "855:60:56"
                }
              ]
            },
            "documentation": {
              "id": 18892,
              "nodeType": "StructuredDocumentation",
              "src": "601:26:56",
              "text": "@inheritdoc IPaymaster"
            },
            "functionSelector": "f465c77e",
            "id": 18917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validatePaymasterUserOp",
            "nameLocation": "641:23:56",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18901,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "746:8:56"
            },
            "parameters": {
              "id": 18900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18895,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "688:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18917,
                  "src": "665:29:56",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$19716_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 18894,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18893,
                      "name": "UserOperation",
                      "nameLocations": [
                        "665:13:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19716,
                      "src": "665:13:56"
                    },
                    "referencedDeclaration": 19716,
                    "src": "665:13:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$19716_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18897,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "704:10:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18917,
                  "src": "696:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18896,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "696:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18899,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "724:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18917,
                  "src": "716:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "664:68:56"
            },
            "returnParameters": {
              "id": 18906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18903,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "777:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18917,
                  "src": "764:20:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18902,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18905,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "794:14:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18917,
                  "src": "786:22:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "763:46:56"
            },
            "scope": 19086,
            "src": "632:290:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18931,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_validatePaymasterUserOp",
            "nameLocation": "937:24:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18920,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "985:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18931,
                  "src": "962:29:56",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$19716_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 18919,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18918,
                      "name": "UserOperation",
                      "nameLocations": [
                        "962:13:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19716,
                      "src": "962:13:56"
                    },
                    "referencedDeclaration": 19716,
                    "src": "962:13:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$19716_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18922,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1001:10:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18931,
                  "src": "993:18:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18921,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18924,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "1021:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18931,
                  "src": "1013:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "961:68:56"
            },
            "returnParameters": {
              "id": 18930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18927,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1073:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18931,
                  "src": "1060:20:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18926,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18929,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "1090:14:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18931,
                  "src": "1082:22:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1059:46:56"
            },
            "scope": 19086,
            "src": "928:178:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              19583
            ],
            "body": {
              "id": 18952,
              "nodeType": "Block",
              "src": "1241:88:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 18943,
                      "name": "_requireFromEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19085,
                      "src": "1251:22:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 18944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:24:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18945,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:24:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18947,
                        "name": "mode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18935,
                        "src": "1293:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PostOpMode_$19557",
                          "typeString": "enum IPaymaster.PostOpMode"
                        }
                      },
                      {
                        "id": 18948,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18937,
                        "src": "1299:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 18949,
                        "name": "actualGasCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18939,
                        "src": "1308:13:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PostOpMode_$19557",
                          "typeString": "enum IPaymaster.PostOpMode"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18946,
                      "name": "_postOp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18974,
                      "src": "1285:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_PostOpMode_$19557_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"
                      }
                    },
                    "id": 18950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1285:37:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18951,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:37:56"
                }
              ]
            },
            "documentation": {
              "id": 18932,
              "nodeType": "StructuredDocumentation",
              "src": "1112:26:56",
              "text": "@inheritdoc IPaymaster"
            },
            "functionSelector": "a9a23409",
            "id": 18953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postOp",
            "nameLocation": "1152:6:56",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18941,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1232:8:56"
            },
            "parameters": {
              "id": 18940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18935,
                  "mutability": "mutable",
                  "name": "mode",
                  "nameLocation": "1170:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18953,
                  "src": "1159:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PostOpMode_$19557",
                    "typeString": "enum IPaymaster.PostOpMode"
                  },
                  "typeName": {
                    "id": 18934,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18933,
                      "name": "PostOpMode",
                      "nameLocations": [
                        "1159:10:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19557,
                      "src": "1159:10:56"
                    },
                    "referencedDeclaration": 19557,
                    "src": "1159:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PostOpMode_$19557",
                      "typeString": "enum IPaymaster.PostOpMode"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18937,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1191:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18953,
                  "src": "1176:22:56",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18936,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18939,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "1208:13:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18953,
                  "src": "1200:21:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1200:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1158:64:56"
            },
            "returnParameters": {
              "id": 18942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1241:0:56"
            },
            "scope": 19086,
            "src": "1143:186:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 18973,
              "nodeType": "Block",
              "src": "2187:187:56",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 18964,
                        "name": "mode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18957,
                        "src": "2199:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PostOpMode_$19557",
                          "typeString": "enum IPaymaster.PostOpMode"
                        }
                      },
                      {
                        "id": 18965,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18959,
                        "src": "2204:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 18966,
                        "name": "actualGasCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18961,
                        "src": "2212:13:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 18967,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2198:28:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_PostOpMode_$19557_$_t_bytes_calldata_ptr_$_t_uint256_$",
                      "typeString": "tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256)"
                    }
                  },
                  "id": 18968,
                  "nodeType": "ExpressionStatement",
                  "src": "2198:28:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d757374206f76657272696465",
                        "id": 18970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2351:15:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d",
                          "typeString": "literal_string \"must override\""
                        },
                        "value": "must override"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d",
                          "typeString": "literal_string \"must override\""
                        }
                      ],
                      "id": 18969,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2344:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 18971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:23:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18972,
                  "nodeType": "ExpressionStatement",
                  "src": "2344:23:56"
                }
              ]
            },
            "documentation": {
              "id": 18954,
              "nodeType": "StructuredDocumentation",
              "src": "1335:749:56",
              "text": " post-operation handler.\n (verified to be called only through the entryPoint)\n @dev if subclass returns a non-empty context from validatePaymasterUserOp, it must also implement this method.\n @param mode enum with the following options:\n      opSucceeded - user operation succeeded.\n      opReverted  - user op reverted. still has to pay for gas.\n      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                       Now this is the 2nd call, after user's op was deliberately reverted.\n @param context - the context value returned by validatePaymasterUserOp\n @param actualGasCost - actual gas used so far (without this postOp call)."
            },
            "id": 18974,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postOp",
            "nameLocation": "2098:7:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18957,
                  "mutability": "mutable",
                  "name": "mode",
                  "nameLocation": "2117:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18974,
                  "src": "2106:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PostOpMode_$19557",
                    "typeString": "enum IPaymaster.PostOpMode"
                  },
                  "typeName": {
                    "id": 18956,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18955,
                      "name": "PostOpMode",
                      "nameLocations": [
                        "2106:10:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19557,
                      "src": "2106:10:56"
                    },
                    "referencedDeclaration": 19557,
                    "src": "2106:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PostOpMode_$19557",
                      "typeString": "enum IPaymaster.PostOpMode"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18959,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "2138:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18974,
                  "src": "2123:22:56",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18958,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18961,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "2155:13:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 18974,
                  "src": "2147:21:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2105:64:56"
            },
            "returnParameters": {
              "id": 18963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2187:0:56"
            },
            "scope": 19086,
            "src": "2089:285:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18990,
              "nodeType": "Block",
              "src": "2508:71:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 18986,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2566:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BasePaymaster_$19086",
                              "typeString": "contract BasePaymaster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BasePaymaster_$19086",
                              "typeString": "contract BasePaymaster"
                            }
                          ],
                          "id": 18985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2558:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18984,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2558:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2558:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 18978,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18880,
                          "src": "2518:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                            "typeString": "contract IEntryPoint"
                          }
                        },
                        "id": 18980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2529:9:56",
                        "memberName": "depositTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19665,
                        "src": "2518:20:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 18983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 18981,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2547:3:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 18982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2551:5:56",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2547:9:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2518:39:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 18988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:54:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18989,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:54:56"
                }
              ]
            },
            "documentation": {
              "id": 18975,
              "nodeType": "StructuredDocumentation",
              "src": "2380:89:56",
              "text": " add a deposit for this paymaster, used for paying for transaction fees"
            },
            "functionSelector": "d0e30db0",
            "id": 18991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2483:7:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2490:2:56"
            },
            "returnParameters": {
              "id": 18977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2508:0:56"
            },
            "scope": 19086,
            "src": "2474:105:56",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19008,
              "nodeType": "Block",
              "src": "2807:63:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19004,
                        "name": "withdrawAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18994,
                        "src": "2839:15:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 19005,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18996,
                        "src": "2856:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 19001,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18880,
                        "src": "2817:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 19003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2828:10:56",
                      "memberName": "withdrawTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19689,
                      "src": "2817:21:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 19006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2817:46:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19007,
                  "nodeType": "ExpressionStatement",
                  "src": "2817:46:56"
                }
              ]
            },
            "documentation": {
              "id": 18992,
              "nodeType": "StructuredDocumentation",
              "src": "2585:131:56",
              "text": " withdraw value from the deposit\n @param withdrawAddress target to send to\n @param amount to withdraw"
            },
            "functionSelector": "205c2878",
            "id": 19009,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 18999,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 18998,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2797:9:56"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3508,
                  "src": "2797:9:56"
                },
                "nodeType": "ModifierInvocation",
                "src": "2797:9:56"
              }
            ],
            "name": "withdrawTo",
            "nameLocation": "2730:10:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18994,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nameLocation": "2757:15:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 19009,
                  "src": "2741:31:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 18993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2741:15:56",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18996,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2782:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 19009,
                  "src": "2774:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2740:49:56"
            },
            "returnParameters": {
              "id": 19000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2807:0:56"
            },
            "scope": 19086,
            "src": "2721:149:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19026,
              "nodeType": "Block",
              "src": "3163:72:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19023,
                        "name": "unstakeDelaySec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19012,
                        "src": "3212:15:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "id": 19017,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18880,
                          "src": "3173:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                            "typeString": "contract IEntryPoint"
                          }
                        },
                        "id": 19019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3184:8:56",
                        "memberName": "addStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19671,
                        "src": "3173:19:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint32_$returns$__$",
                          "typeString": "function (uint32) payable external"
                        }
                      },
                      "id": 19022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 19020,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3201:3:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3205:5:56",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3201:9:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3173:38:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint32_$returns$__$value",
                        "typeString": "function (uint32) payable external"
                      }
                    },
                    "id": 19024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3173:55:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19025,
                  "nodeType": "ExpressionStatement",
                  "src": "3173:55:56"
                }
              ]
            },
            "documentation": {
              "id": 19010,
              "nodeType": "StructuredDocumentation",
              "src": "2875:214:56",
              "text": " add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - the unstake delay for this paymaster. Can only be increased."
            },
            "functionSelector": "0396cb60",
            "id": 19027,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19015,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19014,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3153:9:56"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3508,
                  "src": "3153:9:56"
                },
                "nodeType": "ModifierInvocation",
                "src": "3153:9:56"
              }
            ],
            "name": "addStake",
            "nameLocation": "3103:8:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19012,
                  "mutability": "mutable",
                  "name": "unstakeDelaySec",
                  "nameLocation": "3119:15:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 19027,
                  "src": "3112:22:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 19011,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3112:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3111:24:56"
            },
            "returnParameters": {
              "id": 19016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3163:0:56"
            },
            "scope": 19086,
            "src": "3094:141:56",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19041,
              "nodeType": "Block",
              "src": "3370:59:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19037,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3416:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BasePaymaster_$19086",
                              "typeString": "contract BasePaymaster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BasePaymaster_$19086",
                              "typeString": "contract BasePaymaster"
                            }
                          ],
                          "id": 19036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3408:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 19035,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3408:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 19038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3408:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19033,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18880,
                        "src": "3387:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 19034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3398:9:56",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19659,
                      "src": "3387:20:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 19039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3387:35:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 19032,
                  "id": 19040,
                  "nodeType": "Return",
                  "src": "3380:42:56"
                }
              ]
            },
            "documentation": {
              "id": 19028,
              "nodeType": "StructuredDocumentation",
              "src": "3241:72:56",
              "text": " return current paymaster's deposit on the entryPoint."
            },
            "functionSelector": "c399ec88",
            "id": 19042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeposit",
            "nameLocation": "3327:10:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3337:2:56"
            },
            "returnParameters": {
              "id": 19032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19042,
                  "src": "3361:7:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3361:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3360:9:56"
            },
            "scope": 19086,
            "src": "3318:111:56",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19053,
              "nodeType": "Block",
              "src": "3630:41:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 19048,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18880,
                        "src": "3640:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 19050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3651:11:56",
                      "memberName": "unlockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19675,
                      "src": "3640:22:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 19051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3640:24:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19052,
                  "nodeType": "ExpressionStatement",
                  "src": "3640:24:56"
                }
              ]
            },
            "documentation": {
              "id": 19043,
              "nodeType": "StructuredDocumentation",
              "src": "3435:148:56",
              "text": " unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"
            },
            "functionSelector": "bb9fe6bf",
            "id": 19054,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19046,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19045,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3620:9:56"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3508,
                  "src": "3620:9:56"
                },
                "nodeType": "ModifierInvocation",
                "src": "3620:9:56"
              }
            ],
            "name": "unlockStake",
            "nameLocation": "3597:11:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:2:56"
            },
            "returnParameters": {
              "id": 19047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3630:0:56"
            },
            "scope": 19086,
            "src": "3588:83:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19068,
              "nodeType": "Block",
              "src": "3965:58:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19065,
                        "name": "withdrawAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19057,
                        "src": "4000:15:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 19062,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18880,
                        "src": "3975:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 19064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3986:13:56",
                      "memberName": "withdrawStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19681,
                      "src": "3975:24:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 19066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3975:41:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19067,
                  "nodeType": "ExpressionStatement",
                  "src": "3975:41:56"
                }
              ]
            },
            "documentation": {
              "id": 19055,
              "nodeType": "StructuredDocumentation",
              "src": "3677:208:56",
              "text": " withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress the address to send withdrawn value."
            },
            "functionSelector": "c23a5cea",
            "id": 19069,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19060,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19059,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3955:9:56"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3508,
                  "src": "3955:9:56"
                },
                "nodeType": "ModifierInvocation",
                "src": "3955:9:56"
              }
            ],
            "name": "withdrawStake",
            "nameLocation": "3899:13:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19057,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nameLocation": "3929:15:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 19069,
                  "src": "3913:31:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 19056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:15:56",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3912:33:56"
            },
            "returnParameters": {
              "id": 19061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3965:0:56"
            },
            "scope": 19086,
            "src": "3890:133:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19084,
              "nodeType": "Block",
              "src": "4138:84:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 19080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 19074,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4156:3:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4160:6:56",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4156:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 19078,
                              "name": "entryPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18880,
                              "src": "4178:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                                "typeString": "contract IEntryPoint"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IEntryPoint_$19549",
                                "typeString": "contract IEntryPoint"
                              }
                            ],
                            "id": 19077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4170:7:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 19076,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4170:7:56",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 19079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4170:19:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4156:33:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206e6f7420456e747279506f696e74",
                        "id": 19081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4191:23:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9",
                          "typeString": "literal_string \"Sender not EntryPoint\""
                        },
                        "value": "Sender not EntryPoint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9",
                          "typeString": "literal_string \"Sender not EntryPoint\""
                        }
                      ],
                      "id": 19073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4148:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4148:67:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19083,
                  "nodeType": "ExpressionStatement",
                  "src": "4148:67:56"
                }
              ]
            },
            "documentation": {
              "id": 19070,
              "nodeType": "StructuredDocumentation",
              "src": "4029:53:56",
              "text": "validate the call is made from a valid entrypoint"
            },
            "id": 19085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireFromEntryPoint",
            "nameLocation": "4096:22:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4118:2:56"
            },
            "returnParameters": {
              "id": 19072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4138:0:56"
            },
            "scope": 19086,
            "src": "4087:135:56",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 19087,
        "src": "409:3815:56",
        "usedErrors": [],
        "usedEvents": [
          3490
        ]
      }
    ],
    "src": "36:4189:56"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-01-16T11:09:31.282Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addStake(uint32)": {
        "params": {
          "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "postOp(uint8,bytes,uint256)": {
        "params": {
          "actualGasCost": "- actual gas used so far (without this postOp call).",
          "context": "- the context value returned by validatePaymasterUserOp",
          "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
        "params": {
          "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
          "userOp": "the user operation",
          "userOpHash": "hash of the user's request data."
        },
        "returns": {
          "context": "value to send to a postOp      zero length to signify postOp is not required.",
          "validationData": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
        }
      },
      "withdrawStake(address)": {
        "params": {
          "withdrawAddress": "the address to send withdrawn value."
        }
      },
      "withdrawTo(address,uint256)": {
        "params": {
          "amount": "to withdraw",
          "withdrawAddress": "target to send to"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addStake(uint32)": {
        "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
      },
      "deposit()": {
        "notice": "add a deposit for this paymaster, used for paying for transaction fees"
      },
      "getDeposit()": {
        "notice": "return current paymaster's deposit on the entryPoint."
      },
      "postOp(uint8,bytes,uint256)": {
        "notice": "post-operation handler. Must verify sender is the entryPoint"
      },
      "unlockStake()": {
        "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
      },
      "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
        "notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
      },
      "withdrawStake(address)": {
        "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
      },
      "withdrawTo(address,uint256)": {
        "notice": "withdraw value from the deposit"
      }
    },
    "notice": "Helper class for creating a paymaster. provides helper methods for staking. validates that the postOp is called only by the entryPoint",
    "version": 1
  }
}