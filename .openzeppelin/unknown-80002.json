{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x583DFAcBc3A3552A7DB0d4f15C0AAa39DBF1Ef89",
    "txHash": "0x249bc6a84530e827f8dbd07f69ce73dd7092a0d2ef7574ca8fa390668d0b0620"
  },
  "proxies": [
    {
      "address": "0xEF99310D56dF58b00782b714D0c1b73323d6EC74",
      "txHash": "0x2daf5ac25c4351061c4f65203a033441f2b72d4350dcb68c953f6f212c7dadd4",
      "kind": "transparent"
    },
    {
      "address": "0x4BDA6f56E36aF0fdB4D93725D3D48f8d2b8FA5BB",
      "txHash": "0x7c923d5e4dd6073bf8c6bf1cc8e686506021e5c5e3833b0c006d4e8e209b6d2e",
      "kind": "transparent"
    },
    {
      "address": "0x52A4ec77CF900E724e972b2FAC2C303EA01E5a13",
      "txHash": "0x9d44351c70d5ba1b35c1bef0067c60174f11c50d41eb9f1ada7c0024d84cd059",
      "kind": "transparent"
    },
    {
      "address": "0x85E53c17870042580939ED1b5815F00D9DeF0E02",
      "txHash": "0xcc9954a2cc7227c624bc0312186e042b61788e04bdce39e396498ba19fa7578c",
      "kind": "transparent"
    },
    {
      "address": "0x48c4A78e73994e6d350EB78F197a9408BE103B07",
      "txHash": "0xd9958ff8b9c6d4ea16b41b94c76f06b3a898b8fa13ab5c0b7fbedc9251e27f6c",
      "kind": "transparent"
    },
    {
      "address": "0x41EaECb568511A97cbc6A2B5Ee1232f216dA0923",
      "txHash": "0x7a0d75cbdbcaadcccaeeb9b8ca381a9f0fa4d3ec29c76f000b500670d29f9cbb",
      "kind": "transparent"
    },
    {
      "address": "0x0cc6f5ABD8bfce805C531217bE6B7E50D001b5A1",
      "txHash": "0xe8169fa2cf36c9b7f43bcc1d3476ee41a86bd64cd785accd85cbba5d45309093",
      "kind": "transparent"
    },
    {
      "address": "0x421e4B3eA83b6a6C778294541Ae65B17fCAAd09E",
      "txHash": "0xcdeb12d2f147f5ca9cf3527f1ed27f53e2ac772ff6c0c0b8750f00d3c5c31e68",
      "kind": "transparent"
    },
    {
      "address": "0x22F80144b1b19605AC0895677193AD03d25D35A9",
      "txHash": "0x19ddfd1b371f83cb22c4104ddd8664cccefcebabc855cf4c01e07a11db2b84eb",
      "kind": "transparent"
    },
    {
      "address": "0x862BF9df583219FfE96d036DAc856cc718A4d6A8",
      "txHash": "0x5c98e43da1cd85bd904e2e62e9dc5d3f1cf083e8b354e1709445f864cb8bc50c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "4cc352823b645415d6ba38ac0e4c9ed7159cab23840ff17dc1352a87176163ab": {
      "address": "0xbEeC90f88358f938446B8386FdD82ebb273f0dc7",
      "txHash": "0x54e07007384cdbc0ce63bf411218e66249fea51121ab6e357cd0479698f3012e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3413_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(AddressSet)3413_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)3413_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3112_storage"
              }
            ]
          },
          "t_struct(Set)3112_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e6c3c08510512bf1629d17513eaacf7db1c3c1d55af0ff5b9ca7576f6940a6c3": {
      "address": "0xd6C8f4e7d9ba3945DB1d03327b63Be155e465D28",
      "txHash": "0x0e293a434aa3173878fe911973c479d3695206bb40682b2560ce6abac752a824",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "MorpherState",
            "label": "morpherAccessControlAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:16"
          },
          {
            "contract": "MorpherState",
            "label": "morpherAirdropAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:17"
          },
          {
            "contract": "MorpherState",
            "label": "morpherBridgeAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:18"
          },
          {
            "contract": "MorpherState",
            "label": "morpherFaucetAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:19"
          },
          {
            "contract": "MorpherState",
            "label": "morpherGovernanceAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:20"
          },
          {
            "contract": "MorpherState",
            "label": "morpherMintingLimiterAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:21"
          },
          {
            "contract": "MorpherState",
            "label": "morpherOracleAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:22"
          },
          {
            "contract": "MorpherState",
            "label": "morpherStakingAddress",
            "type": "t_address_payable",
            "src": "../project:/contracts/MorpherState.sol:23"
          },
          {
            "contract": "MorpherState",
            "label": "morpherTokenAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:24"
          },
          {
            "contract": "MorpherState",
            "label": "morpherTradeEngineAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:25"
          },
          {
            "contract": "MorpherState",
            "label": "morpherUserBlockingAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:26"
          },
          {
            "contract": "MorpherState",
            "label": "morpherRewards",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:36"
          },
          {
            "contract": "MorpherState",
            "label": "maximumLeverage",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:37"
          },
          {
            "contract": "MorpherState",
            "label": "rewardBasisPoints",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:42"
          },
          {
            "contract": "MorpherState",
            "label": "lastRewardTime",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:43"
          },
          {
            "contract": "MorpherState",
            "label": "sideChainMerkleRoot",
            "type": "t_bytes32",
            "src": "../project:/contracts/MorpherState.sol:45"
          },
          {
            "contract": "MorpherState",
            "label": "sideChainMerkleRootWrittenAtTime",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:46"
          },
          {
            "contract": "MorpherState",
            "label": "mainChainWithdrawLimit24",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:49"
          },
          {
            "contract": "MorpherState",
            "label": "marketActive",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "../project:/contracts/MorpherState.sol:51"
          },
          {
            "contract": "MorpherState",
            "label": "lastRequestBlock",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MorpherState.sol:57"
          },
          {
            "contract": "MorpherState",
            "label": "numberOfRequests",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MorpherState.sol:58"
          },
          {
            "contract": "MorpherState",
            "label": "numberOfRequestsLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:59"
          },
          {
            "contract": "MorpherState",
            "label": "mainChain",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherState.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "517c1f028da3905e7b0b7530721701f13f82866ec658ceb3759ec69426723658": {
      "address": "0xb2F5019f009D8D2c40c980e4E4E9CDCa1f7492EF",
      "txHash": "0x2648efec02aad6de57b8516bf4e3e05b955b79091280c85c3f8ab1da00a74270",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "MorpherUserBlocking",
            "label": "userIsBlocked",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/MorpherUserBlocking.sol:11"
          },
          {
            "contract": "MorpherUserBlocking",
            "label": "state",
            "type": "t_contract(MorpherState)13179",
            "src": "../project:/contracts/MorpherUserBlocking.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(MorpherState)13179": {
            "label": "contract MorpherState"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7a8493f874fd50bdc5a661d4780f57657615e55fec5ddee240cb362c71040346": {
      "address": "0x06F7657A1e7B8CD74789979E2fc59B6f27dE9E7B",
      "txHash": "0xada0c77f8ba6b38b37b2dbf9f07b10ef13f30468c1f836b926d7b5a29244f76a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "MorpherToken",
            "label": "morpherAccessControl",
            "type": "t_contract(MorpherAccessControl)5211",
            "src": "../project:/contracts/MorpherToken.sol:12"
          },
          {
            "contract": "MorpherToken",
            "label": "_totalTokensOnOtherChain",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherToken.sol:23"
          },
          {
            "contract": "MorpherToken",
            "label": "_totalTokensInPositions",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherToken.sol:24"
          },
          {
            "contract": "MorpherToken",
            "label": "_restrictTransfers",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherToken.sol:25"
          },
          {
            "contract": "MorpherToken",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../project:/contracts/MorpherToken.sol:31"
          },
          {
            "contract": "MorpherToken",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../project:/contracts/MorpherToken.sol:32"
          },
          {
            "contract": "MorpherToken",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)2124_storage)",
            "src": "../project:/contracts/MorpherToken.sol:37"
          },
          {
            "contract": "MorpherToken",
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "type": "t_bytes32",
            "src": "../project:/contracts/MorpherToken.sol:43"
          }
        ],
        "types": {
          "t_contract(MorpherAccessControl)5211": {
            "label": "contract MorpherAccessControl"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(Counter)2124_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2124_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "61a1579257501e5d1796f9977345c7ab764b549a4c62cd158295a42eb7cda091": {
      "address": "0x7dA619dECcfB431C0367f5d31a8219284917f8c8",
      "txHash": "0x65084ec25b3692d59e255880c57c1b2d8d11be4794d2bdd2b9035d7363651d0c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "MorpherStaking",
            "label": "state",
            "type": "t_contract(MorpherState)13179",
            "src": "../project:/contracts/MorpherStaking.sol:19"
          },
          {
            "contract": "MorpherStaking",
            "label": "poolShareValue",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:30"
          },
          {
            "contract": "MorpherStaking",
            "label": "lastReward",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:31"
          },
          {
            "contract": "MorpherStaking",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:32"
          },
          {
            "contract": "MorpherStaking",
            "label": "interestRates",
            "type": "t_mapping(t_uint256,t_struct(InterestRate)11645_storage)",
            "src": "../project:/contracts/MorpherStaking.sol:39"
          },
          {
            "contract": "MorpherStaking",
            "label": "numInterestRates",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:40"
          },
          {
            "contract": "MorpherStaking",
            "label": "lockupPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:42"
          },
          {
            "contract": "MorpherStaking",
            "label": "minimumStake",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:43"
          },
          {
            "contract": "MorpherStaking",
            "label": "stakingAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherStaking.sol:45"
          },
          {
            "contract": "MorpherStaking",
            "label": "marketIdStakingMPH",
            "type": "t_bytes32",
            "src": "../project:/contracts/MorpherStaking.sol:46"
          },
          {
            "contract": "MorpherStaking",
            "label": "poolShares",
            "type": "t_mapping(t_address,t_struct(PoolShares)11665_storage)",
            "src": "../project:/contracts/MorpherStaking.sol:52"
          }
        ],
        "types": {
          "t_contract(MorpherState)13179": {
            "label": "contract MorpherState"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(InterestRate)11645_storage)": {
            "label": "mapping(uint256 => struct MorpherStaking.InterestRate)"
          },
          "t_struct(InterestRate)11645_storage": {
            "label": "struct MorpherStaking.InterestRate",
            "members": [
              {
                "label": "validFrom",
                "type": "t_uint256"
              },
              {
                "label": "rate",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(PoolShares)11665_storage)": {
            "label": "mapping(address => struct MorpherStaking.PoolShares)"
          },
          "t_struct(PoolShares)11665_storage": {
            "label": "struct MorpherStaking.PoolShares",
            "members": [
              {
                "label": "numPoolShares",
                "type": "t_uint256"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "075771862d87dc05e76d2ba4556b81c13192bec5f9a6bd34149eb134f0368f48": {
      "address": "0x2e21DC99bA7FdDc7dEdbC8CC758303D699EF9C4e",
      "txHash": "0x43754d70d9c367d35085fe3d376de06898f58af167fbd46d55ec0b4127faab8f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "morpherState",
            "type": "t_contract(MorpherState)13179",
            "src": "../project:/contracts/MorpherTradeEngine.sol:26"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "orderNonce",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherTradeEngine.sol:42"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "lastOrderId",
            "type": "t_bytes32",
            "src": "../project:/contracts/MorpherTradeEngine.sol:43"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "deployedTimeStamp",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherTradeEngine.sol:44"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "escrowOpenOrderEnabled",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherTradeEngine.sol:46"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "priceLockDeactivatedMarket",
            "type": "t_mapping(t_bytes32,t_struct(PriceLock)14536_storage)",
            "src": "../project:/contracts/MorpherTradeEngine.sol:57"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "orders",
            "type": "t_mapping(t_bytes32,t_struct(order)14567_storage)",
            "src": "../project:/contracts/MorpherTradeEngine.sol:92"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "portfolio",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(position)14610_storage))",
            "src": "../project:/contracts/MorpherTradeEngine.sol:111"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "exposureByMarket",
            "type": "t_mapping(t_bytes32,t_struct(hasExposure)14628_storage)",
            "src": "../project:/contracts/MorpherTradeEngine.sol:122"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "interestRates",
            "type": "t_mapping(t_uint256,t_struct(InterestRate)14533_storage)",
            "src": "../project:/contracts/MorpherTradeEngine.sol:124"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "numInterestRates",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherTradeEngine.sol:125"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)2124_storage)",
            "src": "../project:/contracts/MorpherTradeEngine.sol:129"
          }
        ],
        "types": {
          "t_contract(MorpherState)13179": {
            "label": "contract MorpherState"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(PriceLock)14536_storage)": {
            "label": "mapping(bytes32 => struct MorpherTradeEngine.PriceLock)"
          },
          "t_struct(PriceLock)14536_storage": {
            "label": "struct MorpherTradeEngine.PriceLock",
            "members": [
              {
                "label": "lockedPrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(order)14567_storage)": {
            "label": "mapping(bytes32 => struct MorpherTradeEngine.order)"
          },
          "t_struct(order)14567_storage": {
            "label": "struct MorpherTradeEngine.order",
            "members": [
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "marketId",
                "type": "t_bytes32"
              },
              {
                "label": "closeSharesAmount",
                "type": "t_uint256"
              },
              {
                "label": "openMPHTokenAmount",
                "type": "t_uint256"
              },
              {
                "label": "tradeDirection",
                "type": "t_bool"
              },
              {
                "label": "liquidationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "marketPrice",
                "type": "t_uint256"
              },
              {
                "label": "marketSpread",
                "type": "t_uint256"
              },
              {
                "label": "orderLeverage",
                "type": "t_uint256"
              },
              {
                "label": "timeStamp",
                "type": "t_uint256"
              },
              {
                "label": "orderEscrowAmount",
                "type": "t_uint256"
              },
              {
                "label": "modifyPosition",
                "type": "t_struct(OrderModifier)14588_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(OrderModifier)14588_storage": {
            "label": "struct MorpherTradeEngine.OrderModifier",
            "members": [
              {
                "label": "longSharesOrder",
                "type": "t_uint256"
              },
              {
                "label": "shortSharesOrder",
                "type": "t_uint256"
              },
              {
                "label": "balanceDown",
                "type": "t_uint256"
              },
              {
                "label": "balanceUp",
                "type": "t_uint256"
              },
              {
                "label": "newLongShares",
                "type": "t_uint256"
              },
              {
                "label": "newShortShares",
                "type": "t_uint256"
              },
              {
                "label": "newMeanEntryPrice",
                "type": "t_uint256"
              },
              {
                "label": "newMeanEntrySpread",
                "type": "t_uint256"
              },
              {
                "label": "newMeanEntryLeverage",
                "type": "t_uint256"
              },
              {
                "label": "newLiquidationPrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(position)14610_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct MorpherTradeEngine.position))"
          },
          "t_mapping(t_bytes32,t_struct(position)14610_storage)": {
            "label": "mapping(bytes32 => struct MorpherTradeEngine.position)"
          },
          "t_struct(position)14610_storage": {
            "label": "struct MorpherTradeEngine.position",
            "members": [
              {
                "label": "lastUpdated",
                "type": "t_uint256"
              },
              {
                "label": "longShares",
                "type": "t_uint256"
              },
              {
                "label": "shortShares",
                "type": "t_uint256"
              },
              {
                "label": "meanEntryPrice",
                "type": "t_uint256"
              },
              {
                "label": "meanEntrySpread",
                "type": "t_uint256"
              },
              {
                "label": "meanEntryLeverage",
                "type": "t_uint256"
              },
              {
                "label": "liquidationPrice",
                "type": "t_uint256"
              },
              {
                "label": "positionHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(hasExposure)14628_storage)": {
            "label": "mapping(bytes32 => struct MorpherTradeEngine.hasExposure)"
          },
          "t_struct(hasExposure)14628_storage": {
            "label": "struct MorpherTradeEngine.hasExposure",
            "members": [
              {
                "label": "maxMappingIndex",
                "type": "t_uint256"
              },
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "addy",
                "type": "t_mapping(t_uint256,t_address)"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_struct(InterestRate)14533_storage)": {
            "label": "mapping(uint256 => struct MorpherTradeEngine.InterestRate)"
          },
          "t_struct(InterestRate)14533_storage": {
            "label": "struct MorpherTradeEngine.InterestRate",
            "members": [
              {
                "label": "validFrom",
                "type": "t_uint256"
              },
              {
                "label": "rate",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Counter)2124_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)2124_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bd10eb88711484a0d866153f16e089e92d2ed76e74ed4e4ac6582bd14b943066": {
      "address": "0xab3f0F7BDAD627605808E6c6f1D5F0aC8Ea22071",
      "txHash": "0x84c407ead183baab94d742cd8f1d6aadb8460536a471ffb3f31e2a87df12c4d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "MorpherOracle",
            "label": "state",
            "type": "t_contract(MorpherState)13179",
            "src": "../project:/contracts/MorpherOracle.sol:33"
          },
          {
            "contract": "MorpherOracle",
            "label": "useWhiteList",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherOracle.sol:35"
          },
          {
            "contract": "MorpherOracle",
            "label": "gasForCallback",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherOracle.sol:37"
          },
          {
            "contract": "MorpherOracle",
            "label": "callBackCollectionAddress",
            "type": "t_address_payable",
            "src": "../project:/contracts/MorpherOracle.sol:39"
          },
          {
            "contract": "MorpherOracle",
            "label": "callBackAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/MorpherOracle.sol:41"
          },
          {
            "contract": "MorpherOracle",
            "label": "whiteList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/MorpherOracle.sol:42"
          },
          {
            "contract": "MorpherOracle",
            "label": "priceBelow",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/MorpherOracle.sol:44"
          },
          {
            "contract": "MorpherOracle",
            "label": "priceAbove",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/MorpherOracle.sol:45"
          },
          {
            "contract": "MorpherOracle",
            "label": "goodFrom",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/MorpherOracle.sol:46"
          },
          {
            "contract": "MorpherOracle",
            "label": "goodUntil",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/MorpherOracle.sol:47"
          },
          {
            "contract": "MorpherOracle",
            "label": "orderCancellationRequested",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "../project:/contracts/MorpherOracle.sol:49"
          },
          {
            "contract": "MorpherOracle",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)2124_storage)",
            "src": "../project:/contracts/MorpherOracle.sol:71"
          },
          {
            "contract": "MorpherOracle",
            "label": "msgSenderOverride",
            "type": "t_address",
            "src": "../project:/contracts/MorpherOracle.sol:102"
          },
          {
            "contract": "MorpherOracle",
            "label": "closeOrderIdSwapToToken",
            "type": "t_mapping(t_bytes32,t_struct(TokenPermitEIP712Struct)9449_storage)",
            "src": "../project:/contracts/MorpherOracle.sol:104"
          },
          {
            "contract": "MorpherOracle",
            "label": "wMaticAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherOracle.sol:108"
          },
          {
            "contract": "MorpherOracle",
            "label": "delistMarketFromIx",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherOracle.sol:821"
          }
        ],
        "types": {
          "t_contract(MorpherState)13179": {
            "label": "contract MorpherState"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_address,t_struct(Counter)2124_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)2124_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(TokenPermitEIP712Struct)9449_storage)": {
            "label": "mapping(bytes32 => struct MorpherOracle.TokenPermitEIP712Struct)"
          },
          "t_struct(TokenPermitEIP712Struct)9449_storage": {
            "label": "struct MorpherOracle.TokenPermitEIP712Struct",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "minOutValue",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "v",
                "type": "t_uint8"
              },
              {
                "label": "r",
                "type": "t_bytes32"
              },
              {
                "label": "s",
                "type": "t_bytes32"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
