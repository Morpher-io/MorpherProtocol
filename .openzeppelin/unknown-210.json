{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xb5C552E2Bf688140B30D0118527e068d997cf1a6",
    "txHash": "0xac539802faf363ae37a186462785331321f840584cf3836c3e5484b10956a4d5"
  },
  "proxies": [
    {
      "address": "0x1FFBDe2EfCE60362Af57b0F8Baa6BbbEa4B55057",
      "txHash": "0xb899b834c650769cb47b653ff394e26817080225ebb20d4de6c47f5956c2d0eb",
      "kind": "transparent"
    },
    {
      "address": "0xc8C10DE9De872E61Ef69F89e018C71B2A9ABe0e4",
      "txHash": "0x56b8f32a3c62c6da97bb051474169dae362e75e5c57a6a785fafc7b0be6b7d25",
      "kind": "transparent"
    },
    {
      "address": "0x5F36783B6962501A6102CBcb4F91f04fB372Ab00",
      "txHash": "0x298ae1dd99abbf4e3636a0fb5990893892d7bb4d8df7e073d36401c7ca3d7cf8",
      "kind": "transparent"
    },
    {
      "address": "0x3B9919135c3615db524F8552F8968Cc537fB6C9c",
      "txHash": "0x568f8adf929ab2602302defaafff77d75d4213f21e9ac6f9d0ac356def09ec44",
      "kind": "transparent"
    },
    {
      "address": "0xBf2004F1A66F7D5f0941992262D7819CDDb142C6",
      "txHash": "0xea13f005b3e1b2692a3005bb2abe336e6ae5129e7e006d0ca0a93f07ad26cbcc",
      "kind": "transparent"
    },
    {
      "address": "0xa1bbaE686eCdE4F61DaF1f40bf4FB81F4BC60f40",
      "txHash": "0x094dfb4bf227b76b76de45918214323c7a13e04915f8be8d16ec505cc7c52972",
      "kind": "transparent"
    },
    {
      "address": "0xE5c6B22760c82F813664540D073988744A3cA56E",
      "txHash": "0x2e693142deadf2240e8e99a32c439ba30ace6af455bd110201b9e69a5503807c",
      "kind": "transparent"
    },
    {
      "address": "0x24ADc9877059dfc5140097b3D9b6D6AC022fDEf3",
      "txHash": "0x730370f63c1cac174c53062c959833c1ce80e0ca76ef03f894c66898c9fa104d",
      "kind": "transparent"
    },
    {
      "address": "0xC0B0e278f214a76334d23A958219220d02a23096",
      "txHash": "0xb0042e8221f72840a97819b4c89bb49c6d3735b977f29ed260443b85dba4a021",
      "kind": "transparent"
    },
    {
      "address": "0x2BD68DA45015aded895C03153edB203746EF2A8E",
      "txHash": "0x6da126710f6b3aaebbf63bb02250004b7f9d9bc1f00a9390415acdedf4b62cbc",
      "kind": "transparent"
    },
    {
      "address": "0xfd23A56452f301E534e9Fc88Bb71cBEE71938cee",
      "txHash": "0xfd13e171650037f9b8534e4d305944018e696c873f4ed22bf4def8c0566a524d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c9a38e9c4f7e52e75516b0da9566c883e05b57422b071392928b139aff059a54": {
      "address": "0x64A21E062f7Aec612ad691c9f4Dc32C317e26c8e",
      "txHash": "0x06fcd0b0c9fd6a762509135cca09173ac27013c95b8b09391affcb6658430a33",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2888_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(AddressSet)2888_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2888_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2587_storage"
              }
            ]
          },
          "t_struct(Set)2587_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "02cf6bac03c06157899b47c0f8a42b891133fe0b96fb7e23205cb9d15672ade7": {
      "address": "0x1b3fc3Dc80836EBdA379431346E7f51845873Bfe",
      "txHash": "0xb7cb724f782a6ac48621907905dcb9eeb67bb61a35ef539f0236c282a696323b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "MorpherState",
            "label": "morpherAccessControlAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:15"
          },
          {
            "contract": "MorpherState",
            "label": "morpherAirdropAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:16"
          },
          {
            "contract": "MorpherState",
            "label": "morpherBridgeAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:17"
          },
          {
            "contract": "MorpherState",
            "label": "morpherFaucetAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:18"
          },
          {
            "contract": "MorpherState",
            "label": "morpherGovernanceAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:19"
          },
          {
            "contract": "MorpherState",
            "label": "morpherMintingLimiterAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:20"
          },
          {
            "contract": "MorpherState",
            "label": "morpherOracleAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:21"
          },
          {
            "contract": "MorpherState",
            "label": "morpherStakingAddress",
            "type": "t_address_payable",
            "src": "../project:/contracts/MorpherState.sol:22"
          },
          {
            "contract": "MorpherState",
            "label": "morpherTokenAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:23"
          },
          {
            "contract": "MorpherState",
            "label": "morpherTradeEngineAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:24"
          },
          {
            "contract": "MorpherState",
            "label": "morpherUserBlockingAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:25"
          },
          {
            "contract": "MorpherState",
            "label": "morpherRewards",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:35"
          },
          {
            "contract": "MorpherState",
            "label": "maximumLeverage",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:36"
          },
          {
            "contract": "MorpherState",
            "label": "rewardBasisPoints",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:41"
          },
          {
            "contract": "MorpherState",
            "label": "lastRewardTime",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:42"
          },
          {
            "contract": "MorpherState",
            "label": "sideChainMerkleRoot",
            "type": "t_bytes32",
            "src": "../project:/contracts/MorpherState.sol:44"
          },
          {
            "contract": "MorpherState",
            "label": "sideChainMerkleRootWrittenAtTime",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:45"
          },
          {
            "contract": "MorpherState",
            "label": "mainChainWithdrawLimit24",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:48"
          },
          {
            "contract": "MorpherState",
            "label": "marketActive",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "../project:/contracts/MorpherState.sol:50"
          },
          {
            "contract": "MorpherState",
            "label": "lastRequestBlock",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MorpherState.sol:56"
          },
          {
            "contract": "MorpherState",
            "label": "numberOfRequests",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MorpherState.sol:57"
          },
          {
            "contract": "MorpherState",
            "label": "numberOfRequestsLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:58"
          },
          {
            "contract": "MorpherState",
            "label": "mainChain",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherState.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "796dcaf0a3570f4a079cdfa5637a090672a427148202eabcd8f311a5c62cf3bd": {
      "address": "0x5097F60EC24c6e22a4b12c77844F2020AEe509aB",
      "txHash": "0x5b3e9815f847876242736600dfa3834e7c478ef259444ceb1803e4af60a01772",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "MorpherUserBlocking",
            "label": "userIsBlocked",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/MorpherUserBlocking.sol:11"
          },
          {
            "contract": "MorpherUserBlocking",
            "label": "state",
            "type": "t_contract(MorpherState)10288",
            "src": "../project:/contracts/MorpherUserBlocking.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(MorpherState)10288": {
            "label": "contract MorpherState"
          }
        }
      }
    },
    "5a1e98a40a40cff7fbb47a9dfd0eaa9f889abc24fc7cbd94f525a6f6fcf1a7a7": {
      "address": "0x6D30A09ED1D19e41Aef9E7EFb71660Bb5C3e243e",
      "txHash": "0x1d87c0db283fa35f0dd86250633fc2b32da42ffd22ab97f7baa5dbf4e82fcf46",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "MorpherToken",
            "label": "morpherAccessControl",
            "type": "t_contract(MorpherAccessControl)3779",
            "src": "../project:/contracts/MorpherToken.sol:10"
          },
          {
            "contract": "MorpherToken",
            "label": "_totalTokensOnOtherChain",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherToken.sol:20"
          },
          {
            "contract": "MorpherToken",
            "label": "_totalTokensInPositions",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherToken.sol:21"
          },
          {
            "contract": "MorpherToken",
            "label": "_restrictTransfers",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherToken.sol:22"
          }
        ],
        "types": {
          "t_contract(MorpherAccessControl)3779": {
            "label": "contract MorpherAccessControl"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "bbf6c8e331e83420b5e9ab179d1cd58c7bde425b788ef6357402d8e0a1c41a91": {
      "address": "0x4614787f55947AF88d820A536694DCAf3fc1a4A8",
      "txHash": "0x3a53202dd50c261882e8b938c1fb74ae63b3d4d4811c426239760686a48a2bc1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "MorpherStaking",
            "label": "state",
            "type": "t_contract(MorpherState)10288",
            "src": "../project:/contracts/MorpherStaking.sol:19"
          },
          {
            "contract": "MorpherStaking",
            "label": "poolShareValue",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:30"
          },
          {
            "contract": "MorpherStaking",
            "label": "lastReward",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:31"
          },
          {
            "contract": "MorpherStaking",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:32"
          },
          {
            "contract": "MorpherStaking",
            "label": "interestRates",
            "type": "t_mapping(t_uint256,t_struct(InterestRate)8838_storage)",
            "src": "../project:/contracts/MorpherStaking.sol:39"
          },
          {
            "contract": "MorpherStaking",
            "label": "numInterestRates",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:40"
          },
          {
            "contract": "MorpherStaking",
            "label": "lockupPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:42"
          },
          {
            "contract": "MorpherStaking",
            "label": "minimumStake",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherStaking.sol:43"
          },
          {
            "contract": "MorpherStaking",
            "label": "stakingAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherStaking.sol:45"
          },
          {
            "contract": "MorpherStaking",
            "label": "marketIdStakingMPH",
            "type": "t_bytes32",
            "src": "../project:/contracts/MorpherStaking.sol:46"
          },
          {
            "contract": "MorpherStaking",
            "label": "poolShares",
            "type": "t_mapping(t_address,t_struct(PoolShares)8858_storage)",
            "src": "../project:/contracts/MorpherStaking.sol:52"
          }
        ],
        "types": {
          "t_contract(MorpherState)10288": {
            "label": "contract MorpherState"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(InterestRate)8838_storage)": {
            "label": "mapping(uint256 => struct MorpherStaking.InterestRate)"
          },
          "t_struct(InterestRate)8838_storage": {
            "label": "struct MorpherStaking.InterestRate",
            "members": [
              {
                "label": "validFrom",
                "type": "t_uint256"
              },
              {
                "label": "rate",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(PoolShares)8858_storage)": {
            "label": "mapping(address => struct MorpherStaking.PoolShares)"
          },
          "t_struct(PoolShares)8858_storage": {
            "label": "struct MorpherStaking.PoolShares",
            "members": [
              {
                "label": "numPoolShares",
                "type": "t_uint256"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1cf60136b462b2648c985adb2246013400b7aef9325ad645072e95e8442f31d0": {
      "address": "0xcd36Efa41093894B20d72DAD6D17B38b4Ee39121",
      "txHash": "0x8d440ef0cb098330b25e8df1436357eb7cbb84dd2b276b25ce1fd373539c2f4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "morpherState",
            "type": "t_contract(MorpherState)10288",
            "src": "../project:/contracts/MorpherTradeEngine.sol:22"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "orderNonce",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherTradeEngine.sol:36"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "lastOrderId",
            "type": "t_bytes32",
            "src": "../project:/contracts/MorpherTradeEngine.sol:37"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "deployedTimeStamp",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherTradeEngine.sol:38"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "escrowOpenOrderEnabled",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherTradeEngine.sol:40"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "priceLockDeactivatedMarket",
            "type": "t_mapping(t_bytes32,t_struct(PriceLock)10730_storage)",
            "src": "../project:/contracts/MorpherTradeEngine.sol:46"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "orders",
            "type": "t_mapping(t_bytes32,t_struct(order)10761_storage)",
            "src": "../project:/contracts/MorpherTradeEngine.sol:83"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "portfolio",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(position)10804_storage))",
            "src": "../project:/contracts/MorpherTradeEngine.sol:102"
          },
          {
            "contract": "MorpherTradeEngine",
            "label": "exposureByMarket",
            "type": "t_mapping(t_bytes32,t_struct(hasExposure)10822_storage)",
            "src": "../project:/contracts/MorpherTradeEngine.sol:113"
          }
        ],
        "types": {
          "t_contract(MorpherState)10288": {
            "label": "contract MorpherState"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(PriceLock)10730_storage)": {
            "label": "mapping(bytes32 => struct MorpherTradeEngine.PriceLock)"
          },
          "t_struct(PriceLock)10730_storage": {
            "label": "struct MorpherTradeEngine.PriceLock",
            "members": [
              {
                "label": "lockedPrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(order)10761_storage)": {
            "label": "mapping(bytes32 => struct MorpherTradeEngine.order)"
          },
          "t_struct(order)10761_storage": {
            "label": "struct MorpherTradeEngine.order",
            "members": [
              {
                "label": "userId",
                "type": "t_address"
              },
              {
                "label": "marketId",
                "type": "t_bytes32"
              },
              {
                "label": "closeSharesAmount",
                "type": "t_uint256"
              },
              {
                "label": "openMPHTokenAmount",
                "type": "t_uint256"
              },
              {
                "label": "tradeDirection",
                "type": "t_bool"
              },
              {
                "label": "liquidationTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "marketPrice",
                "type": "t_uint256"
              },
              {
                "label": "marketSpread",
                "type": "t_uint256"
              },
              {
                "label": "orderLeverage",
                "type": "t_uint256"
              },
              {
                "label": "timeStamp",
                "type": "t_uint256"
              },
              {
                "label": "orderEscrowAmount",
                "type": "t_uint256"
              },
              {
                "label": "modifyPosition",
                "type": "t_struct(OrderModifier)10782_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(OrderModifier)10782_storage": {
            "label": "struct MorpherTradeEngine.OrderModifier",
            "members": [
              {
                "label": "longSharesOrder",
                "type": "t_uint256"
              },
              {
                "label": "shortSharesOrder",
                "type": "t_uint256"
              },
              {
                "label": "balanceDown",
                "type": "t_uint256"
              },
              {
                "label": "balanceUp",
                "type": "t_uint256"
              },
              {
                "label": "newLongShares",
                "type": "t_uint256"
              },
              {
                "label": "newShortShares",
                "type": "t_uint256"
              },
              {
                "label": "newMeanEntryPrice",
                "type": "t_uint256"
              },
              {
                "label": "newMeanEntrySpread",
                "type": "t_uint256"
              },
              {
                "label": "newMeanEntryLeverage",
                "type": "t_uint256"
              },
              {
                "label": "newLiquidationPrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(position)10804_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct MorpherTradeEngine.position))"
          },
          "t_mapping(t_bytes32,t_struct(position)10804_storage)": {
            "label": "mapping(bytes32 => struct MorpherTradeEngine.position)"
          },
          "t_struct(position)10804_storage": {
            "label": "struct MorpherTradeEngine.position",
            "members": [
              {
                "label": "lastUpdated",
                "type": "t_uint256"
              },
              {
                "label": "longShares",
                "type": "t_uint256"
              },
              {
                "label": "shortShares",
                "type": "t_uint256"
              },
              {
                "label": "meanEntryPrice",
                "type": "t_uint256"
              },
              {
                "label": "meanEntrySpread",
                "type": "t_uint256"
              },
              {
                "label": "meanEntryLeverage",
                "type": "t_uint256"
              },
              {
                "label": "liquidationPrice",
                "type": "t_uint256"
              },
              {
                "label": "positionHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(hasExposure)10822_storage)": {
            "label": "mapping(bytes32 => struct MorpherTradeEngine.hasExposure)"
          },
          "t_struct(hasExposure)10822_storage": {
            "label": "struct MorpherTradeEngine.hasExposure",
            "members": [
              {
                "label": "maxMappingIndex",
                "type": "t_uint256"
              },
              {
                "label": "index",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "addy",
                "type": "t_mapping(t_uint256,t_address)"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "029d18fe6babec93740f8e4d47b1c6ae5f6aaf84e5d7af8040b519008998c4d7": {
      "address": "0x3BF64Ed68F306cfFCBb8040606449421De87e345",
      "txHash": "0x0ff45e4b8d9d70a2512137ce6cc2b9183d6a35ee23b8c0f1893ba120d473e5e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "MorpherOracle",
            "label": "state",
            "type": "t_contract(MorpherState)10288",
            "src": "../project:/contracts/MorpherOracle.sol:24"
          },
          {
            "contract": "MorpherOracle",
            "label": "useWhiteList",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherOracle.sol:26"
          },
          {
            "contract": "MorpherOracle",
            "label": "gasForCallback",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherOracle.sol:28"
          },
          {
            "contract": "MorpherOracle",
            "label": "callBackCollectionAddress",
            "type": "t_address_payable",
            "src": "../project:/contracts/MorpherOracle.sol:30"
          },
          {
            "contract": "MorpherOracle",
            "label": "callBackAddress",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/MorpherOracle.sol:32"
          },
          {
            "contract": "MorpherOracle",
            "label": "whiteList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/MorpherOracle.sol:33"
          },
          {
            "contract": "MorpherOracle",
            "label": "priceBelow",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/MorpherOracle.sol:35"
          },
          {
            "contract": "MorpherOracle",
            "label": "priceAbove",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/MorpherOracle.sol:36"
          },
          {
            "contract": "MorpherOracle",
            "label": "goodFrom",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/MorpherOracle.sol:37"
          },
          {
            "contract": "MorpherOracle",
            "label": "goodUntil",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../project:/contracts/MorpherOracle.sol:38"
          },
          {
            "contract": "MorpherOracle",
            "label": "orderCancellationRequested",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "../project:/contracts/MorpherOracle.sol:40"
          },
          {
            "contract": "MorpherOracle",
            "label": "delistMarketFromIx",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherOracle.sol:465"
          }
        ],
        "types": {
          "t_contract(MorpherState)10288": {
            "label": "contract MorpherState"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "01553b5f284aff23246e12f9fdcafbf5447e50fc1ae862102827ae68a15d662b": {
      "address": "0x2d0806E7001918BA6b29DA21F3fCdf219e8239A5",
      "txHash": "0xcf1e81ed272a94fb92188552bbb52305c058c1f8c6aee3318f1554f1a22493a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "MorpherBridge",
            "label": "state",
            "type": "t_contract(MorpherState)10288",
            "src": "../project:/contracts/MorpherBridge.sol:31"
          },
          {
            "contract": "MorpherBridge",
            "label": "previousBridge",
            "type": "t_contract(MorpherBridge)6991",
            "src": "../project:/contracts/MorpherBridge.sol:32"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitPerUserDaily",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:34"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitPerUserMonthly",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:35"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitPerUserYearly",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:36"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitGlobalDaily",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:38"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitGlobalMonthly",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:39"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitGlobalYearly",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:40"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalPerUserPerDay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/MorpherBridge.sol:42"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalPerUserPerMonth",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/MorpherBridge.sol:43"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalPerUserPerYear",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/MorpherBridge.sol:44"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalsGlobalDaily",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/MorpherBridge.sol:46"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalsGlobalMonthly",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/MorpherBridge.sol:47"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalsGlobalYearly",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/MorpherBridge.sol:48"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalData",
            "type": "t_struct(WithdrawalDataStruct)5151_storage",
            "src": "../project:/contracts/MorpherBridge.sol:58"
          },
          {
            "contract": "MorpherBridge",
            "label": "inactivityPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:60"
          },
          {
            "contract": "MorpherBridge",
            "label": "recoveryEnabled",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherBridge.sol:61"
          },
          {
            "contract": "MorpherBridge",
            "label": "claimFromInactivity",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "../project:/contracts/MorpherBridge.sol:62"
          },
          {
            "contract": "MorpherBridge",
            "label": "swapRouter",
            "type": "t_contract(ISwapRouter)3510",
            "src": "../project:/contracts/MorpherBridge.sol:64"
          },
          {
            "contract": "MorpherBridge",
            "label": "tokenSentToLinkedChain",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(TokensTransferredStruct)5173_storage))",
            "src": "../project:/contracts/MorpherBridge.sol:74"
          },
          {
            "contract": "MorpherBridge",
            "label": "tokenClaimedOnThisChain",
            "type": "t_mapping(t_address,t_struct(TokensTransferredStruct)5173_storage)",
            "src": "../project:/contracts/MorpherBridge.sol:75"
          },
          {
            "contract": "MorpherBridge",
            "label": "bridgeNonce",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:77"
          }
        ],
        "types": {
          "t_contract(MorpherState)10288": {
            "label": "contract MorpherState"
          },
          "t_contract(MorpherBridge)6991": {
            "label": "contract MorpherBridge"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(WithdrawalDataStruct)5151_storage": {
            "label": "struct MorpherBridge.WithdrawalDataStruct",
            "members": [
              {
                "label": "merkleRoot",
                "type": "t_bytes32"
              },
              {
                "label": "lastUpdatedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_contract(ISwapRouter)3510": {
            "label": "contract ISwapRouter"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(TokensTransferredStruct)5173_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MorpherBridge.TokensTransferredStruct))"
          },
          "t_mapping(t_uint256,t_struct(TokensTransferredStruct)5173_storage)": {
            "label": "mapping(uint256 => struct MorpherBridge.TokensTransferredStruct)"
          },
          "t_struct(TokensTransferredStruct)5173_storage": {
            "label": "struct MorpherBridge.TokensTransferredStruct",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "lastTransferAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokensTransferredStruct)5173_storage)": {
            "label": "mapping(address => struct MorpherBridge.TokensTransferredStruct)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
