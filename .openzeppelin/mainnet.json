{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x78920530cC8C7057a2Db850D6F45ceF5Bf3867D9",
    "txHash": "0xd0a711bb75d3f964aa28c9339cdc0cf02f4acc9dfabc3031a91ab20d40e53648"
  },
  "proxies": [
    {
      "address": "0xD6bFA0868A901BE396b9A294dE78441b240a45b8",
      "txHash": "0xbfb3ad06eafb982e0eee3499396424757c1404e5dcaaa2eb0489bc7f9f10e1ba",
      "kind": "transparent"
    },
    {
      "address": "0x88A610554eb712DCD91a47108aE59028B3De6614",
      "txHash": "0x09430be15f1feddc1347968155eb0a679a4fb7595b35a5880f3d5f871457c2c5",
      "kind": "transparent"
    },
    {
      "address": "0xf8B5b1699A00EDfdB6F15524646Bd5071bA419Fb",
      "txHash": "0x365902663454cc0e86d35bb0f8f6452b03cfe45d7498549178e53a1b1c84e55c",
      "kind": "transparent"
    },
    {
      "address": "0x005cb9Ad7C713bfF25ED07F3d9e1C3945e543cd5",
      "txHash": "0x08fb71447151fe2a194bda333977f45005fcfeeae0f2120e5643a1045e12f2f5",
      "kind": "transparent"
    },
    {
      "address": "0xB2b8B7b23B1C5F329adf0B4e5cB51c668Aa1cce1",
      "txHash": "0x4d1851c60924a50e5a22d784189f4736b97c2e5a9f97e3d96881c566b8988aab",
      "kind": "transparent"
    },
    {
      "address": "0xc57DCD0d3324bDB8e1577E69C29ba0e26F3B284c",
      "txHash": "0xb0c6964bcaa8f5354fc3a12edbaf7ccca6fa91e3b09fc656067572fda8cc1f0a",
      "kind": "transparent"
    },
    {
      "address": "0x334643882B849A286E01c386C3e033B1b5c75164",
      "txHash": "0xa6bee2d795deae9ad9dd4c7bca7643c03d80e5dcd7a45fd1b2b9807035ce5773",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1588a4656ce06afc8f4984ac9e004a285a63a2208b764bd44c473290f8e1d5d2": {
      "address": "0x8f5cC114f49C9A76481b996Fda310321e1872556",
      "txHash": "0xea1bba70aa8dec8762c5ce80c97b3e7998f997360560e48ae3263c1242a04c3b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2965_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(AddressSet)2965_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2965_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2664_storage"
              }
            ]
          },
          "t_struct(Set)2664_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "dc85ddf5ea5a729f6fe6fb958cdcc8d4ad7d48c1cf9253ada719091bd93b56f6": {
      "address": "0xa9D56Fc5524E9e52792da9c3b2a74aA35F3D6806",
      "txHash": "0xde32430f57b0246885baebd1dc66f27c9881f1c3724d87471490556a33a1f815",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "MorpherState",
            "label": "morpherAccessControlAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:16"
          },
          {
            "contract": "MorpherState",
            "label": "morpherAirdropAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:17"
          },
          {
            "contract": "MorpherState",
            "label": "morpherBridgeAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:18"
          },
          {
            "contract": "MorpherState",
            "label": "morpherFaucetAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:19"
          },
          {
            "contract": "MorpherState",
            "label": "morpherGovernanceAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:20"
          },
          {
            "contract": "MorpherState",
            "label": "morpherMintingLimiterAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:21"
          },
          {
            "contract": "MorpherState",
            "label": "morpherOracleAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:22"
          },
          {
            "contract": "MorpherState",
            "label": "morpherStakingAddress",
            "type": "t_address_payable",
            "src": "../project:/contracts/MorpherState.sol:23"
          },
          {
            "contract": "MorpherState",
            "label": "morpherTokenAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:24"
          },
          {
            "contract": "MorpherState",
            "label": "morpherTradeEngineAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:25"
          },
          {
            "contract": "MorpherState",
            "label": "morpherUserBlockingAddress",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:26"
          },
          {
            "contract": "MorpherState",
            "label": "morpherRewards",
            "type": "t_address",
            "src": "../project:/contracts/MorpherState.sol:36"
          },
          {
            "contract": "MorpherState",
            "label": "maximumLeverage",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:37"
          },
          {
            "contract": "MorpherState",
            "label": "rewardBasisPoints",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:42"
          },
          {
            "contract": "MorpherState",
            "label": "lastRewardTime",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:43"
          },
          {
            "contract": "MorpherState",
            "label": "sideChainMerkleRoot",
            "type": "t_bytes32",
            "src": "../project:/contracts/MorpherState.sol:45"
          },
          {
            "contract": "MorpherState",
            "label": "sideChainMerkleRootWrittenAtTime",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:46"
          },
          {
            "contract": "MorpherState",
            "label": "mainChainWithdrawLimit24",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:49"
          },
          {
            "contract": "MorpherState",
            "label": "marketActive",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "../project:/contracts/MorpherState.sol:51"
          },
          {
            "contract": "MorpherState",
            "label": "lastRequestBlock",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MorpherState.sol:57"
          },
          {
            "contract": "MorpherState",
            "label": "numberOfRequests",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MorpherState.sol:58"
          },
          {
            "contract": "MorpherState",
            "label": "numberOfRequestsLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherState.sol:59"
          },
          {
            "contract": "MorpherState",
            "label": "mainChain",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherState.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "151ba1a8334a053ca3da0e4c908a24de3feabf916a05a15b1022860569ba6300": {
      "address": "0x745d46a256FD0ade7d4B21F5db910182F2534a24",
      "txHash": "0x98fe05298a40f92c75586a40aa2398e96012a08a537ef4d0ca818584f8da7c2a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "MorpherUserBlocking",
            "label": "userIsBlocked",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/MorpherUserBlocking.sol:11"
          },
          {
            "contract": "MorpherUserBlocking",
            "label": "state",
            "type": "t_contract(MorpherState)10639",
            "src": "../project:/contracts/MorpherUserBlocking.sol:12"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(MorpherState)10639": {
            "label": "contract MorpherState"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "78fa45524fe16ab0c0787b28c54b97a38a3e33566273dec9ec60d7083dbbd35b": {
      "address": "0xAE7379810e7c399F081284164C79e884C5235359",
      "txHash": "0x67e7fd506edffa77fa4356dbe551fa8672ffb9bd9efc30b567fddeb575ce7cec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "MorpherToken",
            "label": "morpherAccessControl",
            "type": "t_contract(MorpherAccessControl)3856",
            "src": "../project:/contracts/MorpherToken.sol:10"
          },
          {
            "contract": "MorpherToken",
            "label": "_totalTokensOnOtherChain",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherToken.sol:20"
          },
          {
            "contract": "MorpherToken",
            "label": "_totalTokensInPositions",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherToken.sol:21"
          },
          {
            "contract": "MorpherToken",
            "label": "_restrictTransfers",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherToken.sol:22"
          }
        ],
        "types": {
          "t_contract(MorpherAccessControl)3856": {
            "label": "contract MorpherAccessControl"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d497ccbf021a371aeacd885db0dfcd84625981d699eb9b75baeb102fea392b24": {
      "address": "0x2Ff56722B83752c9309Fcc0c78AF7cB619dA986B",
      "txHash": "0x07e312fa552b5ecfc1e789f41056e280aed9be4d74e28578786aa2d5473d2f21",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "MorpherBridge",
            "label": "state",
            "type": "t_contract(MorpherState)10639",
            "src": "../project:/contracts/MorpherBridge.sol:31"
          },
          {
            "contract": "MorpherBridge",
            "label": "previousBridge",
            "type": "t_contract(MorpherBridge)7240",
            "src": "../project:/contracts/MorpherBridge.sol:32"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitPerUserDaily",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:34"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitPerUserMonthly",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:35"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitPerUserYearly",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:36"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitGlobalDaily",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:38"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitGlobalMonthly",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:39"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalLimitGlobalYearly",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:40"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalPerUserPerDay",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/MorpherBridge.sol:42"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalPerUserPerMonth",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/MorpherBridge.sol:43"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalPerUserPerYear",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/MorpherBridge.sol:44"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalsGlobalDaily",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/MorpherBridge.sol:46"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalsGlobalMonthly",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/MorpherBridge.sol:47"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalsGlobalYearly",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/MorpherBridge.sol:48"
          },
          {
            "contract": "MorpherBridge",
            "label": "withdrawalData",
            "type": "t_struct(WithdrawalDataStruct)5228_storage",
            "src": "../project:/contracts/MorpherBridge.sol:58"
          },
          {
            "contract": "MorpherBridge",
            "label": "inactivityPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:60"
          },
          {
            "contract": "MorpherBridge",
            "label": "recoveryEnabled",
            "type": "t_bool",
            "src": "../project:/contracts/MorpherBridge.sol:61"
          },
          {
            "contract": "MorpherBridge",
            "label": "claimFromInactivity",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "../project:/contracts/MorpherBridge.sol:62"
          },
          {
            "contract": "MorpherBridge",
            "label": "swapRouter",
            "type": "t_contract(ISwapRouter)3587",
            "src": "../project:/contracts/MorpherBridge.sol:64"
          },
          {
            "contract": "MorpherBridge",
            "label": "tokenSentToLinkedChain",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(TokensTransferredStruct)5250_storage))",
            "src": "../project:/contracts/MorpherBridge.sol:74"
          },
          {
            "contract": "MorpherBridge",
            "label": "tokenClaimedOnThisChain",
            "type": "t_mapping(t_address,t_struct(TokensTransferredStruct)5250_storage)",
            "src": "../project:/contracts/MorpherBridge.sol:75"
          },
          {
            "contract": "MorpherBridge",
            "label": "bridgeNonce",
            "type": "t_uint256",
            "src": "../project:/contracts/MorpherBridge.sol:77"
          }
        ],
        "types": {
          "t_contract(MorpherState)10639": {
            "label": "contract MorpherState"
          },
          "t_contract(MorpherBridge)7240": {
            "label": "contract MorpherBridge"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(WithdrawalDataStruct)5228_storage": {
            "label": "struct MorpherBridge.WithdrawalDataStruct",
            "members": [
              {
                "label": "merkleRoot",
                "type": "t_bytes32"
              },
              {
                "label": "lastUpdatedAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_contract(ISwapRouter)3587": {
            "label": "contract ISwapRouter"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(TokensTransferredStruct)5250_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MorpherBridge.TokensTransferredStruct))"
          },
          "t_mapping(t_uint256,t_struct(TokensTransferredStruct)5250_storage)": {
            "label": "mapping(uint256 => struct MorpherBridge.TokensTransferredStruct)"
          },
          "t_struct(TokensTransferredStruct)5250_storage": {
            "label": "struct MorpherBridge.TokensTransferredStruct",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "lastTransferAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(TokensTransferredStruct)5250_storage)": {
            "label": "mapping(address => struct MorpherBridge.TokensTransferredStruct)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "da165c848121bfeb3dab18693944e2f98eb92244b77ee7db53765643d2f35f2a": {
      "address": "0xE409f27e977E6bC10cc0a064eD3004F78A40A648",
      "txHash": "0x71667a956396dc4342f618bdb1d981ac3af02db156067c1f8933cea9e1ec1610",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "40c9d0351a776c98248c7031c4c419c512d2806c467cdb9b65146b8465c42cc8": {
      "address": "0xB76CF532378a03Eb587cc614044222611b97B140",
      "txHash": "0x5c62cf8bfd3da6638f6d8da41d13d1f022117d5ff4636ce4a9aadb95c2e8be19",
      "layout": {
        "storage": [],
        "types": {}
      }
    }
  }
}
